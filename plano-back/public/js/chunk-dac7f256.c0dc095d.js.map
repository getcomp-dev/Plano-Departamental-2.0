{"version":3,"sources":["webpack:///./node_modules/lodash-es/sortBy.js","webpack:///./src/services/pdfs/helpers/index.js","webpack:///./src/services/pdfs/cargaDocentes.js","webpack:///./src/assets/images/logo-ufjf.png","webpack:///./src/assets/images/logo-dcc.png"],"names":["sortBy","collection","iteratees","length","checkTurmaLab","turma","result","store","getters","Laboratorios","forEach","lab","id","Sala1","Sala2","isNull","checkTurmaHorarioLabs","horario","Horario1","Horario2","sala","checkTurmaHorario","generateDocentesText","d1","find","state","docente","Docentes","Docente1","d2","Docente2","undefined","nome","generateHorariosText","divider","horario1","AllHorarios","horario2","horariosResult","generateSalasText","sala1","AllSalas","sala2","salasResult","getSomatorioDeVagasDaTurma","pedidos","pedido","Pedidos","vagasP","vagasNP","p","vagasPeriodizadas","vagasNaoPeriodizadas","horasAula","disciplina","parseInt","cargaPratica","cargaTeorica","getCursoById","cursoId","curso","Cursos","getPedidosDaTurma","pedidosFiltered","filter","Curso","codigo","filterTurmasDoCurso","turmas","turmasDoCurso","pedidoFounded","push","totalVagas","orderBy","getTurmasDoPeriodo","periodoId","turmasDoPeriodo","AllTurmas","periodo","getTurmasDaSala","salaId","is1Semestre","value","is2Semestre","getHeaderImages","imageToDataUrl","urlLogoDcc","logoDcc","urlLogoUfjf","logoUfjf","makePageHeader","images","plano","title","subtitle","columns","image","fit","alignment","width","text","bold","fontSize","ano","margin","makeEmptyPageWarning","style","table","widths","headerRows","color","body","toUpperCase","layout","vLineWidth","pdfCargaDocentes","data","docentesCarga","docenteSemAlocacaoCarga","periodosAtivos","tables","headerImages","semestre1EstaAtivo","some","semestre2EstaAtivo","ehCargaParcial","docentesOrdered","possuiAlgumaTurma","semestre1","semestre2","cargasPos","cargaDoDocente","creditos1Semestre","creditos2Semestre","tableBodyDocente","makeDocenteBodyHeader","SemestresLetivos","semestre","letra","creditosDaTurma","carga","trimestre","programa","creditos","hLineWidth","tableBodyDocenteSemAlocacao","docDefinition","info","content","footer","currentPage","pageCount","Date","now","toLocaleString","toString","pdfMake","default","pdfFonts","vfs","createPdf","open","module","exports"],"mappings":"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","file":"js/chunk-dac7f256.c0dc095d.js","sourcesContent":["import baseFlatten from './_baseFlatten.js';\nimport baseOrderBy from './_baseOrderBy.js';\nimport baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nexport default sortBy;\n","import store from \"@/store\";\r\nimport { isNull, filter, find, orderBy, sortBy } from \"lodash-es\";\r\nimport { imageToDataUrl } from \"@/common/utils\";\r\nimport urlLogoUfjf from \"@/assets/images/logo-ufjf.png\";\r\nimport urlLogoDcc from \"@/assets/images/logo-dcc.png\";\r\n\r\nexport function checkTurmaLab(turma) {\r\n  let result = 0;\r\n  store.getters.Laboratorios.forEach((lab) => {\r\n    if (lab.id === turma.Sala1) result += 1;\r\n    if (lab.id === turma.Sala2) result += 2;\r\n  });\r\n\r\n  if (result === 1) {\r\n    if (isNull(turma.Sala2)) {\r\n      return 4;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function checkTurmaHorarioLabs(turma, horario, lab) {\r\n  if (turma.Horario1 == horario || turma.Horario2 == horario) {\r\n    let sala = checkTurmaLab(turma);\r\n    switch (sala) {\r\n    case 0:\r\n      return false;\r\n    case 1:\r\n      if (turma.Horario1 == horario) return true;\r\n      else return false;\r\n    case 2:\r\n      if (turma.Horario2 == horario) return true;\r\n      else return false;\r\n    case 3:\r\n      if (turma.Sala1 === lab) {\r\n        if (turma.Horario1 == horario) return true;\r\n      } else if (turma.Sala2 === lab) {\r\n        if (turma.Horario2 == horario) return true;\r\n      }\r\n      return false;\r\n    case 4:\r\n      return true;\r\n    }\r\n    return true;\r\n  } else return false;\r\n}\r\n\r\nexport function checkTurmaHorario(turma, horario) {\r\n  if (turma.Horario1 === horario || turma.Horario2 === horario) return true;\r\n  else return false;\r\n}\r\n\r\nexport function generateDocentesText(turma) {\r\n  let d1 = find(store.state.docente.Docentes, { id: turma.Docente1 });\r\n  let d2 = find(store.state.docente.Docentes, { id: turma.Docente2 });\r\n  if (d1 === undefined && d2 === undefined) {\r\n    return \"\";\r\n  } else if (d2 === undefined) {\r\n    return `${d1.nome}`;\r\n  } else if (d1 === undefined) {\r\n    return `${d2.nome}`;\r\n  } else {\r\n    return `${d1.nome} \\n ${d2.nome}`;\r\n  }\r\n}\r\n\r\nexport function generateHorariosText(turma, divider = \"\\n\") {\r\n  const horario1 = find(store.getters.AllHorarios, [\"id\", turma.Horario1]);\r\n  const horario2 = find(store.getters.AllHorarios, [\"id\", turma.Horario2]);\r\n  let horariosResult = undefined;\r\n\r\n  if (horario1 === undefined && horario2 === undefined) horariosResult = \"\";\r\n  else if (horario2 === undefined) horariosResult = horario1.horario;\r\n  else if (horario1 === undefined) horariosResult = horario2.horario;\r\n  else horariosResult = horario1.horario + divider + horario2.horario;\r\n\r\n  return horariosResult;\r\n}\r\n\r\nexport function generateSalasText(turma) {\r\n  const sala1 = find(store.getters.AllSalas, [\"id\", turma.Sala1]);\r\n  const sala2 = find(store.getters.AllSalas, [\"id\", turma.Sala2]);\r\n  let salasResult = undefined;\r\n\r\n  if (sala1 === undefined && sala2 === undefined) salasResult = \"\";\r\n  else if (sala2 === undefined) salasResult = sala1.nome;\r\n  else if (sala1 === undefined) salasResult = sala2.nome;\r\n  else salasResult = sala1.nome + \"\\n\" + sala2.nome;\r\n\r\n  return salasResult;\r\n}\r\n\r\nexport function getSomatorioDeVagasDaTurma(turma) {\r\n  let pedidos = store.state.pedido.Pedidos[turma.id];\r\n  let vagasP = 0;\r\n  let vagasNP = 0;\r\n  pedidos.forEach((p) => {\r\n    vagasP += p.vagasPeriodizadas;\r\n    vagasNP += p.vagasNaoPeriodizadas;\r\n  });\r\n  return vagasP + vagasNP;\r\n}\r\n\r\nexport function horasAula(disciplina) {\r\n  return (parseInt(disciplina.cargaPratica) + parseInt(disciplina.cargaTeorica)) * 15;\r\n}\r\n\r\nexport function getCursoById(cursoId) {\r\n  return find(store.state.curso.Cursos, [\"id\", cursoId]);\r\n}\r\n\r\nexport function getPedidosDaTurma(turma) {\r\n  const pedidosFiltered = filter(\r\n    store.state.pedido.Pedidos[turma.id],\r\n    (pedido) => pedido.vagasPeriodizadas > 0 || pedido.vagasNaoPeriodizadas > 0\r\n  );\r\n  return sortBy(pedidosFiltered, (pedido) => getCursoById(pedido.Curso).codigo);\r\n}\r\n\r\nexport function filterTurmasDoCurso(turmas, cursoId) {\r\n  const turmasDoCurso = [];\r\n\r\n  turmas.forEach((turma) => {\r\n    const pedidoFounded = find(store.getters.Pedidos[turma.id], [\"Curso\", cursoId]);\r\n\r\n    if (pedidoFounded.vagasPeriodizadas > 0 || pedidoFounded.vagasNaoPeriodizadas > 0) {\r\n      turmasDoCurso.push({\r\n        ...turma,\r\n        totalVagas: pedidoFounded.vagasPeriodizadas + pedidoFounded.vagasNaoPeriodizadas,\r\n      });\r\n    }\r\n  });\r\n\r\n  return orderBy(turmasDoCurso, [\"disciplina.codigo\", \"letra\"]);\r\n}\r\n\r\nexport function getTurmasDoPeriodo(periodoId) {\r\n  const turmasDoPeriodo = store.getters.AllTurmas.filter((turma) => turma.periodo === periodoId);\r\n\r\n  return orderBy(turmasDoPeriodo, [\"disciplina.codigo\", \"letra\"]);\r\n}\r\n\r\nexport function getTurmasDaSala(turmas, salaId) {\r\n  return filter(turmas, (turma) => turma.Sala1 === salaId || turma.Sala2 === salaId);\r\n}\r\n\r\nexport function is1Semestre(value) {\r\n  return value === 1 || value === 2;\r\n}\r\n\r\nexport function is2Semestre(value) {\r\n  return value === 3 || value === 4;\r\n}\r\n\r\nexport async function getHeaderImages() {\r\n  const logoDcc = await imageToDataUrl(urlLogoDcc);\r\n  const logoUfjf = await imageToDataUrl(urlLogoUfjf);\r\n\r\n  return [logoDcc, logoUfjf];\r\n}\r\n\r\n//Pdfmake helpers\r\nexport function makePageHeader({ images, plano, title, subtitle }) {\r\n  return [\r\n    {\r\n      columns: [\r\n        { image: images[0] || \"\", fit: [60, 60], alignment: \"left\", width: \"16%\" },\r\n        [\r\n          {\r\n            text: \"Departamento de Ciência da Computação\",\r\n            alignment: \"center\",\r\n            bold: true,\r\n            fontSize: 10,\r\n          },\r\n          { text: title, alignment: \"center\", bold: true, fontSize: 10 },\r\n          {\r\n            text: plano ? `Plano ${plano.ano} - ${plano.nome}` : \"\",\r\n            alignment: \"center\",\r\n            bold: true,\r\n            fontSize: 10,\r\n          },\r\n        ],\r\n        { image: images[1] || \"\", fit: [60, 60], alignment: \"right\", width: \"16%\" },\r\n      ],\r\n    },\r\n    { text: \"\", margin: [0, 0, 0, 10] },\r\n    { text: subtitle, alignment: \"center\", bold: true, fontSize: 10, margin: [0, 0, 0, 10] },\r\n  ];\r\n}\r\n\r\nexport function makeEmptyPageWarning(text) {\r\n  return {\r\n    style: \"tableExample\",\r\n    table: {\r\n      widths: [\"*\"],\r\n      headerRows: 1,\r\n      color: \"#426\",\r\n      body: [\r\n        [\r\n          {\r\n            text: text ? text.toUpperCase() : \"Nenhuma turma para ser exibida\".toUpperCase(),\r\n            alignment: \"center\",\r\n            bold: true,\r\n            fontSize: 9,\r\n          },\r\n        ],\r\n      ],\r\n    },\r\n    layout: { vLineWidth: () => 0 },\r\n  };\r\n}\r\n","import {\r\n  makePageHeader,\r\n  makeEmptyPageWarning,\r\n  generateHorariosText,\r\n  getHeaderImages,\r\n  is1Semestre,\r\n  is2Semestre,\r\n} from \"./helpers\";\r\nimport store from \"@/store\";\r\nimport { orderBy, some } from \"lodash-es\";\r\n\r\nexport async function pdfCargaDocentes(data) {\r\n  const { docentesCarga, docenteSemAlocacaoCarga, periodosAtivos, plano } = data;\r\n  const tables = [];\r\n  const headerImages = await getHeaderImages();\r\n  const semestre1EstaAtivo = some(periodosAtivos, [\"semestreId\", 1]);\r\n  const semestre2EstaAtivo = some(periodosAtivos, [\"semestreId\", 2]);\r\n  const ehCargaParcial = periodosAtivos.length !== 4; //Se não possui algum periodos é uma carga parcial\r\n\r\n  tables.push(\r\n    makePageHeader({\r\n      images: headerImages,\r\n      plano,\r\n      title: \"Relação de disciplinas ministradas pelos docentes\",\r\n    })\r\n  );\r\n\r\n  if ((!docentesCarga.length && !docenteSemAlocacaoCarga) || !periodosAtivos.length) {\r\n    tables.push(makeEmptyPageWarning());\r\n  } else {\r\n    const docentesOrdered = orderBy(docentesCarga, \"nome\");\r\n    let possuiAlgumaTurma = false;\r\n\r\n    docentesOrdered.forEach((docente) => {\r\n      if (\r\n        docente.turmas.semestre1.length ||\r\n        docente.turmas.semestre2.length ||\r\n        docente.cargasPos.semestre2.length ||\r\n        docente.cargasPos.semestre2.length\r\n      ) {\r\n        possuiAlgumaTurma = true;\r\n        const cargaDoDocente = docente.creditos1Semestre + docente.creditos2Semestre;\r\n        tables.push({\r\n          style: \"tableExample\",\r\n          table: {\r\n            widths: [\"*\", 75],\r\n            headerRows: 1,\r\n            color: \"#426\",\r\n            body: [\r\n              [\r\n                { text: docente.nome, alignment: \"left\", fontSize: 9, bold: true },\r\n                {\r\n                  text: `Carga ${ehCargaParcial ? \"parcial\" : \"total\"}: ${cargaDoDocente}`,\r\n                  alignment: \"center\",\r\n                  fontSize: 9,\r\n                  bold: true,\r\n                },\r\n              ],\r\n            ],\r\n          },\r\n          layout: { vLineWidth: () => 0 },\r\n        });\r\n        const tableBodyDocente = [makeDocenteBodyHeader()];\r\n\r\n        store.getters.SemestresLetivos.forEach((semestre) => {\r\n          docente.turmas[`semestre${semestre.id}`].forEach((turma) => {\r\n            tableBodyDocente.push([\r\n              \"\",\r\n              { text: turma.periodo, fontSize: 6, alignment: \"left\" },\r\n              { text: turma.disciplina.codigo, fontSize: 6, alignment: \"left\" },\r\n              { text: turma.disciplina.nome, fontSize: 6, alignment: \"left\" },\r\n              { text: turma.letra, fontSize: 6, alignment: \"center\" },\r\n              { text: generateHorariosText(turma, \" / \"), fontSize: 6, alignment: \"center\" },\r\n              {\r\n                text: is1Semestre(turma.periodo) ? turma.creditosDaTurma : \"\",\r\n                fontSize: 6,\r\n                alignment: \"center\",\r\n              },\r\n              {\r\n                text: is2Semestre(turma.periodo) ? turma.creditosDaTurma : \"\",\r\n                fontSize: 6,\r\n                alignment: \"center\",\r\n              },\r\n            ]);\r\n          });\r\n\r\n          docente.cargasPos[`semestre${semestre.id}`].forEach((carga) => {\r\n            tableBodyDocente.push([\r\n              \"\",\r\n              { text: carga.trimestre, fontSize: 6, alignment: \"left\" },\r\n              \"\",\r\n              { text: \"DISCIPLINA DO \" + carga.programa, fontSize: 6, alignment: \"left\" },\r\n              \"\",\r\n              \"\",\r\n              {\r\n                text: is1Semestre(carga.trimestre) ? carga.creditos : \"\",\r\n                fontSize: 6,\r\n                alignment: \"center\",\r\n              },\r\n              {\r\n                text: is2Semestre(carga.trimestre) ? carga.creditos : \"\",\r\n                fontSize: 6,\r\n                alignment: \"center\",\r\n              },\r\n            ]);\r\n          });\r\n        });\r\n\r\n        tableBodyDocente.push([\r\n          \"\",\r\n          \"\",\r\n          \"\",\r\n          \"\",\r\n          \"\",\r\n          {\r\n            text: \"CARGA POR SEMESTRE:\",\r\n            fontSize: 6,\r\n            alignment: \"right\",\r\n            bold: true,\r\n            margin: [0, 5, 0, 0],\r\n          },\r\n          {\r\n            text: semestre1EstaAtivo ? docente.creditos1Semestre : \"\",\r\n            fontSize: 6,\r\n            alignment: \"center\",\r\n            bold: true,\r\n            margin: [0, 5, 0, 0],\r\n          },\r\n          {\r\n            text: semestre2EstaAtivo ? docente.creditos2Semestre : \"\",\r\n            fontSize: 6,\r\n            alignment: \"center\",\r\n            bold: true,\r\n            margin: [0, 5, 0, 0],\r\n          },\r\n        ]);\r\n\r\n        tables.push({\r\n          style: \"tableExample\",\r\n          table: {\r\n            widths: [20, 8, 40, \"*\", 24, 104, 32, 32],\r\n            headerRows: 1,\r\n            color: \"#426\",\r\n            body: tableBodyDocente,\r\n          },\r\n          layout: { vLineWidth: () => 0, hLineWidth: () => 0 },\r\n          margin: [0, 0, 0, 5],\r\n        });\r\n      }\r\n    });\r\n\r\n    if (docenteSemAlocacaoCarga && docenteSemAlocacaoCarga.turmas.length) {\r\n      possuiAlgumaTurma = true;\r\n      const cargaDoDocente =\r\n        docenteSemAlocacaoCarga.creditos1Semestre + docenteSemAlocacaoCarga.creditos2Semestre;\r\n      tables.push({\r\n        style: \"tableExample\",\r\n        table: {\r\n          widths: [\"*\", 75],\r\n          headerRows: 1,\r\n          color: \"#426\",\r\n          body: [\r\n            [\r\n              { text: docenteSemAlocacaoCarga.nome, alignment: \"left\", fontSize: 9, bold: true },\r\n              {\r\n                text: `Carga ${ehCargaParcial ? \"parcial\" : \"total\"} : ${cargaDoDocente}`,\r\n                alignment: \"center\",\r\n                fontSize: 9,\r\n                bold: true,\r\n              },\r\n            ],\r\n          ],\r\n        },\r\n        layout: {\r\n          vLineWidth: () => 0,\r\n        },\r\n      });\r\n      const tableBodyDocenteSemAlocacao = [makeDocenteBodyHeader()];\r\n\r\n      docenteSemAlocacaoCarga.turmas.forEach((turma) => {\r\n        tableBodyDocenteSemAlocacao.push([\r\n          \"\",\r\n          { text: turma.periodo, fontSize: 6, alignment: \"left\" },\r\n          { text: turma.disciplina.codigo, fontSize: 6, alignment: \"left\" },\r\n          { text: turma.disciplina.nome, fontSize: 6, alignment: \"left\" },\r\n          { text: turma.letra, fontSize: 6, alignment: \"center\" },\r\n          { text: generateHorariosText(turma, \" / \"), fontSize: 6, alignment: \"center\" },\r\n          {\r\n            text: is1Semestre(turma.periodo) ? turma.creditosDaTurma : \"\",\r\n            fontSize: 6,\r\n            alignment: \"center\",\r\n          },\r\n          {\r\n            text: is2Semestre(turma.periodo) ? turma.creditosDaTurma : \"\",\r\n            fontSize: 6,\r\n            alignment: \"center\",\r\n          },\r\n        ]);\r\n      });\r\n\r\n      tableBodyDocenteSemAlocacao.push([\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        {\r\n          text: \"CARGA POR SEMESTRE:\",\r\n          fontSize: 6,\r\n          alignment: \"right\",\r\n          bold: true,\r\n          margin: [0, 5, 0, 0],\r\n        },\r\n        {\r\n          text: semestre1EstaAtivo ? docenteSemAlocacaoCarga.creditos1Semestre : \"\",\r\n          fontSize: 6,\r\n          alignment: \"center\",\r\n          bold: true,\r\n          margin: [0, 5, 0, 0],\r\n        },\r\n        {\r\n          text: semestre2EstaAtivo ? docenteSemAlocacaoCarga.creditos2Semestre : \"\",\r\n          fontSize: 6,\r\n          alignment: \"center\",\r\n          bold: true,\r\n          margin: [0, 5, 0, 0],\r\n        },\r\n      ]);\r\n\r\n      tables.push({\r\n        style: \"tableExample\",\r\n        table: {\r\n          widths: [20, 8, 40, \"*\", 24, 104, 32, 32],\r\n          headerRows: 1,\r\n          color: \"#426\",\r\n          body: tableBodyDocenteSemAlocacao,\r\n        },\r\n        layout: { vLineWidth: () => 0, hLineWidth: () => 0 },\r\n        margin: [0, 0, 0, 5],\r\n      });\r\n    }\r\n\r\n    if (!possuiAlgumaTurma) {\r\n      tables.push(makeEmptyPageWarning());\r\n    }\r\n  }\r\n\r\n  const docDefinition = {\r\n    info: { title: \"Carga Docentes\" },\r\n    content: tables,\r\n    footer: (currentPage, pageCount) => {\r\n      return {\r\n        columns: [\r\n          {\r\n            text: new Date(Date.now()).toLocaleString(),\r\n            margin: [30, 10, 0, 0],\r\n            fontSize: 8,\r\n            alignment: \"left\",\r\n          },\r\n          {\r\n            text: currentPage.toString() + \" de \" + pageCount,\r\n            alignment: \"right\",\r\n            margin: [0, 10, 30, 0],\r\n            fontSize: 8,\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  };\r\n\r\n  const { default: pdfMake } = await import(\"pdfmake/build/pdfmake\");\r\n  const { default: pdfFonts } = await import(\"pdfmake/build/vfs_fonts\");\r\n  pdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n  pdfMake.createPdf(docDefinition).open();\r\n}\r\n\r\nfunction makeDocenteBodyHeader() {\r\n  return [\r\n    \"\",\r\n    { text: \"S.\", fontSize: 8, bold: true },\r\n    { text: \"Cód.\", fontSize: 8, bold: true },\r\n    { text: \"Disciplina\", fontSize: 8, bold: true },\r\n    { text: \"Turma\", alignment: \"center\", fontSize: 8, bold: true },\r\n    { text: \"Horário\", alignment: \"center\", fontSize: 8, bold: true },\r\n    { text: \"CS1\", alignment: \"center\", fontSize: 8, bold: true },\r\n    { text: \"CS2\", alignment: \"center\", fontSize: 8, bold: true },\r\n  ];\r\n}\r\n","module.exports = __webpack_public_path__ + \"img/logo-ufjf.3cf76d59.png\";","module.exports = __webpack_public_path__ + \"img/logo-dcc.119b091b.png\";"],"sourceRoot":""}