{"version":3,"sources":["webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/ImportPlano.vue?0d44","webpack:///src/pages/gerenciar/Planos/ModalNovoPlano/ImportPlano.vue","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/ImportPlano.vue?e5d6","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/ImportPlano.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_m","staticClass","ref","attrs","staticRenderFns","_v","name","props","plano","closeModal","methods","turmasIsEqual","turma1","letra","turma2","Disciplina","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACJ,EAAIM,GAAG,GAAGF,EAAG,MAAM,CAACG,YAAY,YAAY,CAACH,EAAG,MAAM,CAACG,YAAY,cAAc,CAACP,EAAIM,GAAG,GAAGF,EAAG,QAAQ,CAACI,IAAI,gBAAgBD,YAAY,0BAA0BE,MAAM,CAAC,GAAK,UAAU,KAAO,OAAO,OAAS,cAAcL,EAAG,MAAM,CAACG,YAAY,YAAY,CAACH,EAAG,MAAM,CAACG,YAAY,kBAAkB,CAACP,EAAIM,GAAG,GAAGF,EAAG,QAAQ,CAACI,IAAI,gBAAgBD,YAAY,0BAA0BE,MAAM,CAAC,GAAK,UAAU,KAAO,OAAO,OAAS,iBAC5gBC,EAAkB,CAAC,WAAa,IAAIV,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACG,YAAY,yBAAyB,CAACP,EAAIW,GAAG,kCAAkCP,EAAG,IAAI,CAACJ,EAAIW,GAAG,UAAUX,EAAIW,GAAG,sEAAsEP,EAAG,MAAMJ,EAAIW,GAAG,2KAA2K,WAAa,IAAIX,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,QAAQ,CAACK,MAAM,CAAC,IAAM,YAAY,CAACT,EAAIW,GAAG,iCAAiCP,EAAG,IAAI,CAACJ,EAAIW,GAAG,cAAcX,EAAIW,GAAG,iCAAiC,WAAa,IAAIX,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,QAAQ,CAACK,MAAM,CAAC,IAAM,YAAY,CAACT,EAAIW,GAAG,iCAAiCP,EAAG,IAAI,CAACJ,EAAIW,GAAG,cAAcX,EAAIW,GAAG,kC,k0DCwD74B,OACEC,KAAM,mBACNC,MAAO,CACLC,MAAO,CAAX,yBACIC,WAAY,CAAhB,4BAGEC,QAAS,EAAX,KACA,gBACA,cACA,cACA,wBACA,wBACA,oBACA,uBAPA,IAUI,kBAVJ,6LAWA,+BAXA,GAWA,EAXA,sBAYA,+BAZA,GAYA,EAZA,KAaA,KAbA,uBAcA,uBACA,aACA,oCAhBA,mDAsBA,kBAtBA,cAsBA,EAtBA,iBAuBA,kBAvBA,eAuBA,EAvBA,OAwBA,kBACA,kBAEA,4BACA,+BA5BA,UA8BA,oCA9BA,eA8BA,EA9BA,iBA+BA,oCA/BA,yBAgCA,oCAhCA,QAkCA,kBACA,uBACA,eACA,0CArCA,qDAwCA,uBACA,aACA,6BACA,oBA3CA,mCA8CA,yBA9CA,oJAkDI,qBAlDJ,oEAkDA,OAlDA,sGAmDA,SAnDA,iDAqDA,KACA,uBAtDA,IAwDA,GAxDA,4DAwDA,EAxDA,QAyDA,yBAEA,0BACA,EA5DA,4DA+DA,wBA/DA,kCAgEA,2CAhEA,iDAmEA,2BAnEA,eAmEA,EAnEA,iBAoEA,2CApEA,QAqEA,UArEA,uQA0EI,4BA1EJ,oEA0EA,OA1EA,0FA2EA,yBACA,EA5EA,gCA6EA,2DA7EA,6GAiFIC,cAjFJ,SAiFA,KACM,OAAOC,EAAOC,QAAUC,EAAOD,OAASD,EAAOG,aAAeD,EAAOC,eClJuT,I,YCO9XC,EAAY,eACd,EACAvB,EACAW,GACA,EACA,KACA,KACA,MAIa,aAAAY,E","file":"js/chunk-2d0f02af.d3fd58b9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),_c('div',{staticClass:\"form-row\"},[_c('div',{staticClass:\"form-group\"},[_vm._m(1),_c('input',{ref:\"input1periodo\",staticClass:\"w-100 form-control-file\",attrs:{\"id\":\"turmas1\",\"type\":\"file\",\"accept\":\".csv\"}})])]),_c('div',{staticClass:\"form-row\"},[_c('div',{staticClass:\"form-group col\"},[_vm._m(2),_c('input',{ref:\"input3periodo\",staticClass:\"w-100 form-control-file\",attrs:{\"id\":\"turmas3\",\"type\":\"file\",\"accept\":\".csv\"}})])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"alert alert-secondary\"},[_vm._v(\"\\n    Selecione arquivos\\n    \"),_c('b',[_vm._v(\".csv\")]),_vm._v(\"\\n    para importar as turmas de cada periodo do novo plano.\\n    \"),_c('br'),_vm._v(\"\\n    Note que o formato do arquivo requerido é o relatorio de plano departamental gerado pelo SIGA\\n    na página: Acadêmico > Consultas > Plano Departamental.\\n  \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{\"for\":\"turmas1\"}},[_vm._v(\"\\n        Turmas do\\n        \"),_c('b',[_vm._v(\"primeiro\")]),_vm._v(\"\\n        período:\\n      \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{\"for\":\"turmas2\"}},[_vm._v(\"\\n        Turmas do\\n        \"),_c('b',[_vm._v(\"terceiro\")]),_vm._v(\"\\n        período:\\n      \")])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <p class=\"alert alert-secondary\">\r\n      Selecione arquivos\r\n      <b>.csv</b>\r\n      para importar as turmas de cada periodo do novo plano.\r\n      <br />\r\n      Note que o formato do arquivo requerido é o relatorio de plano departamental gerado pelo SIGA\r\n      na página: Acadêmico > Consultas > Plano Departamental.\r\n    </p>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group\">\r\n        <label for=\"turmas1\">\r\n          Turmas do\r\n          <b>primeiro</b>\r\n          período:\r\n        </label>\r\n        <input\r\n          id=\"turmas1\"\r\n          type=\"file\"\r\n          ref=\"input1periodo\"\r\n          class=\"w-100 form-control-file\"\r\n          accept=\".csv\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <label for=\"turmas2\">\r\n          Turmas do\r\n          <b>terceiro</b>\r\n          período:\r\n        </label>\r\n        <input\r\n          id=\"turmas3\"\r\n          type=\"file\"\r\n          ref=\"input3periodo\"\r\n          class=\"w-100 form-control-file\"\r\n          accept=\".csv\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nimport { parseCSVFileToArray } from \"@/common/utils\";\r\nimport {\r\n  parseTurmaSIGAToTurma,\r\n  parseTurmaSIGAToPedido,\r\n  getKeysTurmaSIGA,\r\n  validateTurmasSIGA,\r\n} from \"@/common/utils/turmasSIGA\";\r\n\r\nexport default {\r\n  name: \"ModalImportPlano\",\r\n  props: {\r\n    plano: { type: Object, required: true },\r\n    closeModal: { type: Function, required: true },\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\r\n      \"createPlano\",\r\n      \"createTurma\",\r\n      \"createPedidoOferecido\",\r\n      \"initializeProgressBar\",\r\n      \"updateProgressBar\",\r\n      \"finishProgressBar\",\r\n    ]),\r\n\r\n    async handleImportPlano() {\r\n      const [file1Periodo] = this.$refs.input1periodo.files;\r\n      const [file3Periodo] = this.$refs.input3periodo.files;\r\n      if (!file1Periodo && !file3Periodo) {\r\n        this.pushNotification({\r\n          type: \"error\",\r\n          text: \"Nenhum arquivo selecionado\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const turmasFile1Periodo = await parseCSVFileToArray(file1Periodo);\r\n        const turmasFile3Periodo = await parseCSVFileToArray(file3Periodo);\r\n        validateTurmasSIGA(turmasFile1Periodo);\r\n        validateTurmasSIGA(turmasFile3Periodo);\r\n\r\n        this.initializeProgressBar({\r\n          finalValue: turmasFile1Periodo.length + turmasFile3Periodo.length,\r\n        });\r\n        const planoCreated = await this.createPlano({ data: this.plano });\r\n        await this.createTurmasFileSIGA(turmasFile1Periodo, planoCreated.id, 1);\r\n        await this.createTurmasFileSIGA(turmasFile3Periodo, planoCreated.id, 3);\r\n\r\n        this.closeModal();\r\n        this.pushNotification({\r\n          type: \"success\",\r\n          text: \"Plano criado e turmas importadas\",\r\n        });\r\n      } catch (error) {\r\n        this.pushNotification({\r\n          type: \"error\",\r\n          title: \"Erro ao criar plano!\",\r\n          text: error.message,\r\n        });\r\n      } finally {\r\n        await this.finishProgressBar();\r\n      }\r\n    },\r\n\r\n    async createTurmasFileSIGA(turmasSIGA, planoId, periodo) {\r\n      if (!turmasSIGA.length) return;\r\n\r\n      let currentTurma = {};\r\n      const keysTurmaSIGA = getKeysTurmaSIGA(turmasSIGA[0]);\r\n\r\n      for (const turmaSIGA of turmasSIGA) {\r\n        this.updateProgressBar();\r\n\r\n        const newTurma = parseTurmaSIGAToTurma(turmaSIGA, keysTurmaSIGA, planoId, periodo);\r\n        if (!newTurma) continue;\r\n\r\n        //Se a nova newTurma é igual a currentTurma, não cria a turma e apenas cria o pedido\r\n        if (this.turmasIsEqual(currentTurma, newTurma)) {\r\n          await this.handleCreatePedidoOferecido(turmaSIGA, keysTurmaSIGA, currentTurma.id);\r\n        } else {\r\n          //Se é uma turma nova então cria a turma, atualiza currentTurma e cria o pedido\r\n          const turmaCreated = await this.createTurma({ data: newTurma });\r\n          await this.handleCreatePedidoOferecido(turmaSIGA, keysTurmaSIGA, turmaCreated.id);\r\n          currentTurma = { ...turmaCreated };\r\n        }\r\n      }\r\n    },\r\n\r\n    async handleCreatePedidoOferecido(turmaSIGA, keysTurmaSIGA, turmaId) {\r\n      const pedidoOferecido = parseTurmaSIGAToPedido(turmaSIGA, keysTurmaSIGA, turmaId);\r\n      if (pedidoOferecido) {\r\n        await this.createPedidoOferecido({ data: pedidoOferecido }).catch(() => {});\r\n      }\r\n    },\r\n\r\n    turmasIsEqual(turma1, turma2) {\r\n      return turma1.letra === turma2.letra && turma1.Disciplina === turma2.Disciplina;\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImportPlano.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImportPlano.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ImportPlano.vue?vue&type=template&id=33169912&\"\nimport script from \"./ImportPlano.vue?vue&type=script&lang=js&\"\nexport * from \"./ImportPlano.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}