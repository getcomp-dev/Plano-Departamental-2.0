{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.string.includes.js","webpack:///./src/common/utils/turmasSIGA/parseTurmaSIGAToTurma.js","webpack:///./src/common/utils/turmasSIGA/parseTurmaSIGAToPedido.js","webpack:///./src/common/utils/turmasSIGA/validateTurmasSIGA.js","webpack:///./src/common/utils/turmasSIGA/getKeysTurmaSIGA.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./src/pages/validacoes/lancamentoSIGA/index.vue","webpack:///src/pages/validacoes/lancamentoSIGA/index.vue","webpack:///./src/pages/validacoes/lancamentoSIGA/index.vue?116e","webpack:///./src/pages/validacoes/lancamentoSIGA/index.vue?392e","webpack:///./node_modules/core-js/modules/_string-context.js"],"names":["$export","context","INCLUDES","P","F","includes","searchString","this","indexOf","arguments","length","undefined","parseTurmaSIGAToTurma","turmasSIGA","keysTurmaSIGA","planoId","periodo","newTurma","generateEmptyTurma","Plano","letra","setDisciplina","disciplinaCod","Disciplina","setHorariosESalas","horarioESala","turno1","setDocentes","docentes","turma","disciplinaCodigo","disciplinaFounded","find","store","getters","AllDisciplinas","id","creditoTotal","strHorarioESala","split","str1","str2","Horario1","findHorarioId","Horario2","findTurno","Sala1","findSalaId","Sala2","strDocentes","docente1Str","docente2Str","Docente1","findDocenteId","Docente2","horario1Id","horario2Id","some","HorariosNoturno","docenteNome","docenteFounded","AllDocentes","docente","normalizeText","nome","strHorario","dia","hora","sala","horario","covertDiaEHoraEmHorario","horarioFounded","AllHorarios","diaNormalized","trim","substring","horaInicial","horaFinal","horaInicialNormalized","horaFinalNormalized","strSala","strSalaNormalized","salaFounded","AllSalas","nomeNormalized","parseTurmaSIGAToPedido","turmaId","pedido","Turma","Curso","vagasOferecidas","vagasOcupadas","cursosFound","AllCursos","cursoCod","parseInt","vagas1","vagas2","validateTurmasSIGA","expectedKeys","Object","keys","Error","getKeysTurmaSIGA","turmaSIGA","i","key","MATCH","module","exports","KEY","re","e","f","render","_vm","_c","_self","staticClass","attrs","on","$event","$refs","modalAjuda","toggle","scopedSlots","_u","fn","ordenacaoConflitos","_v","proxy","_l","turmasConflitosOrdered","turmaConflito","_s","disciplina","codigo","conflitos","conflito","label","curso","siga","sistema","_e","$v","form","model","value","callback","$$v","$set","_n","expression","PeriodosLetivos","file","handleCompareTurmas","clearForm","ref","staticRenderFns","name","components","Card","ModalAjuda","VSelect","VOption","VInputFile","mixins","data","filePlano","turmasConflitos","order","type","validations","required","integer","methods","parseCSVFileToArray","turmasFile","turmasSIGANormalized","console","normalizeTurmasEPedidosSIGA","pedidoSIGA","turmasNormalized","currentTurma","searchConflitos","turmasSistema","turmaSistema","turmaConflitos","turmasConflitosFound","turmaSIGAFound","pedidoSistemaFound","pedidosDaTurmaSistema","filter","forEach","turmasAreEqual","turma1","turma2","docentesAreEqual","horariosAreEqual","computed","mapGetters","disciplinasGradeDCC1Periodo","disciplinasGradeFiltered","component","isRegExp","defined","that","NAME","TypeError","String"],"mappings":"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","file":"js/chunk-44fea651.a268ff2f.js","sourcesContent":["// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","import store from \"@/store\";\r\nimport { some, find } from \"lodash-es\";\r\nimport { generateEmptyTurma, normalizeText } from \"@/common/utils\";\r\n\r\nexport default function parseTurmaSIGAToTurma(turmasSIGA, keysTurmaSIGA, planoId, periodo) {\r\n  const newTurma = generateEmptyTurma({\r\n    periodo: periodo || null,\r\n    Plano: planoId || null,\r\n    letra: turmasSIGA[keysTurmaSIGA.letra] || null,\r\n  });\r\n  if (!newTurma.letra) return null;\r\n\r\n  setDisciplina(newTurma, turmasSIGA[keysTurmaSIGA.disciplinaCod]);\r\n  if (!newTurma.Disciplina) return null;\r\n\r\n  setHorariosESalas(newTurma, turmasSIGA[keysTurmaSIGA.horarioESala]);\r\n  if (!newTurma.turno1) return null;\r\n\r\n  setDocentes(newTurma, turmasSIGA[keysTurmaSIGA.docentes]);\r\n\r\n  return newTurma;\r\n}\r\n\r\n// helpers\r\nfunction setDisciplina(turma, disciplinaCodigo) {\r\n  if (!disciplinaCodigo) return;\r\n\r\n  const disciplinaFounded = find(store.getters.AllDisciplinas, [\"codigo\", disciplinaCodigo]);\r\n  if (disciplinaFounded) {\r\n    turma.Disciplina = disciplinaFounded.id;\r\n    turma.creditoTotal = disciplinaFounded.creditoTotal;\r\n  } else {\r\n    turma.Disciplina = null;\r\n  }\r\n}\r\n\r\nfunction setHorariosESalas(turma, strHorarioESala) {\r\n  if (!strHorarioESala) return;\r\n\r\n  const [str1, str2] = strHorarioESala.split(\";\");\r\n  turma.Horario1 = findHorarioId(str1);\r\n  if (turma.creditoTotal >= 4) turma.Horario2 = findHorarioId(str2);\r\n\r\n  turma.turno1 = findTurno(turma.Horario1, turma.Horario2);\r\n\r\n  if (turma.turno1 !== \"EAD\") {\r\n    turma.Sala1 = findSalaId(str1);\r\n    turma.Sala2 = findSalaId(str2);\r\n  }\r\n}\r\n\r\nfunction setDocentes(turma, strDocentes) {\r\n  if (!strDocentes) return;\r\n\r\n  const [docente1Str, docente2Str] = strDocentes.split(\";\");\r\n  turma.Docente1 = findDocenteId(docente1Str);\r\n  turma.Docente2 = findDocenteId(docente2Str);\r\n}\r\n\r\nfunction findTurno(horario1Id, horario2Id) {\r\n  if (!horario1Id && !horario2Id) {\r\n    return null;\r\n  } else if (horario1Id === 31) {\r\n    return \"EAD\";\r\n  } else if (\r\n    some(store.getters.HorariosNoturno, [\"id\", horario1Id]) ||\r\n    some(store.getters.HorariosNoturno, [\"id\", horario2Id])\r\n  ) {\r\n    return \"Noturno\";\r\n  } else {\r\n    return \"Diurno\";\r\n  }\r\n}\r\n\r\nfunction findDocenteId(docenteNome) {\r\n  if (!docenteNome) return null;\r\n\r\n  const docenteFounded = find(\r\n    store.getters.AllDocentes,\r\n    (docente) => normalizeText(docente.nome) === normalizeText(docenteNome)\r\n  );\r\n  return docenteFounded ? docenteFounded.id : null;\r\n}\r\n\r\nfunction findHorarioId(strHorario) {\r\n  if (!strHorario) return null;\r\n\r\n  const [dia, hora, sala] = strHorario.split(\",\");\r\n  const horario = covertDiaEHoraEmHorario(dia, hora);\r\n\r\n  if (horario) {\r\n    const horarioFounded = find(store.getters.AllHorarios, [\"horario\", horario]);\r\n    return horarioFounded ? horarioFounded.id : null;\r\n  }\r\n  //Caso não tenha achando nenhum horario, verifica se tem sala EAD\r\n  if (sala.includes(\"EAD\")) {\r\n    // console.log(\"Encotrou sala EAD\", sala);\r\n    return 31; //Id horario EAD\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction covertDiaEHoraEmHorario(dia, hora) {\r\n  if (!dia || !hora) return null;\r\n\r\n  let diaNormalized = null;\r\n  switch (dia.trim().substring(0, 3)) {\r\n  case \"SEG\":\r\n    diaNormalized = \"2a\";\r\n    break;\r\n  case \"TER\":\r\n    diaNormalized = \"3a\";\r\n    break;\r\n  case \"QUA\":\r\n    diaNormalized = \"4a\";\r\n    break;\r\n  case \"QUI\":\r\n    diaNormalized = \"5a\";\r\n    break;\r\n  case \"SEX\":\r\n    diaNormalized = \"6a\";\r\n    break;\r\n  case \"SAB\":\r\n    return \"EAD\"; //Se é sabado ja retorna EAD, pois não possui hora\r\n  default:\r\n    return null; //Se não achou ja retorna null e nem verifica hora\r\n  }\r\n\r\n  const [horaInicial, horaFinal] = hora.split(\"AS\");\r\n  if (!horaInicial || !horaFinal) return null;\r\n\r\n  const horaInicialNormalized = horaInicial.trim().substring(0, 2);\r\n  const horaFinalNormalized = horaFinal.trim().substring(0, 2);\r\n\r\n  return `${diaNormalized} ${horaInicialNormalized}-${horaFinalNormalized}`;\r\n}\r\n\r\nfunction findSalaId(strSala) {\r\n  if (!strSala) return null;\r\n\r\n  const [, , sala] = strSala.split(\",\");\r\n  const strSalaNormalized = normalizeText(sala);\r\n\r\n  const salaFounded = find(store.getters.AllSalas, (sala) => {\r\n    const nomeNormalized = normalizeText(sala.nome);\r\n    return strSalaNormalized.includes(nomeNormalized);\r\n  });\r\n  return salaFounded ? salaFounded.id : null;\r\n}\r\n","import store from \"@/store\";\r\nimport { find } from \"lodash-es\";\r\n\r\nexport default function parseTurmaSIGAToPedido(turmasSIGA, keysTurmaSIGA, turmaId) {\r\n  const pedido = {\r\n    Turma: null,\r\n    Curso: null,\r\n    vagasOferecidas: 0,\r\n    vagasOcupadas: 0,\r\n  };\r\n\r\n  const cursosFound = find(store.getters.AllCursos, [\"codigo\", turmasSIGA[keysTurmaSIGA.cursoCod]]);\r\n  pedido.Curso = cursosFound ? cursosFound.id : null;\r\n  pedido.Turma = turmaId;\r\n  pedido.vagasOferecidas = parseInt(turmasSIGA[keysTurmaSIGA.vagas1], 10);\r\n  pedido.vagasOcupadas = parseInt(turmasSIGA[keysTurmaSIGA.vagas2], 10);\r\n\r\n  return pedido.Curso ? pedido : null;\r\n}\r\n","export default function validateTurmasSIGA(turmasSIGA) {\r\n  if (!turmasSIGA.length) return;\r\n\r\n  const expectedKeys = [\r\n    \"DISCIPLINA\",\r\n    \"DISCIPLINA_COD.\",\r\n    \"TURMA\",\r\n    \"CURSO_COD.\",\r\n    \"CURSO\",\r\n    \"VAGASOFERECIDAS\",\r\n    \"VAGASOCUPADAS\",\r\n    \"HORARIOS\",\r\n    \"DOCENTES\",\r\n  ];\r\n  if (Object.keys(turmasSIGA[0]).length < expectedKeys.length) {\r\n    throw new Error(\"Verifique a integridade e o formato do(s) arquivo(s)\");\r\n  }\r\n}\r\n","export default function getKeysTurmaSIGA(turmaSIGA) {\r\n  const keys = {\r\n    disciplinaCod: null,\r\n    letra: null,\r\n    cursoCod: null,\r\n    vagas1: null,\r\n    vagas2: null,\r\n    horarioESala: null,\r\n    docentes: null,\r\n  };\r\n  let i = 0;\r\n  for (const key in turmaSIGA) {\r\n    if (i === 1) keys.disciplinaCod = key;\r\n    else if (i === 2) keys.letra = key;\r\n    else if (i === 3) keys.cursoCod = key;\r\n    else if (i === 5) keys.vagas1 = key;\r\n    else if (i === 6) keys.vagas2 = key;\r\n    else if (i === 7) keys.horarioESala = key;\r\n    else if (i === 8) {\r\n      keys.docentes = key;\r\n      break;\r\n    }\r\n    i++;\r\n  }\r\n\r\n  return keys;\r\n}\r\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"main-component row\"},[_c('portal',{attrs:{\"to\":\"page-header\"}},[_c('BaseButton',{attrs:{\"template\":\"ajuda\"},on:{\"click\":function($event){return _vm.$refs.modalAjuda.toggle()}}})],1),_c('div',{staticClass:\"page-content\"},[_c('div',{staticClass:\"table-div\"},[_c('BaseTable',{scopedSlots:_vm._u([{key:\"thead\",fn:function(){return [_c('v-th-ordination',{attrs:{\"currentOrder\":_vm.ordenacaoConflitos,\"orderToCheck\":\"disciplina.codigo\",\"width\":\"80\",\"align\":\"start\",\"title\":\"Código da Disciplina\"}},[_vm._v(\"\\n            Código\\n          \")]),_c('v-th-ordination',{attrs:{\"currentOrder\":_vm.ordenacaoConflitos,\"orderToCheck\":\"disciplina.nome\",\"width\":\"300\",\"align\":\"start\",\"title\":\"Nome da Disciplina\"}},[_vm._v(\"\\n            Disciplina\\n          \")]),_c('v-th',{attrs:{\"width\":\"45\"}},[_vm._v(\"Turma\")]),_c('v-th',{attrs:{\"width\":\"55\",\"title\":\"Código do Curso\"}},[_vm._v(\"Curso\")]),_c('v-th',{attrs:{\"colspan\":\"420\",\"paddingX\":\"0\"}},[_vm._v(\"\\n            Conflito\\n            \"),_c('v-th',{attrs:{\"width\":\"180\",\"align\":\"start\",\"title\":\"Tipo do Conflito\"}},[_vm._v(\"Tipo\")]),_c('v-th',{attrs:{\"width\":\"120\",\"title\":\"Valor no SIGA\"}},[_vm._v(\"SIGA\")]),_c('v-th',{attrs:{\"width\":\"120\",\"title\":\"Valor no Sistema (SIPlanWeb)\"}},[_vm._v(\"Sistema\")])],1)]},proxy:true},{key:\"tbody\",fn:function(){return [_vm._l((_vm.turmasConflitosOrdered),function(turmaConflito){return [_c('tr',{key:turmaConflito.id,staticClass:\"bg-custom\"},[_c('v-td',{attrs:{\"width\":\"80\",\"align\":\"start\"}},[_vm._v(_vm._s(turmaConflito.disciplina.codigo))]),_c('v-td',{attrs:{\"width\":\"300\",\"align\":\"start\"}},[_vm._v(_vm._s(turmaConflito.disciplina.nome))]),_c('v-td',{attrs:{\"width\":\"45\"}},[_vm._v(_vm._s(turmaConflito.letra))]),_c('v-td',{attrs:{\"width\":\"55\"}}),_c('v-td',{attrs:{\"width\":\"180\"}}),_c('v-td',{attrs:{\"width\":\"120\"}}),_c('v-td',{attrs:{\"width\":\"120\"}})],1),_vm._l((turmaConflito.conflitos),function(conflito){return _c('tr',{key:turmaConflito.id + conflito.label + conflito.curso.id},[_c('v-td',{attrs:{\"width\":\"80\"}}),_c('v-td',{attrs:{\"width\":\"300\"}}),_c('v-td',{attrs:{\"width\":\"45\"}}),_c('v-td',{attrs:{\"width\":\"55\",\"title\":conflito.curso.nome}},[_vm._v(_vm._s(conflito.curso.codigo))]),_c('v-td',{attrs:{\"width\":\"180\",\"align\":\"start\"}},[_vm._v(_vm._s(conflito.label))]),_c('v-td',{attrs:{\"width\":\"120\",\"title\":conflito.siga}},[_vm._v(_vm._s(conflito.siga))]),_c('v-td',{attrs:{\"width\":\"120\",\"title\":conflito.sistema}},[_vm._v(_vm._s(conflito.sistema))])],1)})]}),(!_vm.turmasConflitosOrdered.length)?_c('tr',[_c('v-td',{attrs:{\"width\":\"900\"}},[_c('b',[_vm._v(\"Nenhum conflito encontrado.\")]),_vm._v(\"\\n              Certifiqui-se de selecionar um arquivo correspondente com o plano atual e o periodo\\n              selecionado.\\n            \")])],1):_vm._e()]},proxy:true}])})],1),_c('Card',{attrs:{\"title\":\"Validar pedidos\"},scopedSlots:_vm._u([{key:\"body\",fn:function(){return [_c('VSelect',{attrs:{\"label\":\"Perído\",\"validation\":_vm.$v.form.periodo},model:{value:(_vm.form.periodo),callback:function ($$v) {_vm.$set(_vm.form, \"periodo\", _vm._n($$v))},expression:\"form.periodo\"}},_vm._l((_vm.PeriodosLetivos),function(periodo){return _c('VOption',{key:periodo.id + periodo.nome,attrs:{\"value\":periodo.id,\"text\":periodo.nome}})}),1),_c('VInputFile',{attrs:{\"label\":\"Arquivo do plano SIGA (.csv)\",\"validation\":_vm.$v.form.file,\"accept\":\".csv\"},model:{value:(_vm.form.file),callback:function ($$v) {_vm.$set(_vm.form, \"file\", $$v)},expression:\"form.file\"}})]},proxy:true},{key:\"footer\",fn:function(){return [_c('BaseButton',{attrs:{\"template\":\"Salvar\",\"title\":\"Iniciar\"},on:{\"click\":_vm.handleCompareTurmas}}),_c('BaseButton',{attrs:{\"template\":\"cancelar\"},on:{\"click\":_vm.clearForm}})]},proxy:true}])})],1),_c('ModalAjuda',{ref:\"modalAjuda\"},[_c('li',{staticClass:\"list-group-item\"},[_c('b',[_vm._v(\"Visualizar conteúdo:\")]),_vm._v(\"\\n      Preencha o cartão à direita com o período do plano atual que deseja validar, em seguida\\n      selecione o arquivo (.csv) de plano gerado pelo SIGA para o período correspondente. E para\\n      finalizar clique no botão iniciar\\n      \"),_c('font-awesome-icon',{staticClass:\"icon-blue\",attrs:{\"icon\":['fas', 'check']}}),_vm._v(\"\\n      .\\n    \")],1),_c('li',{staticClass:\"list-group-item\"},[_c('b',[_vm._v(\"Limpar formulário:\")]),_vm._v(\"\\n      No cartão à direita, clique em Cancelar\\n      \"),_c('font-awesome-icon',{staticClass:\"icon-gray\",attrs:{\"icon\":['fas', 'times']}}),_vm._v(\"\\n      , para limpar as informações.\\n    \")],1)])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"main-component row\">\r\n    <portal to=\"page-header\">\r\n      <BaseButton template=\"ajuda\" @click=\"$refs.modalAjuda.toggle()\" />\r\n    </portal>\r\n\r\n    <div class=\"page-content\">\r\n      <div class=\"table-div\">\r\n        <BaseTable>\r\n          <template #thead>\r\n            <v-th-ordination\r\n              :currentOrder=\"ordenacaoConflitos\"\r\n              orderToCheck=\"disciplina.codigo\"\r\n              width=\"80\"\r\n              align=\"start\"\r\n              title=\"Código da Disciplina\"\r\n            >\r\n              Código\r\n            </v-th-ordination>\r\n            <v-th-ordination\r\n              :currentOrder=\"ordenacaoConflitos\"\r\n              orderToCheck=\"disciplina.nome\"\r\n              width=\"300\"\r\n              align=\"start\"\r\n              title=\"Nome da Disciplina\"\r\n            >\r\n              Disciplina\r\n            </v-th-ordination>\r\n            <v-th width=\"45\">Turma</v-th>\r\n            <v-th width=\"55\" title=\"Código do Curso\">Curso</v-th>\r\n\r\n            <v-th colspan=\"420\" paddingX=\"0\">\r\n              Conflito\r\n              <v-th width=\"180\" align=\"start\" title=\"Tipo do Conflito\">Tipo</v-th>\r\n              <v-th width=\"120\" title=\"Valor no SIGA\">SIGA</v-th>\r\n              <v-th width=\"120\" title=\"Valor no Sistema (SIPlanWeb)\">Sistema</v-th>\r\n            </v-th>\r\n          </template>\r\n\r\n          <template #tbody>\r\n            <template v-for=\"turmaConflito in turmasConflitosOrdered\">\r\n              <tr :key=\"turmaConflito.id\" class=\"bg-custom\">\r\n                <v-td width=\"80\" align=\"start\">{{ turmaConflito.disciplina.codigo }}</v-td>\r\n                <v-td width=\"300\" align=\"start\">{{ turmaConflito.disciplina.nome }}</v-td>\r\n                <v-td width=\"45\">{{ turmaConflito.letra }}</v-td>\r\n                <v-td width=\"55\" />\r\n                <v-td width=\"180\" />\r\n                <v-td width=\"120\" />\r\n                <v-td width=\"120\" />\r\n              </tr>\r\n\r\n              <tr\r\n                v-for=\"conflito in turmaConflito.conflitos\"\r\n                :key=\"turmaConflito.id + conflito.label + conflito.curso.id\"\r\n              >\r\n                <v-td width=\"80\" />\r\n                <v-td width=\"300\" />\r\n                <v-td width=\"45\" />\r\n                <v-td width=\"55\" :title=\"conflito.curso.nome\">{{ conflito.curso.codigo }}</v-td>\r\n                <v-td width=\"180\" align=\"start\">{{ conflito.label }}</v-td>\r\n                <v-td width=\"120\" :title=\"conflito.siga\">{{ conflito.siga }}</v-td>\r\n                <v-td width=\"120\" :title=\"conflito.sistema\">{{ conflito.sistema }}</v-td>\r\n              </tr>\r\n            </template>\r\n\r\n            <tr v-if=\"!turmasConflitosOrdered.length\">\r\n              <v-td width=\"900\">\r\n                <b>Nenhum conflito encontrado.</b>\r\n                Certifiqui-se de selecionar um arquivo correspondente com o plano atual e o periodo\r\n                selecionado.\r\n              </v-td>\r\n            </tr>\r\n          </template>\r\n        </BaseTable>\r\n      </div>\r\n\r\n      <Card title=\"Validar pedidos\">\r\n        <template #body>\r\n          <VSelect label=\"Perído\" v-model.number=\"form.periodo\" :validation=\"$v.form.periodo\">\r\n            <VOption\r\n              v-for=\"periodo in PeriodosLetivos\"\r\n              :key=\"periodo.id + periodo.nome\"\r\n              :value=\"periodo.id\"\r\n              :text=\"periodo.nome\"\r\n            />\r\n          </VSelect>\r\n\r\n          <VInputFile\r\n            label=\"Arquivo do plano SIGA (.csv)\"\r\n            v-model=\"form.file\"\r\n            :validation=\"$v.form.file\"\r\n            accept=\".csv\"\r\n          />\r\n        </template>\r\n\r\n        <template #footer>\r\n          <BaseButton template=\"Salvar\" title=\"Iniciar\" @click=\"handleCompareTurmas\" />\r\n          <BaseButton template=\"cancelar\" @click=\"clearForm\" />\r\n        </template>\r\n      </Card>\r\n    </div>\r\n\r\n    <ModalAjuda ref=\"modalAjuda\">\r\n      <li class=\"list-group-item\">\r\n        <b>Visualizar conteúdo:</b>\r\n        Preencha o cartão à direita com o período do plano atual que deseja validar, em seguida\r\n        selecione o arquivo (.csv) de plano gerado pelo SIGA para o período correspondente. E para\r\n        finalizar clique no botão iniciar\r\n        <font-awesome-icon :icon=\"['fas', 'check']\" class=\"icon-blue\" />\r\n        .\r\n      </li>\r\n      <li class=\"list-group-item\">\r\n        <b>Limpar formulário:</b>\r\n        No cartão à direita, clique em Cancelar\r\n        <font-awesome-icon :icon=\"['fas', 'times']\" class=\"icon-gray\" />\r\n        , para limpar as informações.\r\n      </li>\r\n    </ModalAjuda>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport { some, orderBy } from \"lodash-es\";\r\nimport { required, integer } from \"vuelidate/lib/validators\";\r\nimport { parseCSVFileToArray } from \"@utils\";\r\nimport {\r\n  parseTurmaSIGAToTurma,\r\n  parseTurmaSIGAToPedido,\r\n  getKeysTurmaSIGA,\r\n  validateTurmasSIGA,\r\n} from \"@/common/utils/turmasSIGA\";\r\nimport { makeEmptyCurso } from \"@utils/factories\";\r\nimport { generateDocentesText, generateHorariosText } from \"@mixins\";\r\nimport { Card, VSelect, VOption, VInputFile } from \"@/components/ui\";\r\nimport { ModalAjuda } from \"@/components/modals\";\r\n\r\nexport default {\r\n  name: \"ValidaçãoLançamentoSIGA\",\r\n  components: { Card, ModalAjuda, VSelect, VOption, VInputFile },\r\n  mixins: [generateDocentesText, generateHorariosText],\r\n  data() {\r\n    return {\r\n      form: {\r\n        periodo: 1,\r\n        filePlano: null,\r\n      },\r\n      turmasConflitos: [],\r\n      ordenacaoConflitos: {\r\n        order: \"disciplina.codigo\",\r\n        type: \"asc\",\r\n      },\r\n    };\r\n  },\r\n  validations: {\r\n    form: {\r\n      periodo: { required, integer },\r\n      file: { required },\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    clearForm() {\r\n      this.form.periodo = 1;\r\n      this.form.file = null;\r\n      this.$nextTick(() => this.$v.$reset());\r\n    },\r\n    async handleCompareTurmas() {\r\n      this.$v.form.$touch();\r\n      if (this.$v.form.$anyError) return;\r\n\r\n      try {\r\n        this.setLoading({ type: \"partial\", value: true });\r\n        const turmasFile = await parseCSVFileToArray(this.form.file);\r\n        validateTurmasSIGA(turmasFile);\r\n        const turmasSIGANormalized = this.normalizeTurmasEPedidosSIGA(\r\n          turmasFile,\r\n          this.form.periodo\r\n        );\r\n        this.searchConflitos(turmasSIGANormalized, this.form.periodo);\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.pushNotification({\r\n          type: \"error\",\r\n        });\r\n      } finally {\r\n        this.setLoading({ type: \"partial\", value: false });\r\n      }\r\n    },\r\n    normalizeTurmasEPedidosSIGA(turmasSIGA, periodo) {\r\n      const keysTurmaSIGA = getKeysTurmaSIGA(turmasSIGA[0]);\r\n      const turmasNormalized = [];\r\n      let currentTurma = {};\r\n\r\n      for (const turmaSIGA of turmasSIGA) {\r\n        const newTurma = parseTurmaSIGAToTurma(turmaSIGA, keysTurmaSIGA, null, periodo);\r\n        if (!newTurma) continue;\r\n        newTurma.pedidosSIGA = []; //Array com todos pedidos da turmas\r\n\r\n        const pedidoSIGA = parseTurmaSIGAToPedido(turmaSIGA, keysTurmaSIGA, null);\r\n        if (pedidoSIGA) {\r\n          const { vagasOferecidas } = pedidoSIGA;\r\n          pedidoSIGA.totalVagas = vagasOferecidas;\r\n        }\r\n\r\n        // Se turma igual ao currentTurma apenas adiciona o pedido na turma anterior\r\n        if (this.turmasAreEqual(currentTurma, newTurma)) {\r\n          if (pedidoSIGA) {\r\n            const index = turmasNormalized[turmasNormalized.length - 1].pedidosSIGA.findIndex(\r\n              (pedido) => pedido.Curso === pedidoSIGA.Curso\r\n            );\r\n            if (index === -1) {\r\n              turmasNormalized[turmasNormalized.length - 1].pedidosSIGA.push(pedidoSIGA);\r\n            }\r\n          }\r\n        } else {\r\n          // Se é uma turma nova então adiciona a turma e o pedido\r\n          if (pedidoSIGA) newTurma.pedidosSIGA.push(pedidoSIGA);\r\n          turmasNormalized.push(newTurma);\r\n          currentTurma = { ...newTurma };\r\n        }\r\n      }\r\n\r\n      return turmasNormalized;\r\n    },\r\n    searchConflitos(turmasSIGA, periodo) {\r\n      this.turmasConflitos = [];\r\n      const turmasConflitosFound = [];\r\n      //Turmas do periodo selecionado, exclui perfil MAC que existe no arquivo SIGA\r\n      const turmasSistema = this.AllTurmas.filter(\r\n        (turma) => turma.periodo === periodo && turma.disciplina.Perfil != 15\r\n      );\r\n\r\n      turmasSistema.forEach((turmaSistema) => {\r\n        const turmaSIGAFound = turmasSIGA.find(\r\n          (turmaFile) =>\r\n            turmaSistema.Disciplina == turmaFile.Disciplina && turmaSistema.letra == turmaFile.letra\r\n        );\r\n        const turmaConflitos = { ...turmaSistema, conflitos: [] };\r\n\r\n        if (!turmaSIGAFound) {\r\n          turmaConflitos.conflitos.push({\r\n            label: \"Turma existe apenas no sistema\",\r\n            siga: \"-\",\r\n            sistema: \"-\",\r\n            curso: makeEmptyCurso({ codigo: \"-\" }),\r\n          });\r\n          turmasConflitosFound.push(turmaConflitos);\r\n          return;\r\n        }\r\n        // Conflitos de turmas\r\n        if (!this.docentesAreEqual(turmaSistema, turmaSIGAFound)) {\r\n          turmaConflitos.conflitos.push({\r\n            label: \"Docentes diferentes\",\r\n            siga: this.generateDocentesText(turmaSIGAFound.Docente1, turmaSIGAFound.Docente2),\r\n            sistema: this.generateDocentesText(turmaSistema.Docente1, turmaSistema.Docente2),\r\n            curso: makeEmptyCurso({ codigo: \"-\" }),\r\n          });\r\n        }\r\n        if (!this.horariosAreEqual(turmaSistema, turmaSIGAFound)) {\r\n          turmaConflitos.conflitos.push({\r\n            label: \"Horarios diferentes\",\r\n            siga: this.generateHorariosText(turmaSIGAFound.Horario1, turmaSIGAFound.Horario2),\r\n            sistema: this.generateHorariosText(turmaSistema.Horario1, turmaSistema.Horario2),\r\n            curso: makeEmptyCurso({ codigo: \"-\" }),\r\n          });\r\n        }\r\n        // Conflitos de pedidos - exclui as disciplinas que são do 1 periodo de alguma gradeDCC\r\n        if (!some(this.disciplinasGradeDCC1Periodo, [\"Disciplina\", turmaSistema.Disciplina])) {\r\n          const pedidosDaTurmaSistema = this.Pedidos[turmaSistema.id] || [];\r\n\r\n          turmaSIGAFound.pedidosSIGA.forEach((pedidoSIGA) => {\r\n            const pedidoSistemaFound = pedidosDaTurmaSistema.find(\r\n              (pedidoSis) => pedidoSis.Curso == pedidoSIGA.Curso\r\n            );\r\n\r\n            if (!pedidoSistemaFound) {\r\n              turmaConflitos.conflitos.push({\r\n                label: \"Pedido não existe no sistema\",\r\n                siga: pedidoSIGA.totalVagas,\r\n                sistema: \"-\",\r\n                curso: this.AllCursos.find((curso) => curso.id === pedidoSIGA.Curso),\r\n              });\r\n              return;\r\n            }\r\n\r\n            const totalVagasSistema =\r\n              pedidoSistemaFound.vagasPeriodizadas + pedidoSistemaFound.vagasNaoPeriodizadas;\r\n\r\n            if (totalVagasSistema != pedidoSIGA.totalVagas) {\r\n              turmaConflitos.conflitos.push({\r\n                label: \"Pedido com valores diferentes\",\r\n                siga: pedidoSIGA.totalVagas,\r\n                sistema: totalVagasSistema == 0 ? \"-\" : totalVagasSistema,\r\n                curso: this.AllCursos.find((curso) => curso.id === pedidoSistemaFound.Curso),\r\n              });\r\n              return;\r\n            }\r\n          });\r\n\r\n          pedidosDaTurmaSistema\r\n            .filter((pedido) => pedido.vagasPeriodizadas != 0 || pedido.vagasNaoPeriodizadas != 0)\r\n            .forEach((pedidoSistema) => {\r\n              const pedidoSIGA = turmaSIGAFound.pedidosSIGA.find(\r\n                (pedidoArq) => pedidoSistema.Curso == pedidoArq.Curso\r\n              );\r\n\r\n              if (!pedidoSIGA) {\r\n                turmaConflitos.conflitos.push({\r\n                  label: \"Pedido não existe no SIGA\",\r\n                  siga: \"-\",\r\n                  sistema: pedidoSistema.vagasPeriodizadas + pedidoSistema.vagasNaoPeriodizadas,\r\n                  curso: this.AllCursos.find((curso) => curso.id === pedidoSistema.Curso),\r\n                });\r\n                return;\r\n              }\r\n            });\r\n        }\r\n\r\n        if (turmaConflitos.conflitos.length) turmasConflitosFound.push(turmaConflitos);\r\n      });\r\n\r\n      this.turmasConflitos = turmasConflitosFound;\r\n    },\r\n    turmasAreEqual(turma1, turma2) {\r\n      return (\r\n        turma1.letra === turma2.letra &&\r\n        turma1.Disciplina === turma2.Disciplina &&\r\n        turma1.Horario1 === turma2.Horario1 &&\r\n        turma1.Horario2 === turma2.Horario2\r\n      );\r\n    },\r\n    docentesAreEqual(turma1, turma2) {\r\n      if (turma1.Docente1 == turma2.Docente1 && turma1.Docente2 == turma2.Docente2) return true;\r\n      if (turma1.Docente1 == turma2.Docente2 && turma1.Docente2 == turma2.Docente1) return true;\r\n      return false;\r\n    },\r\n    horariosAreEqual(turma1, turma2) {\r\n      if (\r\n        (turma1.Horario1 == turma2.Horario1 && turma1.Horario2 == turma2.Horario2) ||\r\n        (turma1.Horario1 == turma2.Horario2 && turma1.Horario2 == turma2.Horario1)\r\n      )\r\n        return true;\r\n      if (\r\n        turma1.Horario1 == null &&\r\n        (turma1.Horario2 == turma2.Horario1 || turma1.Horario2 == turma2.Horario2)\r\n      )\r\n        return true;\r\n      if (\r\n        turma2.Horario1 == null &&\r\n        (turma2.Horario2 == turma1.Horario1 || turma2.Horario2 == turma1.Horario2)\r\n      )\r\n        return true;\r\n      if (\r\n        turma1.Horario2 == null &&\r\n        (turma1.Horario1 == turma2.Horario1 || turma1.Horario1 == turma2.Horario2)\r\n      )\r\n        return true;\r\n      if (\r\n        turma2.Horario2 == null &&\r\n        (turma2.Horario1 == turma1.Horario1 || turma2.Horario1 == turma1.Horario2)\r\n      )\r\n        return true;\r\n\r\n      return false;\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\"AllCursos\", \"AllTurmas\", \"PeriodosLetivos\", \"Pedidos\", \"DisciplinasGrades\"]),\r\n\r\n    turmasConflitosOrdered() {\r\n      const { order, type } = this.ordenacaoConflitos;\r\n      return orderBy(this.turmasConflitos, order, type);\r\n    },\r\n    disciplinasGradeDCC1Periodo() {\r\n      const disciplinasGradeFiltered = this.DisciplinasGrades.filter(\r\n        (disciplinaGrade) => disciplinaGrade.periodo === 1\r\n      );\r\n\r\n      const disciplinasGradeUnique = [];\r\n      disciplinasGradeFiltered.forEach((disciplinaGrade) => {\r\n        const alredyExist = disciplinasGradeUnique.find(\r\n          (disciplinaGrade2) => disciplinaGrade2.Disciplina === disciplinaGrade.Disciplina\r\n        );\r\n\r\n        if (!alredyExist) disciplinasGradeUnique.push({ ...disciplinaGrade });\r\n      });\r\n\r\n      return disciplinasGradeUnique;\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=693e258a&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n"],"sourceRoot":""}