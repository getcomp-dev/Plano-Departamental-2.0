{"version":3,"sources":["webpack:///./node_modules/lodash-es/sortBy.js","webpack:///./src/services/pdfs/helpers/index.js","webpack:///./node_modules/core-js/modules/es6.string.includes.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./src/assets/images/logo-ufjf.png","webpack:///./src/services/pdfs/planoDepartamental.js","webpack:///./node_modules/core-js/modules/_string-context.js","webpack:///./src/assets/images/logo-dcc.png"],"names":["sortBy","collection","iteratees","length","checkTurmaLab","turma","result","store","getters","Laboratorios","forEach","lab","id","Sala1","Sala2","isNull","checkTurmaHorarioLabs","horario","Horario1","Horario2","sala","checkTurmaHorario","generateDocentesText","d1","find","state","docente","Docentes","Docente1","d2","Docente2","undefined","nome","generateHorariosText","divider","horario1","AllHorarios","horario2","horariosResult","generateSalasText","sala1","AllSalas","sala2","salasResult","getSomatorioDeVagasDaTurma","pedidos","pedido","Pedidos","vagasP","vagasNP","p","vagasPeriodizadas","vagasNaoPeriodizadas","horasAula","disciplina","parseInt","cargaPratica","cargaTeorica","getCursoById","cursoId","curso","Cursos","getPedidosDaTurma","pedidosFiltered","filter","Curso","codigo","filterTurmasDoCurso","turmas","turmasDoCurso","pedidoFounded","push","totalVagas","orderBy","getTurmasDoPeriodo","periodoId","turmasDoPeriodo","AllTurmas","periodo","getTurmasDaSala","salaId","is1Semestre","value","is2Semestre","getHeaderImages","imageToDataUrl","urlLogoDcc","logoDcc","urlLogoUfjf","logoUfjf","makePageHeader","images","plano","title","subtitle","columns","image","fit","alignment","width","text","bold","fontSize","ano","margin","makeEmptyPageWarning","style","table","widths","headerRows","color","body","toUpperCase","layout","vLineWidth","$export","context","INCLUDES","P","F","includes","searchString","this","indexOf","arguments","MATCH","module","exports","KEY","re","e","f","pdfPlanoDepartamental","data","disciplinasInTurmas","periodosAtivos","tables","headerImages","disciplinasOrdered","index","periodoNome","split","periodoPossuiAlgumaTurma","turmasFiltered","perfil","abreviacao","j","letra","hLineWidth","i","pedidosDaTurma","tabelaCursosBody","vagasTotais","pageBreak","docDefinition","info","content","footer","currentPage","pageCount","Date","now","toLocaleString","toString","pdfMake","default","pdfFonts","vfs","createPdf","open","isRegExp","defined","that","NAME","TypeError","String"],"mappings":"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","file":"js/chunk-342f54da.25bfaf08.js","sourcesContent":["import baseFlatten from './_baseFlatten.js';\nimport baseOrderBy from './_baseOrderBy.js';\nimport baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nexport default sortBy;\n","import store from \"@/store\";\r\nimport { isNull, filter, find, orderBy, sortBy } from \"lodash-es\";\r\nimport { imageToDataUrl } from \"@/common/utils\";\r\nimport urlLogoUfjf from \"@/assets/images/logo-ufjf.png\";\r\nimport urlLogoDcc from \"@/assets/images/logo-dcc.png\";\r\n\r\nexport function checkTurmaLab(turma) {\r\n  let result = 0;\r\n  store.getters.Laboratorios.forEach((lab) => {\r\n    if (lab.id === turma.Sala1) result += 1;\r\n    if (lab.id === turma.Sala2) result += 2;\r\n  });\r\n\r\n  if (result === 1) {\r\n    if (isNull(turma.Sala2)) {\r\n      return 4;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function checkTurmaHorarioLabs(turma, horario, lab) {\r\n  if (turma.Horario1 == horario || turma.Horario2 == horario) {\r\n    let sala = checkTurmaLab(turma);\r\n    switch (sala) {\r\n    case 0:\r\n      return false;\r\n    case 1:\r\n      if (turma.Horario1 == horario) return true;\r\n      else return false;\r\n    case 2:\r\n      if (turma.Horario2 == horario) return true;\r\n      else return false;\r\n    case 3:\r\n      if (turma.Sala1 === lab) {\r\n        if (turma.Horario1 == horario) return true;\r\n      } else if (turma.Sala2 === lab) {\r\n        if (turma.Horario2 == horario) return true;\r\n      }\r\n      return false;\r\n    case 4:\r\n      return true;\r\n    }\r\n    return true;\r\n  } else return false;\r\n}\r\n\r\nexport function checkTurmaHorario(turma, horario) {\r\n  if (turma.Horario1 === horario || turma.Horario2 === horario) return true;\r\n  else return false;\r\n}\r\n\r\nexport function generateDocentesText(turma) {\r\n  let d1 = find(store.state.docente.Docentes, { id: turma.Docente1 });\r\n  let d2 = find(store.state.docente.Docentes, { id: turma.Docente2 });\r\n  if (d1 === undefined && d2 === undefined) {\r\n    return \"\";\r\n  } else if (d2 === undefined) {\r\n    return `${d1.nome}`;\r\n  } else if (d1 === undefined) {\r\n    return `${d2.nome}`;\r\n  } else {\r\n    return `${d1.nome} \\n ${d2.nome}`;\r\n  }\r\n}\r\n\r\nexport function generateHorariosText(turma, divider = \"\\n\") {\r\n  const horario1 = find(store.getters.AllHorarios, [\"id\", turma.Horario1]);\r\n  const horario2 = find(store.getters.AllHorarios, [\"id\", turma.Horario2]);\r\n  let horariosResult = undefined;\r\n\r\n  if (horario1 === undefined && horario2 === undefined) horariosResult = \"\";\r\n  else if (horario2 === undefined) horariosResult = horario1.horario;\r\n  else if (horario1 === undefined) horariosResult = horario2.horario;\r\n  else horariosResult = horario1.horario + divider + horario2.horario;\r\n\r\n  return horariosResult;\r\n}\r\n\r\nexport function generateSalasText(turma) {\r\n  const sala1 = find(store.getters.AllSalas, [\"id\", turma.Sala1]);\r\n  const sala2 = find(store.getters.AllSalas, [\"id\", turma.Sala2]);\r\n  let salasResult = undefined;\r\n\r\n  if (sala1 === undefined && sala2 === undefined) salasResult = \"\";\r\n  else if (sala2 === undefined) salasResult = sala1.nome;\r\n  else if (sala1 === undefined) salasResult = sala2.nome;\r\n  else salasResult = sala1.nome + \"\\n\" + sala2.nome;\r\n\r\n  return salasResult;\r\n}\r\n\r\nexport function getSomatorioDeVagasDaTurma(turma) {\r\n  let pedidos = store.state.pedido.Pedidos[turma.id];\r\n  let vagasP = 0;\r\n  let vagasNP = 0;\r\n  pedidos.forEach((p) => {\r\n    vagasP += p.vagasPeriodizadas;\r\n    vagasNP += p.vagasNaoPeriodizadas;\r\n  });\r\n  return vagasP + vagasNP;\r\n}\r\n\r\nexport function horasAula(disciplina) {\r\n  return (parseInt(disciplina.cargaPratica) + parseInt(disciplina.cargaTeorica)) * 15;\r\n}\r\n\r\nexport function getCursoById(cursoId) {\r\n  return find(store.state.curso.Cursos, [\"id\", cursoId]);\r\n}\r\n\r\nexport function getPedidosDaTurma(turma) {\r\n  const pedidosFiltered = filter(\r\n    store.state.pedido.Pedidos[turma.id],\r\n    (pedido) => pedido.vagasPeriodizadas > 0 || pedido.vagasNaoPeriodizadas > 0\r\n  );\r\n  return sortBy(pedidosFiltered, (pedido) => getCursoById(pedido.Curso).codigo);\r\n}\r\n\r\nexport function filterTurmasDoCurso(turmas, cursoId) {\r\n  const turmasDoCurso = [];\r\n\r\n  turmas.forEach((turma) => {\r\n    const pedidoFounded = find(store.getters.Pedidos[turma.id], [\"Curso\", cursoId]);\r\n\r\n    if (pedidoFounded.vagasPeriodizadas > 0 || pedidoFounded.vagasNaoPeriodizadas > 0) {\r\n      turmasDoCurso.push({\r\n        ...turma,\r\n        totalVagas: pedidoFounded.vagasPeriodizadas + pedidoFounded.vagasNaoPeriodizadas,\r\n      });\r\n    }\r\n  });\r\n\r\n  return orderBy(turmasDoCurso, [\"disciplina.codigo\", \"letra\"]);\r\n}\r\n\r\nexport function getTurmasDoPeriodo(periodoId) {\r\n  const turmasDoPeriodo = store.getters.AllTurmas.filter((turma) => turma.periodo === periodoId);\r\n\r\n  return orderBy(turmasDoPeriodo, [\"disciplina.codigo\", \"letra\"]);\r\n}\r\n\r\nexport function getTurmasDaSala(turmas, salaId) {\r\n  return filter(turmas, (turma) => turma.Sala1 === salaId || turma.Sala2 === salaId);\r\n}\r\n\r\nexport function is1Semestre(value) {\r\n  return value === 1 || value === 2;\r\n}\r\n\r\nexport function is2Semestre(value) {\r\n  return value === 3 || value === 4;\r\n}\r\n\r\nexport async function getHeaderImages() {\r\n  const logoDcc = await imageToDataUrl(urlLogoDcc);\r\n  const logoUfjf = await imageToDataUrl(urlLogoUfjf);\r\n\r\n  return [logoDcc, logoUfjf];\r\n}\r\n\r\n//Pdfmake helpers\r\nexport function makePageHeader({ images, plano, title, subtitle }) {\r\n  return [\r\n    {\r\n      columns: [\r\n        { image: images[0] || \"\", fit: [60, 60], alignment: \"left\", width: \"16%\" },\r\n        [\r\n          {\r\n            text: \"Departamento de Ciência da Computação\",\r\n            alignment: \"center\",\r\n            bold: true,\r\n            fontSize: 10,\r\n          },\r\n          { text: title, alignment: \"center\", bold: true, fontSize: 10 },\r\n          {\r\n            text: plano ? `Plano ${plano.ano} - ${plano.nome}` : \"\",\r\n            alignment: \"center\",\r\n            bold: true,\r\n            fontSize: 10,\r\n          },\r\n        ],\r\n        { image: images[1] || \"\", fit: [60, 60], alignment: \"right\", width: \"16%\" },\r\n      ],\r\n    },\r\n    { text: \"\", margin: [0, 0, 0, 10] },\r\n    { text: subtitle, alignment: \"center\", bold: true, fontSize: 10, margin: [0, 0, 0, 10] },\r\n  ];\r\n}\r\n\r\nexport function makeEmptyPageWarning(text) {\r\n  return {\r\n    style: \"tableExample\",\r\n    table: {\r\n      widths: [\"*\"],\r\n      headerRows: 1,\r\n      color: \"#426\",\r\n      body: [\r\n        [\r\n          {\r\n            text: text ? text.toUpperCase() : \"Nenhuma turma para ser exibida\".toUpperCase(),\r\n            alignment: \"center\",\r\n            bold: true,\r\n            fontSize: 9,\r\n          },\r\n        ],\r\n      ],\r\n    },\r\n    layout: { vLineWidth: () => 0 },\r\n  };\r\n}\r\n","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","module.exports = __webpack_public_path__ + \"img/logo-ufjf.3cf76d59.png\";","import {\r\n  makePageHeader,\r\n  makeEmptyPageWarning,\r\n  generateHorariosText,\r\n  getHeaderImages,\r\n  horasAula,\r\n  generateDocentesText,\r\n  generateSalasText,\r\n  getSomatorioDeVagasDaTurma,\r\n  getPedidosDaTurma,\r\n  getCursoById,\r\n} from \"./helpers\";\r\nimport { filter, orderBy } from \"lodash-es\";\r\n\r\nexport async function pdfPlanoDepartamental(data) {\r\n  const { disciplinasInTurmas, periodosAtivos, plano } = data;\r\n  const tables = [];\r\n  const headerImages = await getHeaderImages();\r\n  const disciplinasOrdered = orderBy(disciplinasInTurmas, \"codigo\");\r\n\r\n  if (!disciplinasInTurmas.length || !periodosAtivos.length) {\r\n    tables.push(\r\n      makePageHeader({ images: headerImages, plano, title: \"Relação de turmas oferecidas\" })\r\n    );\r\n    tables.push(makeEmptyPageWarning());\r\n  } else {\r\n    periodosAtivos.forEach((periodo, index) => {\r\n      let periodoNome = \"\";\r\n      if (periodo.id === 2 || periodo.id === 4) {\r\n        periodoNome = periodo.nome.includes(\"(\") ? periodo.nome.split(\" \")[1] + \" \" : \"\"; //Pega texto entre parênteses\r\n      }\r\n      tables.push(\r\n        makePageHeader({\r\n          images: headerImages,\r\n          plano,\r\n          title: \"Relação de turmas oferecidas\",\r\n          subtitle: `${periodo.id}º Período Letivo ${periodoNome}`,\r\n        })\r\n      );\r\n\r\n      let periodoPossuiAlgumaTurma = false;\r\n      disciplinasOrdered.forEach((disciplina) => {\r\n        const turmasFiltered = filter(disciplina.turmas, [\"periodo\", periodo.id]);\r\n\r\n        if (turmasFiltered.length) {\r\n          periodoPossuiAlgumaTurma = true;\r\n          tables.push({\r\n            style: \"tableExample\",\r\n            table: {\r\n              widths: [60, \"*\", 72, 40],\r\n              headerRows: 1,\r\n              color: \"#426\",\r\n              body: [\r\n                [\r\n                  {\r\n                    text: disciplina.codigo,\r\n                    alignment: \"left\",\r\n                    bold: true,\r\n                    fontSize: 9,\r\n                  },\r\n                  {\r\n                    text: disciplina.nome,\r\n                    alignment: \"left\",\r\n                    bold: true,\r\n                    fontSize: 9,\r\n                  },\r\n                  {\r\n                    text: disciplina.perfil.abreviacao,\r\n                    alignment: \"center\",\r\n                    bold: true,\r\n                    fontSize: 9,\r\n                  },\r\n                  {\r\n                    text: horasAula(disciplina) + \" horas\",\r\n                    alignment: \"center\",\r\n                    bold: true,\r\n                    fontSize: 9,\r\n                  },\r\n                ],\r\n              ],\r\n            },\r\n            layout: { vLineWidth: () => 0 },\r\n          });\r\n\r\n          turmasFiltered.forEach((turma, j) => {\r\n            tables.push({\r\n              style: \"tableExample\",\r\n              table: {\r\n                widths: [50, 35, \"*\", 18, 36, 28, 32, 42],\r\n                headerRows: 1,\r\n                color: \"#426\",\r\n                body: [\r\n                  [\r\n                    {\r\n                      text: \"Turma: \" + turma.letra,\r\n                      alignment: \"left\",\r\n                      fontSize: 8,\r\n                      bold: true,\r\n                    },\r\n                    {\r\n                      text: \"Docentes: \",\r\n                      alignment: \"left\",\r\n                      fontSize: 8,\r\n                      bold: true,\r\n                    },\r\n                    {\r\n                      text: generateDocentesText(turma),\r\n                      alignment: \"left\",\r\n                      fontSize: 8,\r\n                      bold: true,\r\n                    },\r\n                    {\r\n                      text: \"Sala: \",\r\n                      alignment: \"left\",\r\n                      fontSize: 8,\r\n                      bold: true,\r\n                    },\r\n                    {\r\n                      text: generateSalasText(turma),\r\n                      alignment: \"left\",\r\n                      fontSize: 8,\r\n                      bold: true,\r\n                    },\r\n                    {\r\n                      text: \"Horário: \",\r\n                      alignment: \"left\",\r\n                      fontSize: 8,\r\n                      bold: true,\r\n                    },\r\n                    {\r\n                      text: generateHorariosText(turma),\r\n                      alignment: \"left\",\r\n                      fontSize: 8,\r\n                      bold: true,\r\n                    },\r\n                    {\r\n                      text: \"Vagas: \" + getSomatorioDeVagasDaTurma(turma), //tinha segundo paramentro com 1 e 2\r\n                      alignment: \"left\",\r\n                      fontSize: 8,\r\n                      bold: true,\r\n                    },\r\n                  ],\r\n                ],\r\n              },\r\n              layout: {\r\n                hLineWidth: (i) => {\r\n                  return i === 0 ? (j === 0 ? 0 : 0.5) : 0;\r\n                },\r\n                vLineWidth: () => 0,\r\n              },\r\n            });\r\n\r\n            const pedidosDaTurma = getPedidosDaTurma(turma);\r\n            if (pedidosDaTurma.length) {\r\n              const tabelaCursosBody = [\r\n                [\r\n                  { text: \"\" },\r\n                  { text: \"Cód.\", alignment: \"left\", bold: \"true\", fontSize: 8 },\r\n                  { text: \"Curso\", alignment: \"left\", bold: \"true\", fontSize: 8 },\r\n                  { text: \"Grade\", alignment: \"center\", bold: \"true\", fontSize: 8 },\r\n                  { text: \"Extra\", alignment: \"center\", bold: \"true\", fontSize: 8 },\r\n                  { text: \"Total\", alignment: \"center\", bold: \"true\", fontSize: 8 },\r\n                ],\r\n              ];\r\n\r\n              pedidosDaTurma.forEach((pedido) => {\r\n                const vagasTotais = pedido.vagasPeriodizadas + pedido.vagasNaoPeriodizadas;\r\n                const curso = getCursoById(pedido.Curso);\r\n\r\n                tabelaCursosBody.push([\r\n                  { text: \"\" },\r\n                  { text: curso.codigo, alignment: \"left\", fontSize: 6 },\r\n                  { text: curso.nome, alignment: \"left\", fontSize: 6 },\r\n                  { text: pedido.vagasPeriodizadas, alignment: \"center\", fontSize: 6 },\r\n                  { text: pedido.vagasNaoPeriodizadas, alignment: \"center\", fontSize: 6 },\r\n                  { text: vagasTotais, alignment: \"center\", fontSize: 6 },\r\n                ]);\r\n              });\r\n\r\n              tables.push({\r\n                style: \"tableExample\",\r\n                table: {\r\n                  widths: [20, 24, \"*\", 24, 24, 24],\r\n                  color: \"#426\",\r\n                  body: tabelaCursosBody,\r\n                },\r\n                layout: { hLineWidth: () => 0, vLineWidth: () => 0 },\r\n                margin: [0, 0, 0, j + 1 === turmasFiltered.length ? 10 : 5],\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      if (!periodoPossuiAlgumaTurma) {\r\n        tables.push(makeEmptyPageWarning());\r\n      }\r\n      if (index + 1 !== periodosAtivos.length) {\r\n        tables.push({ text: \"\", pageBreak: \"before\" }); //page break;\r\n      }\r\n    });\r\n  }\r\n\r\n  let docDefinition = {\r\n    info: { title: \"Plano Departamental\" },\r\n    content: tables,\r\n    footer: (currentPage, pageCount) => {\r\n      return {\r\n        columns: [\r\n          {\r\n            text: new Date(Date.now()).toLocaleString(),\r\n            margin: [30, 10, 0, 0],\r\n            fontSize: 8,\r\n            alignment: \"left\",\r\n          },\r\n          {\r\n            text: currentPage.toString() + \" de \" + pageCount,\r\n            alignment: \"right\",\r\n            margin: [0, 10, 30, 0],\r\n            fontSize: 8,\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  };\r\n\r\n  const { default: pdfMake } = await import(\"pdfmake/build/pdfmake\");\r\n  const { default: pdfFonts } = await import(\"pdfmake/build/vfs_fonts\");\r\n  pdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n  pdfMake.createPdf(docDefinition).open();\r\n}\r\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","module.exports = __webpack_public_path__ + \"img/logo-dcc.119b091b.png\";"],"sourceRoot":""}