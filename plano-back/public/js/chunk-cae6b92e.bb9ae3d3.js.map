{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.string.includes.js","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/CopyPlano.vue","webpack:///src/pages/gerenciar/Planos/ModalNovoPlano/CopyPlano.vue","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/CopyPlano.vue?ba13","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/CopyPlano.vue?505c","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/lodash-es/_baseDifference.js","webpack:///./node_modules/lodash-es/difference.js","webpack:///./node_modules/core-js/modules/_string-context.js"],"names":["$export","context","INCLUDES","P","F","includes","searchString","this","indexOf","arguments","length","undefined","render","_vm","_c","_self","staticClass","_v","_s","currentPlano","nome","ano","attrs","scopedSlots","_u","key","fn","model","value","searchDisciplinasModal","callback","$$v","expression","proxy","ordenacaoModal","disciplinas","_l","DisciplinasOrderedModal","disciplina","directives","name","rawName","id","on","$event","toggleItemInArray","filtrosDisciplinas","domProps","Array","isArray","_i","$$a","$$el","target","$$c","checked","$$i","concat","slice","codigo","perfil","abreviacao","_e","staticRenderFns","mixins","components","VInputSearch","props","plano","type","required","closeModal","data","order","methods","mapActions","selectAllDisciplinas","selectNoneDisciplinas","generateGradesAtivas","semestre1","CCD","CCN","EC","SI","semestre2","grades","periodoFinal","periodoInicial","gradesAtivas","inicio","fim","generateGradesExternasAtivas","cursosComGrades","generateTurmasNovoPlano","i","Grade","disciplinasGrade","Disciplina","disciplinasGrade1Semestre","periodo","t","prop","disciplinasGrade2Semestre","some","disciplinaGrade","semestre","turno","letra","turma","turmasNovoPlano","console","handleCopyPlano","then","turmaService","create","turno1","turno2","Docente1","Docente2","Horario1","Horario2","Sala1","Sala2","Plano","pedidoService","update","Turma","Curso","vagasPeriodizadas","vagasNaoPeriodizadas","catch","c","turmasCopiar","pedidos","p","turmaExternaService","pedidoExternoService","computed","mapGetters","DisciplinasFiltredModal","component","MATCH","module","exports","KEY","re","e","f","LARGE_ARRAY_SIZE","baseDifference","array","values","iteratee","comparator","index","isCommon","result","valuesLength","outer","valuesIndex","push","difference","isArrayLikeObject","isRegExp","defined","that","NAME","TypeError","String"],"mappings":"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uBACAJ,yBACAA,yBAGAH,2DACAC,IACA,2BAcA,GAbAC,MACAD,EACA,EACA,+DACA,gDACA,WACAA,MAEAE,4BACA9C,WACA+C,SACAC,QAEA,IACA,MAGAJ,IACA,2BAcA,GAbAC,MACAD,EACA,EACA,+DACA,gDACA,WACAA,MAEAE,4BACA9C,WACA+C,SACAC,QAEA,IACA,SAKA,GAGAG,wBAvOA,WAqPA,IAdA,WACA,4CACA,oDACA,KAEA,kBACA,+BACA,sBACA,kBACA,oBAIA,KAbA,WAcAC,GACA,sEACAC,8BAEAC,uBACA,oBAEA1D,sCACAA,kCACA,CACA,wBACA2D,+BAEA,MACAC,QACAD,wBACAjB,OACAE,MACAD,OACAE,MACAgB,YAGAC,cAvBA,sCA6BA,IA3CA,eA2CAN,GACA,sEACAC,6BAEAC,uBACA,oBAEA1D,qCACAA,iCACA,CACA,wBACA2D,+BAEA,MACAC,QACAD,wBACAjB,OACAE,MACAD,OACAE,MACAgB,YAGAC,aAvBA,qCA6BA,IAxEA,eAwEAN,GACA,sEACAC,8BAEAC,uBACA,oBAEA1D,sCACAA,kCACA,CACA,wBACA2D,+BAEA,MACAC,QACAD,wBACAjB,OACAE,MACAD,OACAE,MACAgB,YAGAC,cAvBA,sCA6BA,IArGA,eAqGAN,GACA,sEACAC,6BAEAC,uBACA,oBAEA1D,qCACAA,iCACA,CACA,wBACA2D,+BAEA,MACAC,QACAD,wBACAjB,OACAE,MACAD,OACAE,MACAgB,YAGAC,aAvBA,qCArGA,eAkIAC,GAEA,IADA,kCAAA1C,WAnIA,WAoIAmC,GACA,kDACAC,6BAGAC,uBACA,qBAEA1D,qCACAA,iCACA,CACA,IAGA,EAHA,oBACA2D,0BAEA,cACAC,WACAD,wBACAjB,OACAE,MACAD,OACAE,OALA,iBAMAkB,GAAA,GANA,2BAOA,GAPA,SAUAD,aAzBA,sCAFA,8BAqCA,IADA,SAtKA,WAuKAN,GACA,sEACAC,8BAEAC,uBACA,oBAEA1D,sCACAA,kCACA,CACA,wBACA2D,+BAEA,MACAK,QACAL,wBACAjB,OACAE,MACAD,OACAE,MACAgB,YAGAC,cAvBA,sCA6BA,IApMA,eAoMAN,GACA,sEACAC,6BAEAC,uBACA,oBAEA1D,qCACAA,iCACA,CACA,wBACA2D,+BAEA,MACAK,QACAL,wBACAjB,OACAE,MACAD,OACAE,MACAgB,YAGAC,aAvBA,qCA6BA,IAjOA,eAiOAN,GACA,sEACAC,8BAEAC,uBACA,oBAEA1D,sCACAA,kCACA,CACA,wBACA2D,+BAEA,MACAK,QACAL,wBACAjB,OACAE,MACAD,OACAE,MACAgB,YAGAC,cAvBA,sCA6BA,IA9PA,eA8PAN,GACA,sEACAC,6BAEAC,uBACA,oBAEA1D,qCACAA,iCACA,CACA,wBACA2D,+BAEA,MACAK,QACAL,wBACAjB,OACAE,MACAD,OACAE,MACAgB,YAGAC,aAvBA,qCA9PA,eA2RAC,GAEA,IADA,kCAAA1C,WA5RA,WA6RAmC,GACA,kDACAC,6BAGAC,uBACA,qBAEA1D,qCACAA,iCACA,CACA,IAGA,EAHA,oBACA2D,0BAEA,cACAK,WACAL,wBACAjB,OACAE,MACAD,OACAE,OALA,iBAMAkB,GAAA,GANA,2BAOA,GAPA,SAUAD,aAzBA,sCAFA,8BAkNA,OA9KAF,gCAAA,OACAK,wDAEAD,gCAAA,OACAC,wDAIAL,uBACA,gDACA,IACA,eACAM,aACA,CACA,OACAC,WACAR,wBACAS,eACAC,UACA3B,UACAE,SAEA,eAEAmB,kBACAA,WACAA,UACAA,WACAA,UACAA,gBAEAO,WAGAC,UACAA,QACAJ,WACAR,wBACAS,gBACAC,UACA1B,UACAE,eAEA,gBACA,OACAsB,WACAR,wBACAS,eACAC,UACA3B,UACAE,SAEA,eAEAmB,kBACAA,WACAA,UACAA,WACAA,UACAA,gBAEAO,WAGAC,eACA,gBACA,OACAJ,WACAR,wBACAS,gBACAC,UACA1B,UACAE,SAEA,eAEAkB,kBACAA,WACAA,UACAA,WACAA,UACAA,gBAEAO,WAGAC,cAIAP,uBACA,gDACA,IACA,eACAE,aACA,CACA,OACAC,WACAR,wBACAS,eACAC,UACA3B,UACAE,SAEA,eAEAmB,kBACAA,WACAA,UACAA,WACAA,UACAA,gBAEAO,WAGAC,UACAA,QACAJ,WACAR,wBACAS,gBACAC,UACA1B,UACAE,eAEA,gBACA,OACAsB,WACAR,wBACAS,eACAC,UACA3B,UACAE,SAEA,eAEAmB,kBACAA,WACAA,UACAA,WACAA,UACAA,gBAEAO,WAGAC,eACA,gBACA,OACAJ,WACAR,wBACAS,gBACAC,UACA1B,UACAE,SAEA,eAEAkB,kBACAA,WACAA,UACAA,WACAA,UACAA,gBAEAO,WAGAC,cAKAC,eACA,GAEAC,gBAttBA,WAstBA,WACA,iBAAA1C,eAAAzC,WACA,qCAEA,kBAAA4C,kBACAwC,MAAA,YACAH,uBACAI,OACAC,OAAA,CACAxE,UACAyD,mBACAQ,cACAQ,eACAC,cACAnB,wBACAoB,gBACAC,gBACAC,gBACAC,gBACAC,aACAC,aACAC,aAEAX,MAAA,YAqDA,aApDA,OACAY,OACAC,OAAA,EAAAjB,WAAA,CACAkB,iBACAC,QACAC,oBACAC,yBAEAjB,MAAA,eACAkB,OAAA,YACApB,+CAGA,MACAc,OACAC,OAAA,EAAAjB,WAAA,CACAkB,iBACAC,QACAC,oBACAC,yBAEAjB,MAAA,eACAkB,OAAA,YACApB,+CAGA,MACAc,OACAC,OAAA,EAAAjB,WAAA,CACAkB,iBACAC,QACAC,oBACAC,yBAEAjB,MAAA,eACAkB,OAAA,YACApB,+CAGA,OACAc,OACAC,OAAA,EAAAjB,WAAA,CACAkB,iBACAC,QACAC,oBACAC,yBAEAjB,MAAA,eACAkB,OAAA,YACApB,+CAGA,EACA,GACAT,kBACAA,WACAA,UACAA,WACAA,UACAA,gBACAA,aACAA,YACA,CACA,kCAAA1C,WACAiE,OACAC,OAAAM,KAAAvB,WAAA,CACAkB,iBACAC,WACAC,oBACAC,yBAEAjB,MAAA,eACAkB,OAAA,YACApB,mDAKAoB,OAAA,YACApB,6CAIA,8DACA,kDACA,aAIAsB,uBACAnB,OACAC,OAAA,CACAxE,UACAyD,kBACAQ,cACAQ,gBACAC,cACAnB,wBACAsB,oBACAC,oBACAC,aACAC,aACAC,aAEAX,MAAA,YACA,0CACAqB,uBACAT,OACAC,OAAAS,QAAA1B,WAAA,CACAkB,iBACAC,cACAC,sCACAC,yBAEAjB,MAAA,eACAkB,OAAA,YACApB,qDAIAoB,OAAA,YACApB,qDAGA,wDACAyB,OACArB,OAAA,CACAxE,UACAyD,kBACAQ,cACAQ,gBACAC,cACAnB,wBACAsB,oBACAC,oBACAC,aACAC,aACAC,aAEAX,MAAA,YACA,iDACAqB,uBACAG,OACAX,OAAAS,QAAA1B,WAAA,CACAkB,iBACAC,cACAC,sCACAC,8CAEAjB,MAAA,eACAkB,OAAA,YACApB,6DAIAoB,OAAA,YACApB,wDAIAE,MAAA,WACA,+CACA,cAAA3C,eAAAzC,WACA,wBAMA6G,gBACAC,gBACA,iBACA,YACA,YACA,0BACA,+BANA,IASArG,wBATA,WAUA,sBACA,6BACA,sCACA,uCAGAsG,wBAhBA,WAiBA,+DAEA,kDAEA,uDACA,6BACA,2BAEA,qCCnhCgY,I,YCO5XC,EAAY,eACd,EACAhI,EACAmD,GACA,EACA,KACA,KACA,MAIa,aAAA6E,E,8BClBf,IAAIC,EAAQ,EAAQ,OAAR,CAAkB,SAC9BC,EAAOC,QAAU,SAAUC,GACzB,IAAIC,EAAK,IACT,IACE,MAAMD,GAAKC,GACX,MAAOC,GACP,IAEE,OADAD,EAAGJ,IAAS,GACJ,MAAMG,GAAKC,GACnB,MAAOE,KACT,OAAO,I,gHCFPC,EAAmB,IAavB,SAASC,EAAeC,EAAOC,EAAQC,EAAUC,GAC/C,IAAIC,GAAS,EACTrJ,EAAW,OACXsJ,GAAW,EACXjJ,EAAS4I,EAAM5I,OACfkJ,EAAS,GACTC,EAAeN,EAAO7I,OAE1B,IAAKA,EACH,OAAOkJ,EAELJ,IACFD,EAAS,eAASA,EAAQ,eAAUC,KAElCC,GACFpJ,EAAW,OACXsJ,GAAW,GAEJJ,EAAO7I,QAAU0I,IACxB/I,EAAW,OACXsJ,GAAW,EACXJ,EAAS,IAAI,OAASA,IAExBO,EACA,QAASJ,EAAQhJ,EAAQ,CACvB,IAAIkB,EAAQ0H,EAAMI,GACdjB,EAAuB,MAAZe,EAAmB5H,EAAQ4H,EAAS5H,GAGnD,GADAA,EAAS6H,GAAwB,IAAV7H,EAAeA,EAAQ,EAC1C+H,GAAYlB,IAAaA,EAAU,CACrC,IAAIsB,EAAcF,EAClB,MAAOE,IACL,GAAIR,EAAOQ,KAAiBtB,EAC1B,SAASqB,EAGbF,EAAOI,KAAKpI,QAEJvB,EAASkJ,EAAQd,EAAUgB,IACnCG,EAAOI,KAAKpI,GAGhB,OAAOgI,EAGM,Q,oCCxCXK,EAAa,gBAAS,SAASX,EAAOC,GACxC,OAAO,OAAAW,EAAA,MAAkBZ,GACrB,EAAeA,EAAO,eAAYC,EAAQ,EAAGW,EAAA,MAAmB,IAChE,MAGS,U,qBC/Bf,IAAIC,EAAW,EAAQ,QACnBC,EAAU,EAAQ,QAEtBtB,EAAOC,QAAU,SAAUsB,EAAM/J,EAAcgK,GAC7C,GAAIH,EAAS7J,GAAe,MAAMiK,UAAU,UAAYD,EAAO,0BAC/D,OAAOE,OAAOJ,EAAQC","file":"js/chunk-cae6b92e.bb9ae3d3.js","sourcesContent":["// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('p',{staticClass:\"alert alert-secondary\"},[_vm._v(\"\\n    Selecione as disciplinas para quais as turmas do atual plano\\n    \"),_c('b',[_vm._v(_vm._s(_vm.currentPlano.nome + \" - \" + _vm.currentPlano.ano))]),_vm._v(\"\\n    serão copiadas para o novo plano.\\n  \")]),_c('div',{staticClass:\"div-table\"},[_c('BaseTable',{attrs:{\"type\":\"modal\",\"hasSearchBar\":true,\"styles\":'max-height:500px; height:500px'},scopedSlots:_vm._u([{key:\"thead-search\",fn:function(){return [_c('VInputSearch',{attrs:{\"placeholder\":\"Pesquise nome ou codigo de uma disciplina...\"},model:{value:(_vm.searchDisciplinasModal),callback:function ($$v) {_vm.searchDisciplinasModal=$$v},expression:\"searchDisciplinasModal\"}})]},proxy:true},{key:\"thead\",fn:function(){return [_c('v-th',{attrs:{\"width\":\"25\"}}),_c('v-th-ordination',{attrs:{\"currentOrder\":_vm.ordenacaoModal.disciplinas,\"orderToCheck\":\"codigo\",\"width\":\"80\",\"align\":\"start\"}},[_vm._v(\"\\n          Código\\n        \")]),_c('v-th-ordination',{attrs:{\"currentOrder\":_vm.ordenacaoModal.disciplinas,\"orderToCheck\":\"nome\",\"width\":\"260\",\"align\":\"start\"}},[_vm._v(\"\\n          Nome\\n        \")]),_c('v-th-ordination',{attrs:{\"currentOrder\":_vm.ordenacaoModal.disciplinas,\"orderToCheck\":\"perfil.abreviacao\",\"width\":\"85\",\"align\":\"start\"}},[_vm._v(\"\\n          Perfil\\n        \")])]},proxy:true},{key:\"tbody\",fn:function(){return [_vm._l((_vm.DisciplinasOrderedModal),function(disciplina){return _c('tr',{directives:[{name:\"prevent-click-selection\",rawName:\"v-prevent-click-selection\"}],key:disciplina.id,on:{\"click\":function($event){return _vm.toggleItemInArray(disciplina.id, _vm.filtrosDisciplinas)}}},[_c('v-td',{attrs:{\"width\":\"25\",\"type\":\"content\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.filtrosDisciplinas),expression:\"filtrosDisciplinas\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"value\":disciplina.id,\"checked\":Array.isArray(_vm.filtrosDisciplinas)?_vm._i(_vm.filtrosDisciplinas,disciplina.id)>-1:(_vm.filtrosDisciplinas)},on:{\"change\":function($event){var $$a=_vm.filtrosDisciplinas,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=disciplina.id,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.filtrosDisciplinas=$$a.concat([$$v]))}else{$$i>-1&&(_vm.filtrosDisciplinas=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.filtrosDisciplinas=$$c}}}})]),_c('v-td',{attrs:{\"width\":\"80\",\"align\":\"start\"}},[_vm._v(_vm._s(disciplina.codigo))]),_c('v-td',{attrs:{\"width\":\"260\",\"align\":\"start\",\"title\":disciplina.nome}},[_vm._v(\"\\n            \"+_vm._s(disciplina.nome)+\"\\n          \")]),_c('v-td',{attrs:{\"width\":\"85\",\"align\":\"start\"}},[_vm._v(_vm._s(disciplina.perfil.abreviacao))])],1)}),(!_vm.DisciplinasOrderedModal.length)?_c('tr',[_c('v-td',{attrs:{\"colspan\":\"3\",\"width\":\"450\"}},[_vm._v(\"NENHUMA DISCIPLINA ENCONTRADA.\")])],1):_vm._e()]},proxy:true}])})],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <p class=\"alert alert-secondary\">\r\n      Selecione as disciplinas para quais as turmas do atual plano\r\n      <b>{{ currentPlano.nome + \" - \" + currentPlano.ano }}</b>\r\n      serão copiadas para o novo plano.\r\n    </p>\r\n\r\n    <div class=\"div-table\">\r\n      <BaseTable type=\"modal\" :hasSearchBar=\"true\" :styles=\"'max-height:500px; height:500px'\">\r\n        <template #thead-search>\r\n          <VInputSearch\r\n            v-model=\"searchDisciplinasModal\"\r\n            placeholder=\"Pesquise nome ou codigo de uma disciplina...\"\r\n          />\r\n        </template>\r\n        <template #thead>\r\n          <v-th width=\"25\" />\r\n          <v-th-ordination\r\n            :currentOrder=\"ordenacaoModal.disciplinas\"\r\n            orderToCheck=\"codigo\"\r\n            width=\"80\"\r\n            align=\"start\"\r\n          >\r\n            Código\r\n          </v-th-ordination>\r\n          <v-th-ordination\r\n            :currentOrder=\"ordenacaoModal.disciplinas\"\r\n            orderToCheck=\"nome\"\r\n            width=\"260\"\r\n            align=\"start\"\r\n          >\r\n            Nome\r\n          </v-th-ordination>\r\n          <v-th-ordination\r\n            :currentOrder=\"ordenacaoModal.disciplinas\"\r\n            orderToCheck=\"perfil.abreviacao\"\r\n            width=\"85\"\r\n            align=\"start\"\r\n          >\r\n            Perfil\r\n          </v-th-ordination>\r\n        </template>\r\n\r\n        <template #tbody>\r\n          <tr\r\n            v-for=\"disciplina in DisciplinasOrderedModal\"\r\n            :key=\"disciplina.id\"\r\n            @click=\"toggleItemInArray(disciplina.id, filtrosDisciplinas)\"\r\n            v-prevent-click-selection\r\n          >\r\n            <v-td width=\"25\" type=\"content\">\r\n              <input type=\"checkbox\" v-model=\"filtrosDisciplinas\" :value=\"disciplina.id\" />\r\n            </v-td>\r\n            <v-td width=\"80\" align=\"start\">{{ disciplina.codigo }}</v-td>\r\n            <v-td width=\"260\" align=\"start\" :title=\"disciplina.nome\">\r\n              {{ disciplina.nome }}\r\n            </v-td>\r\n            <v-td width=\"85\" align=\"start\">{{ disciplina.perfil.abreviacao }}</v-td>\r\n          </tr>\r\n\r\n          <tr v-if=\"!DisciplinasOrderedModal.length\">\r\n            <v-td colspan=\"3\" width=\"450\">NENHUMA DISCIPLINA ENCONTRADA.</v-td>\r\n          </tr>\r\n        </template>\r\n      </BaseTable>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from \"vuex\";\r\nimport { union, difference, find, filter, orderBy, some } from \"lodash-es\";\r\nimport turmaService from \"@/services/turma\";\r\nimport pedidoService from \"@/services/pedido\";\r\nimport pedidoExternoService from \"@/services/pedidoExterno\";\r\nimport turmaExternaService from \"@/services/turmaExterna\";\r\nimport { normalizeText } from \"@/common/utils\";\r\nimport { toggleItemInArray, preventClickSelection } from \"@/common/mixins\";\r\nimport { VInputSearch } from \"@/components/ui\";\r\n\r\nexport default {\r\n  name: \"ModalNovoPlano\",\r\n  mixins: [toggleItemInArray, preventClickSelection],\r\n  components: { VInputSearch },\r\n  props: {\r\n    plano: { type: Object, required: true },\r\n    closeModal: { type: Function, required: true },\r\n  },\r\n  data() {\r\n    return {\r\n      searchDisciplinasModal: \"\",\r\n      filtrosDisciplinas: [],\r\n      ordenacaoModal: {\r\n        disciplinas: { order: \"codigo\", type: \"asc\" },\r\n      },\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\"createPlano\"]),\r\n\r\n    selectAllDisciplinas() {\r\n      this.filtrosDisciplinas = union(\r\n        this.filtrosDisciplinas,\r\n        this.DisciplinasFiltredModal.map((disciplina) => disciplina.id)\r\n      );\r\n    },\r\n    selectNoneDisciplinas() {\r\n      this.filtrosDisciplinas = difference(\r\n        this.filtrosDisciplinas,\r\n        this.DisciplinasFiltredModal.map((disciplina) => disciplina.id)\r\n      );\r\n    },\r\n\r\n    generateGradesAtivas(ano) {\r\n      const gradesAtivas = {\r\n        semestre1: { CCD: [], CCN: [], EC: [], SI: [] },\r\n        semestre2: { CCD: [], CCN: [], EC: [], SI: [] },\r\n      };\r\n      //define grades ativas por periodo\r\n      let grades;\r\n      let periodoInicial, periodoFinal;\r\n\r\n      //CCD\r\n      grades = filter(this.AllGrades, [\"Curso\", 4]);\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < grades.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\r\n          (1 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        gradesAtivas.semestre1.CCD.push({\r\n          id: grades[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < grades.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\r\n          (3 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        gradesAtivas.semestre2.CCD.push({\r\n          id: grades[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      //CCN\r\n      grades = filter(this.AllGrades, [\"Curso\", 1]);\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < grades.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\r\n          (1 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        gradesAtivas.semestre1.CCN.push({\r\n          id: grades[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < grades.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\r\n          (3 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        gradesAtivas.semestre2.CCN.push({\r\n          id: grades[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      //SI\r\n      grades = filter(this.AllGrades, [\"Curso\", 3]);\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < grades.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\r\n          (1 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        gradesAtivas.semestre1.SI.push({\r\n          id: grades[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < grades.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\r\n          (3 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        gradesAtivas.semestre2.SI.push({\r\n          id: grades[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      //EC\r\n      grades = filter(this.AllGrades, [\"Curso\", 2]);\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < grades.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\r\n          (1 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        gradesAtivas.semestre1.EC.push({\r\n          id: grades[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < grades.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\r\n          (3 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        gradesAtivas.semestre2.EC.push({\r\n          id: grades[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      return gradesAtivas;\r\n    },\r\n\r\n    generateGradesExternasAtivas(ano) {\r\n      const gradesAtivas = {\r\n        semestre1: {},\r\n        semestre2: {},\r\n      };\r\n\r\n      let cursosComGrades = filter(this.AllCursos, (curso) => {\r\n        const gradeFound = this.AllGradesCursosExternos.find((grade) => grade.Curso === curso.id);\r\n        return gradeFound ? true : false;\r\n      });\r\n\r\n      let grades;\r\n      let periodoInicial, periodoFinal;\r\n\r\n      cursosComGrades.forEach((c) => {\r\n        gradesAtivas.semestre1[c.codigo] = [];\r\n        gradesAtivas.semestre2[c.codigo] = [];\r\n\r\n        //define grades ativas por periodo\r\n        grades = filter(this.AllGradesCursosExternos, [\"Curso\", c.id]);\r\n        periodoFinal = 0;\r\n        for (let i = 0; i < grades.length; i++) {\r\n          periodoInicial = periodoFinal + 1;\r\n          periodoFinal =\r\n            1 +\r\n            2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\r\n            (1 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n          if (isNaN(periodoFinal)) {\r\n            periodoFinal = 10;\r\n          }\r\n          gradesAtivas.semestre1[c.codigo].push({\r\n            id: grades[i].id,\r\n            inicio: periodoInicial,\r\n            fim: periodoFinal,\r\n          });\r\n          if (periodoFinal > 9) {\r\n            break;\r\n          }\r\n        }\r\n        periodoFinal = 0;\r\n        for (let i = 0; i < grades.length; i++) {\r\n          periodoInicial = periodoFinal + 1;\r\n          periodoFinal =\r\n            1 +\r\n            2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\r\n            (3 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n          if (isNaN(periodoFinal)) {\r\n            periodoFinal = 10;\r\n          }\r\n          gradesAtivas.semestre2[c.codigo].push({\r\n            id: grades[i].id,\r\n            inicio: periodoInicial,\r\n            fim: periodoFinal,\r\n          });\r\n          if (periodoFinal > 9) {\r\n            break;\r\n          }\r\n        }\r\n      });\r\n\r\n      return gradesAtivas;\r\n    },\r\n\r\n    generateTurmasNovoPlano() {\r\n      const gradesAtivas = this.generateGradesAtivas(this.plano.ano);\r\n      const gradesExternasAtivas = this.generateGradesExternasAtivas(this.plano.ano);\r\n      const turmasNovoPlano = [];\r\n\r\n      let periodoEntrada = function(curso, semestre, periodoDisciplina) {\r\n        if (curso.semestreInicial === 3) return true;\r\n        else if (curso.semestreInicial === 2)\r\n          return periodoDisciplina % 2 === (semestre === 1 ? 0 : 1);\r\n        else return periodoDisciplina % 2 === (semestre === 1 ? 1 : 0);\r\n      };\r\n\r\n      //# 1 Semestre - Preenche as disciplina da grade\r\n      let disciplinasGrade1Semestre = [];\r\n      for (let i = 0; i < gradesAtivas.semestre1.CCD.length; i++) {\r\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\r\n          Grade: gradesAtivas.semestre1.CCD[i].id,\r\n        });\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 1) {\r\n            if (\r\n              disciplina.periodo >= gradesAtivas.semestre1.CCD[i].inicio &&\r\n              disciplina.periodo <= gradesAtivas.semestre1.CCD[i].fim\r\n            ) {\r\n              let t = find(disciplinasGrade1Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasGrade1Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: true,\r\n                  EC: false,\r\n                  CCN: false,\r\n                  SI: false,\r\n                  periodo: 1,\r\n                });\r\n              } else {\r\n                t.CCD = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let i = 0; i < gradesAtivas.semestre1.EC.length; i++) {\r\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\r\n          Grade: gradesAtivas.semestre1.EC[i].id,\r\n        });\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 1) {\r\n            if (\r\n              disciplina.periodo >= gradesAtivas.semestre1.EC[i].inicio &&\r\n              disciplina.periodo <= gradesAtivas.semestre1.EC[i].fim\r\n            ) {\r\n              let t = find(disciplinasGrade1Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasGrade1Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: false,\r\n                  EC: true,\r\n                  CCN: false,\r\n                  SI: false,\r\n                  periodo: 1,\r\n                });\r\n              } else {\r\n                t.EC = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let i = 0; i < gradesAtivas.semestre1.CCN.length; i++) {\r\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\r\n          Grade: gradesAtivas.semestre1.CCN[i].id,\r\n        });\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 0) {\r\n            if (\r\n              disciplina.periodo >= gradesAtivas.semestre1.CCN[i].inicio &&\r\n              disciplina.periodo <= gradesAtivas.semestre1.CCN[i].fim\r\n            ) {\r\n              let t = find(disciplinasGrade1Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasGrade1Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: false,\r\n                  EC: false,\r\n                  CCN: true,\r\n                  SI: false,\r\n                  periodo: 1,\r\n                });\r\n              } else {\r\n                t.CCN = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let i = 0; i < gradesAtivas.semestre1.SI.length; i++) {\r\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\r\n          Grade: gradesAtivas.semestre1.SI[i].id,\r\n        });\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 0) {\r\n            if (\r\n              disciplina.periodo >= gradesAtivas.semestre1.SI[i].inicio &&\r\n              disciplina.periodo <= gradesAtivas.semestre1.SI[i].fim\r\n            ) {\r\n              let t = find(disciplinasGrade1Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasGrade1Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: false,\r\n                  EC: false,\r\n                  CCN: false,\r\n                  SI: true,\r\n                  periodo: 1,\r\n                });\r\n              } else {\r\n                t.SI = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let prop in gradesExternasAtivas.semestre1) {\r\n        let curso = find(this.AllCursos, { codigo: prop });\r\n        for (let i = 0; i < gradesExternasAtivas.semestre1[prop].length; i++) {\r\n          let disciplinasGrade = filter(this.DisciplinasGradesExternas, {\r\n            Grade: gradesExternasAtivas.semestre1[prop][i].id,\r\n          });\r\n\r\n          disciplinasGrade.forEach((disciplina) => {\r\n            if (periodoEntrada(curso, 1, disciplina.periodo)) {\r\n              if (\r\n                disciplina.periodo >= gradesExternasAtivas.semestre1[prop][i].inicio &&\r\n                disciplina.periodo <= gradesExternasAtivas.semestre1[prop][i].fim\r\n              ) {\r\n                let t = find(disciplinasGrade1Semestre, {\r\n                  Disciplina: disciplina.Disciplina,\r\n                });\r\n                if (t === undefined) {\r\n                  disciplinasGrade1Semestre.push({\r\n                    Disciplina: disciplina.Disciplina,\r\n                    CCD: false,\r\n                    EC: false,\r\n                    CCN: false,\r\n                    SI: false,\r\n                    [prop]: true,\r\n                    periodo: 1,\r\n                  });\r\n                } else {\r\n                  t[prop] = true;\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      //# 2 Semestre - Preenche as disciplina da grade\r\n      let disciplinasGrade2Semestre = [];\r\n      for (let i = 0; i < gradesAtivas.semestre2.CCD.length; i++) {\r\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\r\n          Grade: gradesAtivas.semestre2.CCD[i].id,\r\n        });\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 0) {\r\n            if (\r\n              disciplina.periodo >= gradesAtivas.semestre2.CCD[i].inicio &&\r\n              disciplina.periodo <= gradesAtivas.semestre2.CCD[i].fim\r\n            ) {\r\n              let t = find(disciplinasGrade2Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasGrade2Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: true,\r\n                  EC: false,\r\n                  CCN: false,\r\n                  SI: false,\r\n                  periodo: 3,\r\n                });\r\n              } else {\r\n                t.CCD = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let i = 0; i < gradesAtivas.semestre2.EC.length; i++) {\r\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\r\n          Grade: gradesAtivas.semestre2.EC[i].id,\r\n        });\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 0) {\r\n            if (\r\n              disciplina.periodo >= gradesAtivas.semestre2.EC[i].inicio &&\r\n              disciplina.periodo <= gradesAtivas.semestre2.EC[i].fim\r\n            ) {\r\n              let t = find(disciplinasGrade2Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasGrade2Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: false,\r\n                  EC: true,\r\n                  CCN: false,\r\n                  SI: false,\r\n                  periodo: 3,\r\n                });\r\n              } else {\r\n                t.EC = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let i = 0; i < gradesAtivas.semestre2.CCN.length; i++) {\r\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\r\n          Grade: gradesAtivas.semestre2.CCN[i].id,\r\n        });\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 1) {\r\n            if (\r\n              disciplina.periodo >= gradesAtivas.semestre2.CCN[i].inicio &&\r\n              disciplina.periodo <= gradesAtivas.semestre2.CCN[i].fim\r\n            ) {\r\n              let t = find(disciplinasGrade2Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasGrade2Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: false,\r\n                  EC: false,\r\n                  CCN: true,\r\n                  SI: false,\r\n                  periodo: 3,\r\n                });\r\n              } else {\r\n                t.CCN = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let i = 0; i < gradesAtivas.semestre2.SI.length; i++) {\r\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\r\n          Grade: gradesAtivas.semestre2.SI[i].id,\r\n        });\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 1) {\r\n            if (\r\n              disciplina.periodo >= gradesAtivas.semestre2.SI[i].inicio &&\r\n              disciplina.periodo <= gradesAtivas.semestre2.SI[i].fim\r\n            ) {\r\n              let t = find(disciplinasGrade2Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasGrade2Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: false,\r\n                  EC: false,\r\n                  CCN: false,\r\n                  SI: true,\r\n                  periodo: 3,\r\n                });\r\n              } else {\r\n                t.SI = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let prop in gradesExternasAtivas.semestre2) {\r\n        let curso = find(this.AllCursos, { codigo: prop });\r\n        for (let i = 0; i < gradesExternasAtivas.semestre2[prop].length; i++) {\r\n          let disciplinasGrade = filter(this.DisciplinasGradesExternas, {\r\n            Grade: gradesExternasAtivas.semestre2[prop][i].id,\r\n          });\r\n\r\n          disciplinasGrade.forEach((disciplina) => {\r\n            if (periodoEntrada(curso, 2, disciplina.periodo)) {\r\n              if (\r\n                disciplina.periodo >= gradesExternasAtivas.semestre2[prop][i].inicio &&\r\n                disciplina.periodo <= gradesExternasAtivas.semestre2[prop][i].fim\r\n              ) {\r\n                let t = find(disciplinasGrade2Semestre, {\r\n                  Disciplina: disciplina.Disciplina,\r\n                });\r\n                if (t === undefined) {\r\n                  disciplinasGrade2Semestre.push({\r\n                    Disciplina: disciplina.Disciplina,\r\n                    CCD: false,\r\n                    EC: false,\r\n                    CCN: false,\r\n                    SI: false,\r\n                    [prop]: true,\r\n                    periodo: 1,\r\n                  });\r\n                } else {\r\n                  t[prop] = true;\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      //Filtra apenas disicplinas DCC\r\n      disciplinasGrade1Semestre = filter(disciplinasGrade1Semestre, (disciplinaGrade) =>\r\n        some(this.DisciplinasDCC, [\"id\", disciplinaGrade.Disciplina])\r\n      );\r\n      disciplinasGrade2Semestre = filter(disciplinasGrade1Semestre, (disciplinaGrade) =>\r\n        some(this.DisciplinasDCC, [\"id\", disciplinaGrade.Disciplina])\r\n      );\r\n\r\n      // Prenche turmasNovoPlano\r\n      disciplinasGrade1Semestre.forEach((disciplinaGrade) => {\r\n        if (!this.filtrosDisciplinas.includes(disciplinaGrade.Disciplina)) {\r\n          if (\r\n            (disciplinaGrade.CCD || disciplinaGrade.EC) &&\r\n            (disciplinaGrade.CCN || disciplinaGrade.SI)\r\n          ) {\r\n            let turma = {\r\n              semestre: 1,\r\n              Disciplina: disciplinaGrade.Disciplina,\r\n              turno: \"Diurno\",\r\n              letra: \"A\",\r\n              CCD: disciplinaGrade.CCD,\r\n              EC: disciplinaGrade.EC,\r\n            };\r\n            for (let prop in disciplinaGrade) {\r\n              if (\r\n                prop !== \"Disciplina\" &&\r\n                prop !== \"CCD\" &&\r\n                prop !== \"EC\" &&\r\n                prop !== \"CCN\" &&\r\n                prop !== \"SI\" &&\r\n                prop !== \"periodo\"\r\n              ) {\r\n                turma[prop] = disciplinaGrade[prop];\r\n              }\r\n            }\r\n            turmasNovoPlano.push(turma);\r\n            turmasNovoPlano.push({\r\n              semestre: 1,\r\n              Disciplina: disciplinaGrade.Disciplina,\r\n              turno: \"Noturno\",\r\n              letra: \"B\",\r\n              CCN: disciplinaGrade.CCN,\r\n              SI: disciplinaGrade.SI,\r\n            });\r\n          } else if (disciplinaGrade.CCD || disciplinaGrade.EC) {\r\n            let turma = {\r\n              semestre: 1,\r\n              Disciplina: disciplinaGrade.Disciplina,\r\n              turno: \"Diurno\",\r\n              letra: \"A\",\r\n              CCD: disciplinaGrade.CCD,\r\n              EC: disciplinaGrade.EC,\r\n            };\r\n            for (let prop in disciplinaGrade) {\r\n              if (\r\n                prop !== \"Disciplina\" &&\r\n                prop !== \"CCD\" &&\r\n                prop !== \"EC\" &&\r\n                prop !== \"CCN\" &&\r\n                prop !== \"SI\" &&\r\n                prop !== \"periodo\"\r\n              ) {\r\n                turma[prop] = disciplinaGrade[prop];\r\n              }\r\n            }\r\n            turmasNovoPlano.push(turma);\r\n          } else if (disciplinaGrade.CCN || disciplinaGrade.SI) {\r\n            let turma = {\r\n              semestre: 1,\r\n              Disciplina: disciplinaGrade.Disciplina,\r\n              turno: \"Noturno\",\r\n              letra: \"A\",\r\n              CCN: disciplinaGrade.CCN,\r\n              SI: disciplinaGrade.SI,\r\n            };\r\n            for (let prop in disciplinaGrade) {\r\n              if (\r\n                prop !== \"Disciplina\" &&\r\n                prop !== \"CCD\" &&\r\n                prop !== \"EC\" &&\r\n                prop !== \"CCN\" &&\r\n                prop !== \"SI\" &&\r\n                prop !== \"periodo\"\r\n              ) {\r\n                turma[prop] = disciplinaGrade[prop];\r\n              }\r\n            }\r\n            turmasNovoPlano.push(turma);\r\n          }\r\n        }\r\n      });\r\n      disciplinasGrade2Semestre.forEach((disciplinaGrade) => {\r\n        if (!this.filtrosDisciplinas.includes(disciplinaGrade.Disciplina)) {\r\n          if (\r\n            (disciplinaGrade.CCD || disciplinaGrade.EC) &&\r\n            (disciplinaGrade.CCN || disciplinaGrade.SI)\r\n          ) {\r\n            let turma = {\r\n              semestre: 3,\r\n              Disciplina: disciplinaGrade.Disciplina,\r\n              turno: \"Diurno\",\r\n              letra: \"A\",\r\n              CCD: disciplinaGrade.CCD,\r\n              EC: disciplinaGrade.EC,\r\n            };\r\n            for (let prop in disciplinaGrade) {\r\n              if (\r\n                prop !== \"Disciplina\" &&\r\n                prop !== \"CCD\" &&\r\n                prop !== \"EC\" &&\r\n                prop !== \"CCN\" &&\r\n                prop !== \"SI\" &&\r\n                prop !== \"periodo\"\r\n              ) {\r\n                turma[prop] = disciplinaGrade[prop];\r\n              }\r\n            }\r\n            turmasNovoPlano.push(turma);\r\n            turmasNovoPlano.push({\r\n              semestre: 3,\r\n              Disciplina: disciplinaGrade.Disciplina,\r\n              turno: \"Noturno\",\r\n              letra: \"B\",\r\n              CCN: disciplinaGrade.CCN,\r\n              SI: disciplinaGrade.SI,\r\n            });\r\n          } else if (disciplinaGrade.CCD || disciplinaGrade.EC) {\r\n            let turma = {\r\n              semestre: 3,\r\n              Disciplina: disciplinaGrade.Disciplina,\r\n              turno: \"Diurno\",\r\n              letra: \"A\",\r\n              CCD: disciplinaGrade.CCD,\r\n              EC: disciplinaGrade.EC,\r\n            };\r\n            for (let prop in disciplinaGrade) {\r\n              if (\r\n                prop !== \"Disciplina\" &&\r\n                prop !== \"CCD\" &&\r\n                prop !== \"EC\" &&\r\n                prop !== \"CCN\" &&\r\n                prop !== \"SI\" &&\r\n                prop !== \"periodo\"\r\n              ) {\r\n                turma[prop] = disciplinaGrade[prop];\r\n              }\r\n            }\r\n            turmasNovoPlano.push(turma);\r\n          } else if (disciplinaGrade.CCN || disciplinaGrade.SI) {\r\n            let turma = {\r\n              semestre: 3,\r\n              Disciplina: disciplinaGrade.Disciplina,\r\n              turno: \"Noturno\",\r\n              letra: \"A\",\r\n              CCN: disciplinaGrade.CCN,\r\n              SI: disciplinaGrade.SI,\r\n            };\r\n            for (let prop in disciplinaGrade) {\r\n              if (\r\n                prop !== \"Disciplina\" &&\r\n                prop !== \"CCD\" &&\r\n                prop !== \"EC\" &&\r\n                prop !== \"CCN\" &&\r\n                prop !== \"SI\" &&\r\n                prop !== \"periodo\"\r\n              ) {\r\n                turma[prop] = disciplinaGrade[prop];\r\n              }\r\n            }\r\n            turmasNovoPlano.push(turma);\r\n          }\r\n        }\r\n      });\r\n\r\n      console.log(turmasNovoPlano);\r\n      return turmasNovoPlano;\r\n    },\r\n    handleCopyPlano() {\r\n      this.setLoading({ type: \"partial\", value: true });\r\n      const turmasNovoPlano = this.generateTurmasNovoPlano();\r\n\r\n      this.createPlano({ data: this.plano })\r\n        .then((plano) => {\r\n          turmasNovoPlano.forEach((t) => {\r\n            turmaService\r\n              .create({\r\n                id: undefined,\r\n                periodo: t.semestre,\r\n                letra: t.letra,\r\n                turno1: t.turno,\r\n                turno2: undefined,\r\n                Disciplina: t.Disciplina,\r\n                Docente1: undefined,\r\n                Docente2: undefined,\r\n                Horario1: undefined,\r\n                Horario2: undefined,\r\n                Sala1: undefined,\r\n                Sala2: undefined,\r\n                Plano: plano.id,\r\n              })\r\n              .then((turma) => {\r\n                if (t.CCN) {\r\n                  pedidoService\r\n                    .update(1, turma.Turma.id, {\r\n                      Turma: turma.Turma.id,\r\n                      Curso: 1,\r\n                      vagasPeriodizadas: 1,\r\n                      vagasNaoPeriodizadas: 0,\r\n                    })\r\n                    .then(() => {})\r\n                    .catch((error) => {\r\n                      console.log(\"erro ao atualizar pedido: \" + error);\r\n                    });\r\n                }\r\n                if (t.EC) {\r\n                  pedidoService\r\n                    .update(2, turma.Turma.id, {\r\n                      Turma: turma.Turma.id,\r\n                      Curso: 2,\r\n                      vagasPeriodizadas: 1,\r\n                      vagasNaoPeriodizadas: 0,\r\n                    })\r\n                    .then(() => {})\r\n                    .catch((error) => {\r\n                      console.log(\"erro ao atualizar pedido: \" + error);\r\n                    });\r\n                }\r\n                if (t.SI) {\r\n                  pedidoService\r\n                    .update(3, turma.Turma.id, {\r\n                      Turma: turma.Turma.id,\r\n                      Curso: 3,\r\n                      vagasPeriodizadas: 1,\r\n                      vagasNaoPeriodizadas: 0,\r\n                    })\r\n                    .then(() => {})\r\n                    .catch((error) => {\r\n                      console.log(\"erro ao atualizar pedido: \" + error);\r\n                    });\r\n                }\r\n                if (t.CCD) {\r\n                  pedidoService\r\n                    .update(4, turma.Turma.id, {\r\n                      Turma: turma.Turma.id,\r\n                      Curso: 4,\r\n                      vagasPeriodizadas: 1,\r\n                      vagasNaoPeriodizadas: 0,\r\n                    })\r\n                    .then(() => {})\r\n                    .catch((error) => {\r\n                      console.log(\"erro ao atualizar pedido: \" + error);\r\n                    });\r\n                }\r\n                for (let prop in t) {\r\n                  if (\r\n                    prop !== \"Disciplina\" &&\r\n                    prop !== \"CCD\" &&\r\n                    prop !== \"EC\" &&\r\n                    prop !== \"CCN\" &&\r\n                    prop !== \"SI\" &&\r\n                    prop !== \"semestre\" &&\r\n                    prop !== \"turno\" &&\r\n                    prop !== \"letra\"\r\n                  ) {\r\n                    let c = find(this.AllCursos, { codigo: prop });\r\n                    pedidoService\r\n                      .update(c.id, turma.Turma.id, {\r\n                        Turma: turma.Turma.id,\r\n                        Curso: c.id,\r\n                        vagasPeriodizadas: 1,\r\n                        vagasNaoPeriodizadas: 0,\r\n                      })\r\n                      .then(() => {})\r\n                      .catch((error) => {\r\n                        console.log(\"erro ao atualizar pedido: \" + error);\r\n                      });\r\n                  }\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.log(\"erro ao criar turma: \" + error);\r\n              });\r\n          });\r\n\r\n          let turmasCopiar = filter(this.$store.state.turma.Turmas, (t) => {\r\n            let disciplina = this.filtrosDisciplinas.includes(t.Disciplina);\r\n            if (disciplina) return true;\r\n            else return false;\r\n          });\r\n\r\n          turmasCopiar.forEach((t) => {\r\n            turmaService\r\n              .create({\r\n                id: undefined,\r\n                periodo: t.periodo,\r\n                letra: t.letra,\r\n                turno1: t.turno1,\r\n                turno2: undefined,\r\n                Disciplina: t.Disciplina,\r\n                Horario1: t.Horario1,\r\n                Horario2: t.Horario2,\r\n                Sala1: undefined,\r\n                Sala2: undefined,\r\n                Plano: plano.id,\r\n              })\r\n              .then((turma) => {\r\n                let pedidos = this.$store.state.pedido.Pedidos[t.id];\r\n                pedidos.forEach((p) => {\r\n                  pedidoService\r\n                    .update(p.Curso, turma.Turma.id, {\r\n                      Turma: turma.Turma.id,\r\n                      Curso: p.Curso,\r\n                      vagasPeriodizadas: p.vagasPeriodizadas,\r\n                      vagasNaoPeriodizadas: 0,\r\n                    })\r\n                    .then(() => {})\r\n                    .catch((error) => {\r\n                      console.log(\"erro ao atualizar pedido: \" + error);\r\n                    });\r\n                });\r\n              })\r\n              .catch((error) => {\r\n                console.log(\"erro ao criar turma externa: \" + error);\r\n              });\r\n          });\r\n          this.$store.state.turmaExterna.Turmas.forEach((t) => {\r\n            turmaExternaService\r\n              .create({\r\n                id: undefined,\r\n                periodo: t.periodo,\r\n                letra: t.letra,\r\n                turno1: t.turno1,\r\n                turno2: undefined,\r\n                Disciplina: t.Disciplina,\r\n                Horario1: t.Horario1,\r\n                Horario2: t.Horario2,\r\n                Sala1: undefined,\r\n                Sala2: undefined,\r\n                Plano: plano.id,\r\n              })\r\n              .then((turma) => {\r\n                let pedidos = this.$store.state.pedidoExterno.Pedidos[t.id];\r\n                pedidos.forEach((p) => {\r\n                  pedidoExternoService\r\n                    .update(p.Curso, turma.Turma.id, {\r\n                      Turma: turma.Turma.id,\r\n                      Curso: p.Curso,\r\n                      vagasPeriodizadas: p.vagasPeriodizadas,\r\n                      vagasNaoPeriodizadas: p.vagasNaoPeriodizadas,\r\n                    })\r\n                    .then(() => {})\r\n                    .catch((error) => {\r\n                      console.log(\"erro ao atualizar pedido externo: \" + error);\r\n                    });\r\n                });\r\n              })\r\n              .catch((error) => {\r\n                console.log(\"erro ao criar turma externa: \" + error);\r\n              });\r\n          });\r\n        })\r\n        .then(() => {\r\n          this.$store.dispatch(\"fetchAll\").then(() => {\r\n            this.setLoading({ type: \"partial\", value: false });\r\n            this.closeModal();\r\n          });\r\n        });\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\r\n      \"DisciplinasDCC\",\r\n      \"AllGrades\",\r\n      \"AllCursos\",\r\n      \"AllGradesCursosExternos\",\r\n      \"DisciplinasGradesExternas\",\r\n    ]),\r\n\r\n    DisciplinasOrderedModal() {\r\n      return orderBy(\r\n        this.DisciplinasFiltredModal,\r\n        this.ordenacaoModal.disciplinas.order,\r\n        this.ordenacaoModal.disciplinas.type\r\n      );\r\n    },\r\n    DisciplinasFiltredModal() {\r\n      if (this.searchDisciplinasModal === \"\") return this.DisciplinasDCC;\r\n\r\n      const searchNormalized = normalizeText(this.searchDisciplinasModal);\r\n\r\n      return filter(this.DisciplinasDCC, (disciplina) => {\r\n        const disciplinaNome = normalizeText(disciplina.nome);\r\n        const disciplinaCodigo = normalizeText(disciplina.codigo);\r\n\r\n        return disciplinaNome.match(searchNormalized) || disciplinaCodigo.match(searchNormalized);\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CopyPlano.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CopyPlano.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CopyPlano.vue?vue&type=template&id=4222df90&\"\nimport script from \"./CopyPlano.vue?vue&type=script&lang=js&\"\nexport * from \"./CopyPlano.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n"],"sourceRoot":""}