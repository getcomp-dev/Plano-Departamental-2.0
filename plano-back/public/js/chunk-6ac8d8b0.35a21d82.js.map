{"version":3,"sources":["webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/CopyPlano.vue?f79d","webpack:///src/pages/gerenciar/Planos/ModalNovoPlano/CopyPlano.vue","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/CopyPlano.vue?ba13","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/CopyPlano.vue","webpack:///./node_modules/lodash-es/_baseDifference.js","webpack:///./node_modules/lodash-es/difference.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","currentPlano","nome","ano","attrs","scopedSlots","_u","key","fn","model","value","callback","$$v","searchDisciplinasModal","expression","proxy","ordenacaoModal","disciplinas","_l","disciplina","directives","name","rawName","id","on","$event","toggleItemInArray","filtrosDisciplinas","domProps","Array","isArray","_i","$$a","$$el","target","$$c","checked","$$i","concat","slice","codigo","perfil","abreviacao","DisciplinasOrderedModal","length","_e","staticRenderFns","mixins","components","props","plano","closeModal","data","methods","selectAllDisciplinas","selectNoneDisciplinas","generateGradesAtivas","semestre1","semestre2","grades","periodoFinal","periodoInicial","gradesAtivas","CCD","push","i","inicio","fim","CCN","SI","EC","generateGradesExternasAtivas","gradeFound","cursosComGrades","forEach","c","isNaN","generateTurmasNovoPlano","curso","semestreInicial","Grade","disciplinasGrade","periodo","Disciplina","undefined","t","disciplinasGrade1Semestre","gradesExternasAtivas","prop","periodoEntrada","disciplinasGrade2Semestre","semestre","disciplinaGrade","turno","letra","turma","turmasNovoPlano","console","log","handleCopyPlano","setLoading","createPlano","computed","DisciplinasFiltredModal","DisciplinasDCC","disciplinaNome","match","searchNormalized","disciplinaCodigo","component","LARGE_ARRAY_SIZE","baseDifference","array","values","iteratee","comparator","index","includes","isCommon","result","valuesLength","outer","valuesIndex","difference","isArrayLikeObject"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,IAAI,CAACE,YAAY,yBAAyB,CAACN,EAAIO,GAAG,4EAA4EH,EAAG,IAAI,CAACJ,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIS,aAAaC,KAAO,MAAQV,EAAIS,aAAaE,QAAQX,EAAIO,GAAG,iDAAiDH,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,YAAY,CAACQ,MAAM,CAAC,KAAO,QAAQ,cAAe,EAAK,OAAS,kCAAkCC,YAAYb,EAAIc,GAAG,CAAC,CAACC,IAAI,eAAeC,GAAG,WAAW,MAAO,CAACZ,EAAG,cAAc,CAACQ,MAAM,CAAC,YAAc,gDAAgDK,MAAM,CAACC,MAAOlB,EAA0B,uBAAEmB,SAAS,SAAUC,GAAMpB,EAAIqB,uBAAuBD,GAAKE,WAAW,8BAA8BC,OAAM,GAAM,CAACR,IAAI,QAAQC,GAAG,WAAW,MAAO,CAACZ,EAAG,OAAO,CAACQ,MAAM,CAAC,MAAQ,QAAQR,EAAG,kBAAkB,CAACQ,MAAM,CAAC,aAAeZ,EAAIwB,eAAeC,YAAY,aAAe,SAAS,MAAQ,KAAK,MAAQ,UAAU,CAACzB,EAAIO,GAAG,kCAAkCH,EAAG,kBAAkB,CAACQ,MAAM,CAAC,aAAeZ,EAAIwB,eAAeC,YAAY,aAAe,OAAO,MAAQ,MAAM,MAAQ,UAAU,CAACzB,EAAIO,GAAG,gCAAgCH,EAAG,kBAAkB,CAACQ,MAAM,CAAC,aAAeZ,EAAIwB,eAAeC,YAAY,aAAe,oBAAoB,MAAQ,KAAK,MAAQ,UAAU,CAACzB,EAAIO,GAAG,oCAAoCgB,OAAM,GAAM,CAACR,IAAI,QAAQC,GAAG,WAAW,MAAO,CAAChB,EAAI0B,GAAI1B,EAA2B,yBAAE,SAAS2B,GAAY,OAAOvB,EAAG,KAAK,CAACwB,WAAW,CAAC,CAACC,KAAK,0BAA0BC,QAAQ,8BAA8Bf,IAAIY,EAAWI,GAAGC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOjC,EAAIkC,kBAAkBP,EAAWI,GAAI/B,EAAImC,uBAAuB,CAAC/B,EAAG,OAAO,CAACQ,MAAM,CAAC,MAAQ,KAAK,KAAO,YAAY,CAACR,EAAG,QAAQ,CAACwB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUZ,MAAOlB,EAAsB,mBAAEsB,WAAW,uBAAuBV,MAAM,CAAC,KAAO,YAAYwB,SAAS,CAAC,MAAQT,EAAWI,GAAG,QAAUM,MAAMC,QAAQtC,EAAImC,oBAAoBnC,EAAIuC,GAAGvC,EAAImC,mBAAmBR,EAAWI,KAAK,EAAG/B,EAAsB,oBAAGgC,GAAG,CAAC,OAAS,SAASC,GAAQ,IAAIO,EAAIxC,EAAImC,mBAAmBM,EAAKR,EAAOS,OAAOC,IAAIF,EAAKG,QAAuB,GAAGP,MAAMC,QAAQE,GAAK,CAAC,IAAIpB,EAAIO,EAAWI,GAAGc,EAAI7C,EAAIuC,GAAGC,EAAIpB,GAAQqB,EAAKG,QAASC,EAAI,IAAI7C,EAAImC,mBAAmBK,EAAIM,OAAO,CAAC1B,KAAYyB,GAAK,IAAI7C,EAAImC,mBAAmBK,EAAIO,MAAM,EAAEF,GAAKC,OAAON,EAAIO,MAAMF,EAAI,UAAW7C,EAAImC,mBAAmBQ,QAAWvC,EAAG,OAAO,CAACQ,MAAM,CAAC,MAAQ,KAAK,MAAQ,UAAU,CAACZ,EAAIO,GAAGP,EAAIQ,GAAGmB,EAAWqB,WAAW5C,EAAG,OAAO,CAACQ,MAAM,CAAC,MAAQ,MAAM,MAAQ,QAAQ,MAAQe,EAAWjB,OAAO,CAACV,EAAIO,GAAG,iBAAiBP,EAAIQ,GAAGmB,EAAWjB,MAAM,kBAAkBN,EAAG,OAAO,CAACQ,MAAM,CAAC,MAAQ,KAAK,MAAQ,UAAU,CAACZ,EAAIO,GAAGP,EAAIQ,GAAGmB,EAAWsB,OAAOC,gBAAgB,MAAOlD,EAAImD,wBAAwBC,OAAiHpD,EAAIqD,KAA7GjD,EAAG,KAAK,CAACA,EAAG,OAAO,CAACQ,MAAM,CAAC,QAAU,IAAI,MAAQ,QAAQ,CAACZ,EAAIO,GAAG,qCAAqC,KAAcgB,OAAM,QAAW,MAC13F+B,EAAkB,G,03BCiFtB,OACEzB,KAAM,iBACN0B,OAAQ,CAAC,EAAX,aACEC,WAAY,CAAd,oBACEC,MAAO,CACLC,MAAO,CAAX,yBACIC,WAAY,CAAhB,4BAEEC,KARF,WASI,MAAO,CACLvC,uBAAwB,GACxBc,mBAAoB,GACpBX,eAAgB,CACdC,YAAa,CAArB,8BAKEoC,QAAS,EAAX,KACA,iCADA,IAGIC,qBAHJ,WAIM7D,KAAKkC,mBAAqB,OAAhC,OAAgC,CAChC,wBACA,8CAAQ,OAAR,UAGI4B,sBATJ,WAUM9D,KAAKkC,mBAAqB,OAAhC,OAAgC,CAChC,wBACA,8CAAQ,OAAR,UAII6B,qBAhBJ,SAgBA,GACM,IAKN,EACA,IANA,GACQC,UAAW,CAAnB,2BACQC,UAAW,CAAnB,4BAOMC,EAAS,OAAf,OAAe,CAAf,4BACMC,EAAe,EACf,IAAK,IAAX,mBAWQ,GAVAC,EAAiBD,EAAe,EAChCA,EACR,EACA,+DACA,gDACQE,EAAaL,UAAUM,IAAIC,KAAK,CAC9BzC,GAAIoC,EAAOM,GAAG1C,GACd2C,OAAQL,EACRM,IAAKP,IAEHA,EAAe,EACjB,MAGJA,EAAe,EACf,IAAK,IAAX,mBAWQ,GAVAC,EAAiBD,EAAe,EAChCA,EACR,EACA,+DACA,gDACQE,EAAaJ,UAAUK,IAAIC,KAAK,CAC9BzC,GAAIoC,EAAO,GAArB,GACUO,OAAQL,EACRM,IAAKP,IAEHA,EAAe,EACjB,MAKJD,EAAS,OAAf,OAAe,CAAf,4BACMC,EAAe,EACf,IAAK,IAAX,mBAWQ,GAVAC,EAAiBD,EAAe,EAChCA,EACR,EACA,+DACA,gDACQE,EAAaL,UAAUW,IAAIJ,KAAK,CAC9BzC,GAAIoC,EAAO,GAArB,GACUO,OAAQL,EACRM,IAAKP,IAEHA,EAAe,EACjB,MAGJA,EAAe,EACf,IAAK,IAAX,mBAWQ,GAVAC,EAAiBD,EAAe,EAChCA,EACR,EACA,+DACA,gDACQE,EAAaJ,UAAUU,IAAIJ,KAAK,CAC9BzC,GAAIoC,EAAO,GAArB,GACUO,OAAQL,EACRM,IAAKP,IAEHA,EAAe,EACjB,MAKJD,EAAS,OAAf,OAAe,CAAf,4BACMC,EAAe,EACf,IAAK,IAAX,mBAWQ,GAVAC,EAAiBD,EAAe,EAChCA,EACR,EACA,+DACA,gDACQE,EAAaL,UAAUY,GAAGL,KAAK,CAC7BzC,GAAIoC,EAAO,GAArB,GACUO,OAAQL,EACRM,IAAKP,IAEHA,EAAe,EACjB,MAGJA,EAAe,EACf,IAAK,IAAX,mBAWQ,GAVAC,EAAiBD,EAAe,EAChCA,EACR,EACA,+DACA,gDACQE,EAAaJ,UAAUW,GAAGL,KAAK,CAC7BzC,GAAIoC,EAAO,GAArB,GACUO,OAAQL,EACRM,IAAKP,IAEHA,EAAe,EACjB,MAKJD,EAAS,OAAf,OAAe,CAAf,4BACMC,EAAe,EACf,IAAK,IAAX,mBAWQ,GAVAC,EAAiBD,EAAe,EAChCA,EACR,EACA,+DACA,gDACQE,EAAaL,UAAUa,GAAGN,KAAK,CAC7BzC,GAAIoC,EAAO,GAArB,GACUO,OAAQL,EACRM,IAAKP,IAEHA,EAAe,EACjB,MAGJA,EAAe,EACf,IAAK,IAAX,mBAWQ,GAVAC,EAAiBD,EAAe,EAChCA,EACR,EACA,+DACA,gDACQE,EAAaJ,UAAUY,GAAGN,KAAK,CAC7BzC,GAAIoC,EAAO,GAArB,GACUO,OAAQL,EACRM,IAAKP,IAEHA,EAAe,EACjB,MAIJ,OAAOE,GAGTS,6BAxKJ,SAwKA,OAWA,EACA,IAZA,OACA,GACQd,UAAW,GACXC,UAAW,IAGnB,6CACQ,IAAR,uEACQ,QAAOc,KAoDT,OA9CAC,EAAgBC,SAAQ,SAA9B,GACQZ,EAAaL,UAAUkB,EAAEnC,QAAU,GACnCsB,EAAaJ,UAAUiB,EAAEnC,QAAU,GAGnCmB,EAAS,OAAjB,OAAiB,CAAjB,0CACQC,EAAe,EACf,IAAK,IAAb,mBAcU,GAbAC,EAAiBD,EAAe,EAChCA,EACV,EACA,+DACA,gDACcgB,MAAMhB,KACRA,EAAe,IAEjBE,EAAaL,UAAUkB,EAAEnC,QAAQwB,KAAK,CACpCzC,GAAIoC,EAAOM,GAAG1C,GACd2C,OAAQL,EACRM,IAAKP,IAEHA,EAAe,EACjB,MAGJA,EAAe,EACf,IAAK,IAAb,mBAcU,GAbAC,EAAiBD,EAAe,EAChCA,EACV,EACA,+DACA,gDACcgB,MAAMhB,KACRA,EAAe,IAEjBE,EAAaJ,UAAUiB,EAAEnC,QAAQwB,KAAK,CACpCzC,GAAIoC,EAAO,GAAvB,GACYO,OAAQL,EACRM,IAAKP,IAEHA,EAAe,EACjB,SAKCE,GAGTe,wBAvOJ,WAqPM,IAdN,WACA,4CACA,oDACA,KAEA,kBACQ,OAA8B,IAA1BC,EAAMC,kBAClB,sBACA,kBACA,oBAIA,KAbA,WAcA,GACQ,IAAR,kEACUC,MAAOlB,EAAaL,UAAUM,IAAIE,GAAG1C,KAEvC0D,EAAiBP,SAAQ,SAAjC,GACU,GAAIvD,EAAW+D,QAAU,IAAM,GAEzC,sCACA,kCACA,CACc,IAAd,oBACgBC,WAAYhE,EAAWgE,kBAEfC,IAANC,EACFC,EAA0BtB,KAAK,CAC7BmB,WAAYhE,EAAWgE,WACvBpB,KAAK,EACLO,IAAI,EACJF,KAAK,EACLC,IAAI,EACJa,QAAS,IAGXG,EAAEtB,KAAM,OAvBxB,sCA6BM,IA3CN,eA2CA,GACQ,IAAR,kEACUiB,MAAOlB,EAAaL,UAAUa,GAAG,GAA3C,KAEQW,EAAiBP,SAAQ,SAAjC,GACU,GAAIvD,EAAW+D,QAAU,IAAM,GAEzC,qCACA,iCACA,CACc,IAAd,oBACgBC,WAAYhE,EAAWgE,kBAEfC,IAANC,EACFC,EAA0BtB,KAAK,CAC7BmB,WAAYhE,EAAWgE,WACvBpB,KAAK,EACLO,IAAI,EACJF,KAAK,EACLC,IAAI,EACJa,QAAS,IAGXG,EAAEf,IAAK,OAvBvB,qCA6BM,IAxEN,eAwEA,GACQ,IAAR,kEACUU,MAAOlB,EAAaL,UAAUW,IAAI,GAA5C,KAEQa,EAAiBP,SAAQ,SAAjC,GACU,GAAIvD,EAAW+D,QAAU,IAAM,GAEzC,sCACA,kCACA,CACc,IAAd,oBACgBC,WAAYhE,EAAWgE,kBAEfC,IAANC,EACFC,EAA0BtB,KAAK,CAC7BmB,WAAYhE,EAAWgE,WACvBpB,KAAK,EACLO,IAAI,EACJF,KAAK,EACLC,IAAI,EACJa,QAAS,IAGXG,EAAEjB,KAAM,OAvBxB,sCA6BM,IArGN,eAqGA,GACQ,IAAR,kEACUY,MAAOlB,EAAaL,UAAUY,GAAG,GAA3C,KAEQY,EAAiBP,SAAQ,SAAjC,GACU,GAAIvD,EAAW+D,QAAU,IAAM,GAEzC,qCACA,iCACA,CACc,IAAd,oBACgBC,WAAYhE,EAAWgE,kBAEfC,IAANC,EACFC,EAA0BtB,KAAK,CAC7BmB,WAAYhE,EAAWgE,WACvBpB,KAAK,EACLO,IAAI,EACJF,KAAK,EACLC,IAAI,EACJa,QAAS,IAGXG,EAAEhB,IAAK,OAvBvB,qCArGA,eAkIA,GAEQ,IADA,IAAR,yCAnIA,WAoIA,GACU,IAAV,uDACYW,MAAOO,EAAqB9B,UAAU+B,GAAM,GAAxD,KAGUP,EAAiBP,SAAQ,SAAnC,GACY,GAAIe,EAAeX,EAAO,EAAG3D,EAAW+D,UAEpD,qCACA,iCACA,CACgB,IAGhB,EAHA,oBACkBC,WAAYhE,EAAWgE,aAEzB,QAAUC,IAANC,EACFC,EAA0BtB,MAA5C,GACoBmB,WAAYhE,EAAWgE,WACvBpB,KAAK,EACLO,IAAI,EACJF,KAAK,EACLC,IAAI,GALxB,iBAMA,MANA,2BAOA,GAPA,SAUkBgB,EAAEG,IAAQ,OAzB5B,sCAFM,IAAK,IAAX,sBAqCM,IADA,IAAN,KAtKA,WAuKA,GACQ,IAAR,kEACUR,MAAOlB,EAAaJ,UAAUK,IAAI,GAA5C,KAEQkB,EAAiBP,SAAQ,SAAjC,GACU,GAAIvD,EAAW+D,QAAU,IAAM,GAEzC,sCACA,kCACA,CACc,IAAd,oBACgBC,WAAYhE,EAAWgE,kBAEfC,IAANC,EACFK,EAA0B1B,KAAK,CAC7BmB,WAAYhE,EAAWgE,WACvBpB,KAAK,EACLO,IAAI,EACJF,KAAK,EACLC,IAAI,EACJa,QAAS,IAGXG,EAAEtB,KAAM,OAvBxB,sCA6BM,IApMN,eAoMA,GACQ,IAAR,kEACUiB,MAAOlB,EAAaJ,UAAUY,GAAG,GAA3C,KAEQW,EAAiBP,SAAQ,SAAjC,GACU,GAAIvD,EAAW+D,QAAU,IAAM,GAEzC,qCACA,iCACA,CACc,IAAd,oBACgBC,WAAYhE,EAAWgE,kBAEfC,IAANC,EACFK,EAA0B1B,KAAK,CAC7BmB,WAAYhE,EAAWgE,WACvBpB,KAAK,EACLO,IAAI,EACJF,KAAK,EACLC,IAAI,EACJa,QAAS,IAGXG,EAAEf,IAAK,OAvBvB,qCA6BM,IAjON,eAiOA,GACQ,IAAR,kEACUU,MAAOlB,EAAaJ,UAAUU,IAAI,GAA5C,KAEQa,EAAiBP,SAAQ,SAAjC,GACU,GAAIvD,EAAW+D,QAAU,IAAM,GAEzC,sCACA,kCACA,CACc,IAAd,oBACgBC,WAAYhE,EAAWgE,kBAEfC,IAANC,EACFK,EAA0B1B,KAAK,CAC7BmB,WAAYhE,EAAWgE,WACvBpB,KAAK,EACLO,IAAI,EACJF,KAAK,EACLC,IAAI,EACJa,QAAS,IAGXG,EAAEjB,KAAM,OAvBxB,sCA6BM,IA9PN,eA8PA,GACQ,IAAR,kEACUY,MAAOlB,EAAaJ,UAAUW,GAAG,GAA3C,KAEQY,EAAiBP,SAAQ,SAAjC,GACU,GAAIvD,EAAW+D,QAAU,IAAM,GAEzC,qCACA,iCACA,CACc,IAAd,oBACgBC,WAAYhE,EAAWgE,kBAEfC,IAANC,EACFK,EAA0B1B,KAAK,CAC7BmB,WAAYhE,EAAWgE,WACvBpB,KAAK,EACLO,IAAI,EACJF,KAAK,EACLC,IAAI,EACJa,QAAS,IAGXG,EAAEhB,IAAK,OAvBvB,qCA9PA,eA2RA,GAEQ,IADA,IAAR,yCA5RA,WA6RA,GACU,IAAV,uDACYW,MAAOO,EAAqB7B,UAAU,GAAlD,QAGUuB,EAAiBP,SAAQ,SAAnC,GACY,GAAIe,EAAeX,EAAO,EAAG3D,EAAW+D,UAEpD,qCACA,iCACA,CACgB,IAGhB,EAHA,oBACkBC,WAAYhE,EAAWgE,aAEzB,QAAUC,IAANC,EACFK,EAA0B1B,MAA5C,GACoBmB,WAAYhE,EAAWgE,WACvBpB,KAAK,EACLO,IAAI,EACJF,KAAK,EACLC,IAAI,GALxB,iBAMA,MANA,2BAOA,GAPA,SAUkBgB,EAAE,IAApB,OAzBA,sCAFM,IAAK,IAAX,sBAkNM,OA9KAC,EAA4B,OAAlC,OAAkC,CAAlC,sBACA,wDAEMI,EAA4B,OAAlC,OAAkC,CAAlC,sBACA,wDAIMJ,EAA0BZ,SAAQ,SAAxC,GACQ,IAAK,EAAb,0CACU,IACV,eACA,aACA,CACY,IAAZ,GACciB,SAAU,EACVR,WAAYS,EAAgBT,WAC5BU,MAAO,SACPC,MAAO,IACP/B,IAAK6B,EAAgB7B,IACrBO,GAAIsB,EAAgBtB,IAEtB,IAAK,IAAjB,OAEA,kBACA,WACA,UACA,WACA,UACA,gBAEgByB,EAAM,GAAtB,MAGYC,EAAgBhC,KAAK+B,GACrBC,EAAgBhC,KAAK,CACnB2B,SAAU,EACVR,WAAYS,EAAgBT,WAC5BU,MAAO,UACPC,MAAO,IACP1B,IAAKwB,EAAgBxB,IACrBC,GAAIuB,EAAgBvB,UAElC,gBACY,IAAZ,GACcsB,SAAU,EACVR,WAAYS,EAAgBT,WAC5BU,MAAO,SACPC,MAAO,IACP/B,IAAK6B,EAAgB7B,IACrBO,GAAIsB,EAAgBtB,IAEtB,IAAK,IAAjB,OAEA,kBACA,WACA,UACA,WACA,UACA,gBAEgB,EAAhB,SAGY0B,EAAgBhC,KAAK,QACjC,gBACY,IAAZ,GACc2B,SAAU,EACVR,WAAYS,EAAgBT,WAC5BU,MAAO,UACPC,MAAO,IACP1B,IAAKwB,EAAgBxB,IACrBC,GAAIuB,EAAgBvB,IAEtB,IAAK,IAAjB,OAEA,kBACA,WACA,UACA,WACA,UACA,gBAEgB,EAAhB,SAGY2B,EAAgBhC,KAAK,OAI3B0B,EAA0BhB,SAAQ,SAAxC,GACQ,IAAK,EAAb,0CACU,IACV,eACA,aACA,CACY,IAAZ,GACciB,SAAU,EACVR,WAAYS,EAAgBT,WAC5BU,MAAO,SACPC,MAAO,IACP/B,IAAK6B,EAAgB7B,IACrBO,GAAIsB,EAAgBtB,IAEtB,IAAK,IAAjB,OAEA,kBACA,WACA,UACA,WACA,UACA,gBAEgByB,EAAM,GAAtB,MAGYC,EAAgBhC,KAAK+B,GACrBC,EAAgBhC,KAAK,CACnB2B,SAAU,EACVR,WAAYS,EAAgBT,WAC5BU,MAAO,UACPC,MAAO,IACP1B,IAAKwB,EAAgBxB,IACrBC,GAAIuB,EAAgBvB,UAElC,gBACY,IAAZ,GACcsB,SAAU,EACVR,WAAYS,EAAgBT,WAC5BU,MAAO,SACPC,MAAO,IACP/B,IAAK6B,EAAgB7B,IACrBO,GAAIsB,EAAgBtB,IAEtB,IAAK,IAAjB,OAEA,kBACA,WACA,UACA,WACA,UACA,gBAEgB,EAAhB,SAGY0B,EAAgBhC,KAAK,QACjC,gBACY,IAAZ,GACc2B,SAAU,EACVR,WAAYS,EAAgBT,WAC5BU,MAAO,UACPC,MAAO,IACP1B,IAAKwB,EAAgBxB,IACrBC,GAAIuB,EAAgBvB,IAEtB,IAAK,IAAjB,OAEA,kBACA,WACA,UACA,WACA,UACA,gBAEgB,EAAhB,SAGY2B,EAAgBhC,KAAK,OAK3BiC,QAAQC,IAAIF,GACLA,GAETG,gBAttBJ,WAstBA,WACM1G,KAAK2G,WAAW,CAAtB,0BACM,IAAN,iCAEM3G,KAAK4G,YAAY,CAAvB,kBACA,kBACQ,IACE,EAAV,qBACY,EAAZ,KACA,QACc,QAAd,EACc,QAAd,WACc,MAAd,QACc,OAAd,QACc,YAAd,EACc,WAAd,aACc,cAAd,EACc,cAAd,EACc,cAAd,EACc,cAAd,EACc,WAAd,EACc,WAAd,EACc,MAAd,OAEA,kBAyDc,IAAd,SAxDA,OACgB,EAAhB,KACA,qBACkB,MAAlB,WACkB,MAAlB,EACkB,kBAAlB,EACkB,qBAAlB,IAEA,qBAEA,mBACkB,QAAlB,uCAGA,MACgB,EAAhB,KACA,qBACkB,MAAlB,WACkB,MAAlB,EACkB,kBAAlB,EACkB,qBAAlB,IAEA,qBAEA,mBACkB,QAAlB,uCAGA,MACgB,EAAhB,KACA,qBACkB,MAAlB,WACkB,MAAlB,EACkB,kBAAlB,EACkB,qBAAlB,IAEA,qBAEA,mBACkB,QAAlB,uCAGA,OACgB,EAAhB,KACA,qBACkB,MAAlB,WACkB,MAAlB,EACkB,kBAAlB,EACkB,qBAAlB,IAEA,qBAEA,mBACkB,QAAlB,uCAGA,EACgB,GAChB,kBACA,WACA,UACA,WACA,UACA,gBACA,aACA,YACA,CACkB,IAAlB,8BAAoB,OAApB,IACkB,EAAlB,KACA,wBACoB,MAApB,WACoB,MAApB,KACoB,kBAApB,EACoB,qBAApB,IAEA,qBAEA,mBACoB,QAApB,2CAKA,mBACc,QAAd,qCAIU,IAAV,0DACY,IAAZ,8CACY,QAAZ,KAIU,EAAV,qBACY,EAAZ,KACA,QACc,QAAd,EACc,QAAd,UACc,MAAd,QACc,OAAd,SACc,YAAd,EACc,WAAd,aACc,SAAd,WACc,SAAd,WACc,WAAd,EACc,WAAd,EACc,MAAd,OAEA,kBACc,IAAd,sCACc,EAAd,qBACgB,EAAhB,KACA,2BACkB,MAAlB,WACkB,MAAlB,QACkB,kBAAlB,oBACkB,qBAAlB,IAEA,qBAEA,mBACkB,QAAlB,6CAIA,mBACc,QAAd,6CAGU,EAAV,sDACY,EAAZ,KACA,QACc,QAAd,EACc,QAAd,UACc,MAAd,QACc,OAAd,SACc,YAAd,EACc,WAAd,aACc,SAAd,WACc,SAAd,WACc,WAAd,EACc,WAAd,EACc,MAAd,OAEA,kBACc,IAAd,6CACc,EAAd,qBACgB,EAAhB,KACA,2BACkB,MAAlB,WACkB,MAAlB,QACkB,kBAAlB,oBACkB,qBAAlB,yBAEA,qBAEA,mBACkB,QAAlB,qDAIA,mBACc,QAAd,6CAGA,SACU,EAAV,kBACY,KAAZ,QACY,MAAZ,uBACY,KAAZ,YA7LC,QAgMS,EAAV,6CACY,EAAZ,YAAc,KAAd,UAAc,OAAd,IACY,EAAZ,uBAOEC,SAAU,EAAZ,KACA,gBACA,iBACA,YACA,YACA,0BACA,wCANA,IASI3D,wBATJ,WAUM,OAAO,OAAb,OAAa,CACb,6BACA,sCACA,uCAGI4D,wBAhBJ,WAiBM,GAAoC,KAAhC9G,KAAKoB,uBAA+B,OAAOpB,KAAK+G,eAEpD,IAAN,8CAEM,OAAO,OAAb,OAAa,CAAb,iCACQ,IAAR,yBACA,2BAEQ,OAAOC,EAAeC,MAAMC,IAAqBC,EAAiBF,MAAMC,UCliCgT,I,YCO5XE,EAAY,eACd,EACAtH,EACAuD,GACA,EACA,KACA,KACA,MAIa,aAAA+D,E,yHCVXC,EAAmB,IAavB,SAASC,EAAeC,EAAOC,EAAQC,EAAUC,GAC/C,IAAIC,GAAS,EACTC,EAAW,OACXC,GAAW,EACX1E,EAASoE,EAAMpE,OACf2E,EAAS,GACTC,EAAeP,EAAOrE,OAE1B,IAAKA,EACH,OAAO2E,EAELL,IACFD,EAAS,eAASA,EAAQ,eAAUC,KAElCC,GACFE,EAAW,OACXC,GAAW,GAEJL,EAAOrE,QAAUkE,IACxBO,EAAW,OACXC,GAAW,EACXL,EAAS,IAAI,OAASA,IAExBQ,EACA,QAASL,EAAQxE,EAAQ,CACvB,IAAIlC,EAAQsG,EAAMI,GACdd,EAAuB,MAAZY,EAAmBxG,EAAQwG,EAASxG,GAGnD,GADAA,EAASyG,GAAwB,IAAVzG,EAAeA,EAAQ,EAC1C4G,GAAYhB,IAAaA,EAAU,CACrC,IAAIoB,EAAcF,EAClB,MAAOE,IACL,GAAIT,EAAOS,KAAiBpB,EAC1B,SAASmB,EAGbF,EAAOvD,KAAKtD,QAEJ2G,EAASJ,EAAQX,EAAUa,IACnCI,EAAOvD,KAAKtD,GAGhB,OAAO6G,EAGM,Q,oCCxCXI,EAAa,gBAAS,SAASX,EAAOC,GACxC,OAAO,OAAAW,EAAA,MAAkBZ,GACrB,EAAeA,EAAO,eAAYC,EAAQ,EAAGW,EAAA,MAAmB,IAChE,MAGS","file":"js/chunk-6ac8d8b0.35a21d82.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',{staticClass:\"alert alert-secondary\"},[_vm._v(\"\\n    Selecione as disciplinas para quais as turmas do atual plano\\n    \"),_c('b',[_vm._v(_vm._s(_vm.currentPlano.nome + \" - \" + _vm.currentPlano.ano))]),_vm._v(\"\\n    serão copiadas para o novo plano.\\n  \")]),_c('div',{staticClass:\"div-table\"},[_c('BaseTable',{attrs:{\"type\":\"modal\",\"hasSearchBar\":true,\"styles\":'max-height:500px; height:500px'},scopedSlots:_vm._u([{key:\"thead-search\",fn:function(){return [_c('InputSearch',{attrs:{\"placeholder\":\"Pesquise nome ou codigo de uma disciplina...\"},model:{value:(_vm.searchDisciplinasModal),callback:function ($$v) {_vm.searchDisciplinasModal=$$v},expression:\"searchDisciplinasModal\"}})]},proxy:true},{key:\"thead\",fn:function(){return [_c('v-th',{attrs:{\"width\":\"25\"}}),_c('v-th-ordination',{attrs:{\"currentOrder\":_vm.ordenacaoModal.disciplinas,\"orderToCheck\":\"codigo\",\"width\":\"80\",\"align\":\"start\"}},[_vm._v(\"\\n          Código\\n        \")]),_c('v-th-ordination',{attrs:{\"currentOrder\":_vm.ordenacaoModal.disciplinas,\"orderToCheck\":\"nome\",\"width\":\"260\",\"align\":\"start\"}},[_vm._v(\"\\n          Nome\\n        \")]),_c('v-th-ordination',{attrs:{\"currentOrder\":_vm.ordenacaoModal.disciplinas,\"orderToCheck\":\"perfil.abreviacao\",\"width\":\"85\",\"align\":\"start\"}},[_vm._v(\"\\n          Perfil\\n        \")])]},proxy:true},{key:\"tbody\",fn:function(){return [_vm._l((_vm.DisciplinasOrderedModal),function(disciplina){return _c('tr',{directives:[{name:\"prevent-click-selection\",rawName:\"v-prevent-click-selection\"}],key:disciplina.id,on:{\"click\":function($event){return _vm.toggleItemInArray(disciplina.id, _vm.filtrosDisciplinas)}}},[_c('v-td',{attrs:{\"width\":\"25\",\"type\":\"content\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.filtrosDisciplinas),expression:\"filtrosDisciplinas\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"value\":disciplina.id,\"checked\":Array.isArray(_vm.filtrosDisciplinas)?_vm._i(_vm.filtrosDisciplinas,disciplina.id)>-1:(_vm.filtrosDisciplinas)},on:{\"change\":function($event){var $$a=_vm.filtrosDisciplinas,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=disciplina.id,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.filtrosDisciplinas=$$a.concat([$$v]))}else{$$i>-1&&(_vm.filtrosDisciplinas=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.filtrosDisciplinas=$$c}}}})]),_c('v-td',{attrs:{\"width\":\"80\",\"align\":\"start\"}},[_vm._v(_vm._s(disciplina.codigo))]),_c('v-td',{attrs:{\"width\":\"260\",\"align\":\"start\",\"title\":disciplina.nome}},[_vm._v(\"\\n            \"+_vm._s(disciplina.nome)+\"\\n          \")]),_c('v-td',{attrs:{\"width\":\"85\",\"align\":\"start\"}},[_vm._v(_vm._s(disciplina.perfil.abreviacao))])],1)}),(!_vm.DisciplinasOrderedModal.length)?_c('tr',[_c('v-td',{attrs:{\"colspan\":\"3\",\"width\":\"450\"}},[_vm._v(\"NENHUMA DISCIPLINA ENCONTRADA.\")])],1):_vm._e()]},proxy:true}])})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <p class=\"alert alert-secondary\">\n      Selecione as disciplinas para quais as turmas do atual plano\n      <b>{{ currentPlano.nome + \" - \" + currentPlano.ano }}</b>\n      serão copiadas para o novo plano.\n    </p>\n\n    <div class=\"div-table\">\n      <BaseTable type=\"modal\" :hasSearchBar=\"true\" :styles=\"'max-height:500px; height:500px'\">\n        <template #thead-search>\n          <InputSearch\n            v-model=\"searchDisciplinasModal\"\n            placeholder=\"Pesquise nome ou codigo de uma disciplina...\"\n          />\n        </template>\n        <template #thead>\n          <v-th width=\"25\" />\n          <v-th-ordination\n            :currentOrder=\"ordenacaoModal.disciplinas\"\n            orderToCheck=\"codigo\"\n            width=\"80\"\n            align=\"start\"\n          >\n            Código\n          </v-th-ordination>\n          <v-th-ordination\n            :currentOrder=\"ordenacaoModal.disciplinas\"\n            orderToCheck=\"nome\"\n            width=\"260\"\n            align=\"start\"\n          >\n            Nome\n          </v-th-ordination>\n          <v-th-ordination\n            :currentOrder=\"ordenacaoModal.disciplinas\"\n            orderToCheck=\"perfil.abreviacao\"\n            width=\"85\"\n            align=\"start\"\n          >\n            Perfil\n          </v-th-ordination>\n        </template>\n\n        <template #tbody>\n          <tr\n            v-for=\"disciplina in DisciplinasOrderedModal\"\n            :key=\"disciplina.id\"\n            @click=\"toggleItemInArray(disciplina.id, filtrosDisciplinas)\"\n            v-prevent-click-selection\n          >\n            <v-td width=\"25\" type=\"content\">\n              <input type=\"checkbox\" v-model=\"filtrosDisciplinas\" :value=\"disciplina.id\" />\n            </v-td>\n            <v-td width=\"80\" align=\"start\">{{ disciplina.codigo }}</v-td>\n            <v-td width=\"260\" align=\"start\" :title=\"disciplina.nome\">\n              {{ disciplina.nome }}\n            </v-td>\n            <v-td width=\"85\" align=\"start\">{{ disciplina.perfil.abreviacao }}</v-td>\n          </tr>\n\n          <tr v-if=\"!DisciplinasOrderedModal.length\">\n            <v-td colspan=\"3\" width=\"450\">NENHUMA DISCIPLINA ENCONTRADA.</v-td>\n          </tr>\n        </template>\n      </BaseTable>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from \"vuex\";\nimport { union, difference, find, filter, orderBy, some } from \"lodash-es\";\nimport turmaService from \"@/services/turma\";\nimport pedidoService from \"@/services/pedido\";\nimport pedidoExternoService from \"@/services/pedidoExterno\";\nimport turmaExternaService from \"@/services/turmaExterna\";\nimport { normalizeText } from \"@/common/utils\";\nimport { toggleItemInArray, preventClickSelection } from \"@/common/mixins\";\nimport { InputSearch } from \"@/components/ui\";\n//import semestresLetivos from \"../../../../store/module/semestresLetivos\";\n\nexport default {\n  name: \"ModalNovoPlano\",\n  mixins: [toggleItemInArray, preventClickSelection],\n  components: { InputSearch },\n  props: {\n    plano: { type: Object, required: true },\n    closeModal: { type: Function, required: true },\n  },\n  data() {\n    return {\n      searchDisciplinasModal: \"\",\n      filtrosDisciplinas: [],\n      ordenacaoModal: {\n        disciplinas: { order: \"codigo\", type: \"asc\" },\n      },\n    };\n  },\n\n  methods: {\n    ...mapActions([\"createPlano\"]),\n\n    selectAllDisciplinas() {\n      this.filtrosDisciplinas = union(\n        this.filtrosDisciplinas,\n        this.DisciplinasFiltredModal.map((disciplina) => disciplina.id)\n      );\n    },\n    selectNoneDisciplinas() {\n      this.filtrosDisciplinas = difference(\n        this.filtrosDisciplinas,\n        this.DisciplinasFiltredModal.map((disciplina) => disciplina.id)\n      );\n    },\n\n    generateGradesAtivas(ano) {\n      const gradesAtivas = {\n        semestre1: { CCD: [], CCN: [], EC: [], SI: [] },\n        semestre2: { CCD: [], CCN: [], EC: [], SI: [] },\n      };\n      //define grades ativas por periodo\n      let grades;\n      let periodoInicial, periodoFinal;\n\n      //CCD\n      grades = filter(this.AllGrades, [\"Curso\", 4]);\n      periodoFinal = 0;\n      for (let i = 0; i < grades.length; i++) {\n        periodoInicial = periodoFinal + 1;\n        periodoFinal =\n          1 +\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\n          (1 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\n        gradesAtivas.semestre1.CCD.push({\n          id: grades[i].id,\n          inicio: periodoInicial,\n          fim: periodoFinal,\n        });\n        if (periodoFinal > 9) {\n          break;\n        }\n      }\n      periodoFinal = 0;\n      for (let i = 0; i < grades.length; i++) {\n        periodoInicial = periodoFinal + 1;\n        periodoFinal =\n          1 +\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\n          (3 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\n        gradesAtivas.semestre2.CCD.push({\n          id: grades[i].id,\n          inicio: periodoInicial,\n          fim: periodoFinal,\n        });\n        if (periodoFinal > 9) {\n          break;\n        }\n      }\n\n      //CCN\n      grades = filter(this.AllGrades, [\"Curso\", 1]);\n      periodoFinal = 0;\n      for (let i = 0; i < grades.length; i++) {\n        periodoInicial = periodoFinal + 1;\n        periodoFinal =\n          1 +\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\n          (1 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\n        gradesAtivas.semestre1.CCN.push({\n          id: grades[i].id,\n          inicio: periodoInicial,\n          fim: periodoFinal,\n        });\n        if (periodoFinal > 9) {\n          break;\n        }\n      }\n      periodoFinal = 0;\n      for (let i = 0; i < grades.length; i++) {\n        periodoInicial = periodoFinal + 1;\n        periodoFinal =\n          1 +\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\n          (3 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\n        gradesAtivas.semestre2.CCN.push({\n          id: grades[i].id,\n          inicio: periodoInicial,\n          fim: periodoFinal,\n        });\n        if (periodoFinal > 9) {\n          break;\n        }\n      }\n\n      //SI\n      grades = filter(this.AllGrades, [\"Curso\", 3]);\n      periodoFinal = 0;\n      for (let i = 0; i < grades.length; i++) {\n        periodoInicial = periodoFinal + 1;\n        periodoFinal =\n          1 +\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\n          (1 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\n        gradesAtivas.semestre1.SI.push({\n          id: grades[i].id,\n          inicio: periodoInicial,\n          fim: periodoFinal,\n        });\n        if (periodoFinal > 9) {\n          break;\n        }\n      }\n      periodoFinal = 0;\n      for (let i = 0; i < grades.length; i++) {\n        periodoInicial = periodoFinal + 1;\n        periodoFinal =\n          1 +\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\n          (3 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\n        gradesAtivas.semestre2.SI.push({\n          id: grades[i].id,\n          inicio: periodoInicial,\n          fim: periodoFinal,\n        });\n        if (periodoFinal > 9) {\n          break;\n        }\n      }\n\n      //EC\n      grades = filter(this.AllGrades, [\"Curso\", 2]);\n      periodoFinal = 0;\n      for (let i = 0; i < grades.length; i++) {\n        periodoInicial = periodoFinal + 1;\n        periodoFinal =\n          1 +\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\n          (1 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\n        gradesAtivas.semestre1.EC.push({\n          id: grades[i].id,\n          inicio: periodoInicial,\n          fim: periodoFinal,\n        });\n        if (periodoFinal > 9) {\n          break;\n        }\n      }\n      periodoFinal = 0;\n      for (let i = 0; i < grades.length; i++) {\n        periodoInicial = periodoFinal + 1;\n        periodoFinal =\n          1 +\n          2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\n          (3 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\n        gradesAtivas.semestre2.EC.push({\n          id: grades[i].id,\n          inicio: periodoInicial,\n          fim: periodoFinal,\n        });\n        if (periodoFinal > 9) {\n          break;\n        }\n      }\n\n      return gradesAtivas;\n    },\n\n    generateGradesExternasAtivas(ano) {\n      const gradesAtivas = {\n        semestre1: {},\n        semestre2: {},\n      };\n\n      let cursosComGrades = filter(this.AllCursos, (curso) => {\n        const gradeFound = this.AllGradesCursosExternos.find((grade) => grade.Curso === curso.id);\n        return gradeFound ? true : false;\n      });\n\n      let grades;\n      let periodoInicial, periodoFinal;\n\n      cursosComGrades.forEach((c) => {\n        gradesAtivas.semestre1[c.codigo] = [];\n        gradesAtivas.semestre2[c.codigo] = [];\n\n        //define grades ativas por periodo\n        grades = filter(this.AllGradesCursosExternos, [\"Curso\", c.id]);\n        periodoFinal = 0;\n        for (let i = 0; i < grades.length; i++) {\n          periodoInicial = periodoFinal + 1;\n          periodoFinal =\n            1 +\n            2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\n            (1 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\n          if (isNaN(periodoFinal)) {\n            periodoFinal = 10;\n          }\n          gradesAtivas.semestre1[c.codigo].push({\n            id: grades[i].id,\n            inicio: periodoInicial,\n            fim: periodoFinal,\n          });\n          if (periodoFinal > 9) {\n            break;\n          }\n        }\n        periodoFinal = 0;\n        for (let i = 0; i < grades.length; i++) {\n          periodoInicial = periodoFinal + 1;\n          periodoFinal =\n            1 +\n            2 * (parseInt(ano, 10) - parseInt(grades[i].periodoInicio.slice(0, 4), 10)) +\n            (3 - parseInt(grades[i].periodoInicio.slice(5, 6), 10)) / 2;\n          if (isNaN(periodoFinal)) {\n            periodoFinal = 10;\n          }\n          gradesAtivas.semestre2[c.codigo].push({\n            id: grades[i].id,\n            inicio: periodoInicial,\n            fim: periodoFinal,\n          });\n          if (periodoFinal > 9) {\n            break;\n          }\n        }\n      });\n\n      return gradesAtivas;\n    },\n\n    generateTurmasNovoPlano() {\n      const gradesAtivas = this.generateGradesAtivas(this.plano.ano);\n      const gradesExternasAtivas = this.generateGradesExternasAtivas(this.plano.ano);\n      const turmasNovoPlano = [];\n\n      let periodoEntrada = function(curso, semestre, periodoDisciplina) {\n        if (curso.semestreInicial === 3) return true;\n        else if (curso.semestreInicial === 2)\n          return periodoDisciplina % 2 === (semestre === 1 ? 0 : 1);\n        else return periodoDisciplina % 2 === (semestre === 1 ? 1 : 0);\n      };\n\n      //# 1 Semestre - Preenche as disciplina da grade\n      let disciplinasGrade1Semestre = [];\n      for (let i = 0; i < gradesAtivas.semestre1.CCD.length; i++) {\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\n          Grade: gradesAtivas.semestre1.CCD[i].id,\n        });\n        disciplinasGrade.forEach((disciplina) => {\n          if (disciplina.periodo % 2 === 1) {\n            if (\n              disciplina.periodo >= gradesAtivas.semestre1.CCD[i].inicio &&\n              disciplina.periodo <= gradesAtivas.semestre1.CCD[i].fim\n            ) {\n              let t = find(disciplinasGrade1Semestre, {\n                Disciplina: disciplina.Disciplina,\n              });\n              if (t === undefined) {\n                disciplinasGrade1Semestre.push({\n                  Disciplina: disciplina.Disciplina,\n                  CCD: true,\n                  EC: false,\n                  CCN: false,\n                  SI: false,\n                  periodo: 1,\n                });\n              } else {\n                t.CCD = true;\n              }\n            }\n          }\n        });\n      }\n      for (let i = 0; i < gradesAtivas.semestre1.EC.length; i++) {\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\n          Grade: gradesAtivas.semestre1.EC[i].id,\n        });\n        disciplinasGrade.forEach((disciplina) => {\n          if (disciplina.periodo % 2 === 1) {\n            if (\n              disciplina.periodo >= gradesAtivas.semestre1.EC[i].inicio &&\n              disciplina.periodo <= gradesAtivas.semestre1.EC[i].fim\n            ) {\n              let t = find(disciplinasGrade1Semestre, {\n                Disciplina: disciplina.Disciplina,\n              });\n              if (t === undefined) {\n                disciplinasGrade1Semestre.push({\n                  Disciplina: disciplina.Disciplina,\n                  CCD: false,\n                  EC: true,\n                  CCN: false,\n                  SI: false,\n                  periodo: 1,\n                });\n              } else {\n                t.EC = true;\n              }\n            }\n          }\n        });\n      }\n      for (let i = 0; i < gradesAtivas.semestre1.CCN.length; i++) {\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\n          Grade: gradesAtivas.semestre1.CCN[i].id,\n        });\n        disciplinasGrade.forEach((disciplina) => {\n          if (disciplina.periodo % 2 === 0) {\n            if (\n              disciplina.periodo >= gradesAtivas.semestre1.CCN[i].inicio &&\n              disciplina.periodo <= gradesAtivas.semestre1.CCN[i].fim\n            ) {\n              let t = find(disciplinasGrade1Semestre, {\n                Disciplina: disciplina.Disciplina,\n              });\n              if (t === undefined) {\n                disciplinasGrade1Semestre.push({\n                  Disciplina: disciplina.Disciplina,\n                  CCD: false,\n                  EC: false,\n                  CCN: true,\n                  SI: false,\n                  periodo: 1,\n                });\n              } else {\n                t.CCN = true;\n              }\n            }\n          }\n        });\n      }\n      for (let i = 0; i < gradesAtivas.semestre1.SI.length; i++) {\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\n          Grade: gradesAtivas.semestre1.SI[i].id,\n        });\n        disciplinasGrade.forEach((disciplina) => {\n          if (disciplina.periodo % 2 === 0) {\n            if (\n              disciplina.periodo >= gradesAtivas.semestre1.SI[i].inicio &&\n              disciplina.periodo <= gradesAtivas.semestre1.SI[i].fim\n            ) {\n              let t = find(disciplinasGrade1Semestre, {\n                Disciplina: disciplina.Disciplina,\n              });\n              if (t === undefined) {\n                disciplinasGrade1Semestre.push({\n                  Disciplina: disciplina.Disciplina,\n                  CCD: false,\n                  EC: false,\n                  CCN: false,\n                  SI: true,\n                  periodo: 1,\n                });\n              } else {\n                t.SI = true;\n              }\n            }\n          }\n        });\n      }\n      for (let prop in gradesExternasAtivas.semestre1) {\n        let curso = find(this.AllCursos, { codigo: prop });\n        for (let i = 0; i < gradesExternasAtivas.semestre1[prop].length; i++) {\n          let disciplinasGrade = filter(this.DisciplinasDasGradesCursosExternos, {\n            Grade: gradesExternasAtivas.semestre1[prop][i].id,\n          });\n\n          disciplinasGrade.forEach((disciplina) => {\n            if (periodoEntrada(curso, 1, disciplina.periodo)) {\n              if (\n                disciplina.periodo >= gradesExternasAtivas.semestre1[prop][i].inicio &&\n                disciplina.periodo <= gradesExternasAtivas.semestre1[prop][i].fim\n              ) {\n                let t = find(disciplinasGrade1Semestre, {\n                  Disciplina: disciplina.Disciplina,\n                });\n                if (t === undefined) {\n                  disciplinasGrade1Semestre.push({\n                    Disciplina: disciplina.Disciplina,\n                    CCD: false,\n                    EC: false,\n                    CCN: false,\n                    SI: false,\n                    [prop]: true,\n                    periodo: 1,\n                  });\n                } else {\n                  t[prop] = true;\n                }\n              }\n            }\n          });\n        }\n      }\n\n      //# 2 Semestre - Preenche as disciplina da grade\n      let disciplinasGrade2Semestre = [];\n      for (let i = 0; i < gradesAtivas.semestre2.CCD.length; i++) {\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\n          Grade: gradesAtivas.semestre2.CCD[i].id,\n        });\n        disciplinasGrade.forEach((disciplina) => {\n          if (disciplina.periodo % 2 === 0) {\n            if (\n              disciplina.periodo >= gradesAtivas.semestre2.CCD[i].inicio &&\n              disciplina.periodo <= gradesAtivas.semestre2.CCD[i].fim\n            ) {\n              let t = find(disciplinasGrade2Semestre, {\n                Disciplina: disciplina.Disciplina,\n              });\n              if (t === undefined) {\n                disciplinasGrade2Semestre.push({\n                  Disciplina: disciplina.Disciplina,\n                  CCD: true,\n                  EC: false,\n                  CCN: false,\n                  SI: false,\n                  periodo: 3,\n                });\n              } else {\n                t.CCD = true;\n              }\n            }\n          }\n        });\n      }\n      for (let i = 0; i < gradesAtivas.semestre2.EC.length; i++) {\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\n          Grade: gradesAtivas.semestre2.EC[i].id,\n        });\n        disciplinasGrade.forEach((disciplina) => {\n          if (disciplina.periodo % 2 === 0) {\n            if (\n              disciplina.periodo >= gradesAtivas.semestre2.EC[i].inicio &&\n              disciplina.periodo <= gradesAtivas.semestre2.EC[i].fim\n            ) {\n              let t = find(disciplinasGrade2Semestre, {\n                Disciplina: disciplina.Disciplina,\n              });\n              if (t === undefined) {\n                disciplinasGrade2Semestre.push({\n                  Disciplina: disciplina.Disciplina,\n                  CCD: false,\n                  EC: true,\n                  CCN: false,\n                  SI: false,\n                  periodo: 3,\n                });\n              } else {\n                t.EC = true;\n              }\n            }\n          }\n        });\n      }\n      for (let i = 0; i < gradesAtivas.semestre2.CCN.length; i++) {\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\n          Grade: gradesAtivas.semestre2.CCN[i].id,\n        });\n        disciplinasGrade.forEach((disciplina) => {\n          if (disciplina.periodo % 2 === 1) {\n            if (\n              disciplina.periodo >= gradesAtivas.semestre2.CCN[i].inicio &&\n              disciplina.periodo <= gradesAtivas.semestre2.CCN[i].fim\n            ) {\n              let t = find(disciplinasGrade2Semestre, {\n                Disciplina: disciplina.Disciplina,\n              });\n              if (t === undefined) {\n                disciplinasGrade2Semestre.push({\n                  Disciplina: disciplina.Disciplina,\n                  CCD: false,\n                  EC: false,\n                  CCN: true,\n                  SI: false,\n                  periodo: 3,\n                });\n              } else {\n                t.CCN = true;\n              }\n            }\n          }\n        });\n      }\n      for (let i = 0; i < gradesAtivas.semestre2.SI.length; i++) {\n        let disciplinasGrade = filter(this.$store.state.disciplinaGrade.DisciplinaGrades, {\n          Grade: gradesAtivas.semestre2.SI[i].id,\n        });\n        disciplinasGrade.forEach((disciplina) => {\n          if (disciplina.periodo % 2 === 1) {\n            if (\n              disciplina.periodo >= gradesAtivas.semestre2.SI[i].inicio &&\n              disciplina.periodo <= gradesAtivas.semestre2.SI[i].fim\n            ) {\n              let t = find(disciplinasGrade2Semestre, {\n                Disciplina: disciplina.Disciplina,\n              });\n              if (t === undefined) {\n                disciplinasGrade2Semestre.push({\n                  Disciplina: disciplina.Disciplina,\n                  CCD: false,\n                  EC: false,\n                  CCN: false,\n                  SI: true,\n                  periodo: 3,\n                });\n              } else {\n                t.SI = true;\n              }\n            }\n          }\n        });\n      }\n      for (let prop in gradesExternasAtivas.semestre2) {\n        let curso = find(this.AllCursos, { codigo: prop });\n        for (let i = 0; i < gradesExternasAtivas.semestre2[prop].length; i++) {\n          let disciplinasGrade = filter(this.DisciplinasDasGradesCursosExternos, {\n            Grade: gradesExternasAtivas.semestre2[prop][i].id,\n          });\n\n          disciplinasGrade.forEach((disciplina) => {\n            if (periodoEntrada(curso, 2, disciplina.periodo)) {\n              if (\n                disciplina.periodo >= gradesExternasAtivas.semestre2[prop][i].inicio &&\n                disciplina.periodo <= gradesExternasAtivas.semestre2[prop][i].fim\n              ) {\n                let t = find(disciplinasGrade2Semestre, {\n                  Disciplina: disciplina.Disciplina,\n                });\n                if (t === undefined) {\n                  disciplinasGrade2Semestre.push({\n                    Disciplina: disciplina.Disciplina,\n                    CCD: false,\n                    EC: false,\n                    CCN: false,\n                    SI: false,\n                    [prop]: true,\n                    periodo: 1,\n                  });\n                } else {\n                  t[prop] = true;\n                }\n              }\n            }\n          });\n        }\n      }\n\n      //Filtra apenas disicplinas DCC\n      disciplinasGrade1Semestre = filter(disciplinasGrade1Semestre, (disciplinaGrade) =>\n        some(this.DisciplinasDCC, [\"id\", disciplinaGrade.Disciplina])\n      );\n      disciplinasGrade2Semestre = filter(disciplinasGrade1Semestre, (disciplinaGrade) =>\n        some(this.DisciplinasDCC, [\"id\", disciplinaGrade.Disciplina])\n      );\n\n      // Prenche turmasNovoPlano\n      disciplinasGrade1Semestre.forEach((disciplinaGrade) => {\n        if (!this.filtrosDisciplinas.includes(disciplinaGrade.Disciplina)) {\n          if (\n            (disciplinaGrade.CCD || disciplinaGrade.EC) &&\n            (disciplinaGrade.CCN || disciplinaGrade.SI)\n          ) {\n            let turma = {\n              semestre: 1,\n              Disciplina: disciplinaGrade.Disciplina,\n              turno: \"Diurno\",\n              letra: \"A\",\n              CCD: disciplinaGrade.CCD,\n              EC: disciplinaGrade.EC,\n            };\n            for (let prop in disciplinaGrade) {\n              if (\n                prop !== \"Disciplina\" &&\n                prop !== \"CCD\" &&\n                prop !== \"EC\" &&\n                prop !== \"CCN\" &&\n                prop !== \"SI\" &&\n                prop !== \"periodo\"\n              ) {\n                turma[prop] = disciplinaGrade[prop];\n              }\n            }\n            turmasNovoPlano.push(turma);\n            turmasNovoPlano.push({\n              semestre: 1,\n              Disciplina: disciplinaGrade.Disciplina,\n              turno: \"Noturno\",\n              letra: \"B\",\n              CCN: disciplinaGrade.CCN,\n              SI: disciplinaGrade.SI,\n            });\n          } else if (disciplinaGrade.CCD || disciplinaGrade.EC) {\n            let turma = {\n              semestre: 1,\n              Disciplina: disciplinaGrade.Disciplina,\n              turno: \"Diurno\",\n              letra: \"A\",\n              CCD: disciplinaGrade.CCD,\n              EC: disciplinaGrade.EC,\n            };\n            for (let prop in disciplinaGrade) {\n              if (\n                prop !== \"Disciplina\" &&\n                prop !== \"CCD\" &&\n                prop !== \"EC\" &&\n                prop !== \"CCN\" &&\n                prop !== \"SI\" &&\n                prop !== \"periodo\"\n              ) {\n                turma[prop] = disciplinaGrade[prop];\n              }\n            }\n            turmasNovoPlano.push(turma);\n          } else if (disciplinaGrade.CCN || disciplinaGrade.SI) {\n            let turma = {\n              semestre: 1,\n              Disciplina: disciplinaGrade.Disciplina,\n              turno: \"Noturno\",\n              letra: \"A\",\n              CCN: disciplinaGrade.CCN,\n              SI: disciplinaGrade.SI,\n            };\n            for (let prop in disciplinaGrade) {\n              if (\n                prop !== \"Disciplina\" &&\n                prop !== \"CCD\" &&\n                prop !== \"EC\" &&\n                prop !== \"CCN\" &&\n                prop !== \"SI\" &&\n                prop !== \"periodo\"\n              ) {\n                turma[prop] = disciplinaGrade[prop];\n              }\n            }\n            turmasNovoPlano.push(turma);\n          }\n        }\n      });\n      disciplinasGrade2Semestre.forEach((disciplinaGrade) => {\n        if (!this.filtrosDisciplinas.includes(disciplinaGrade.Disciplina)) {\n          if (\n            (disciplinaGrade.CCD || disciplinaGrade.EC) &&\n            (disciplinaGrade.CCN || disciplinaGrade.SI)\n          ) {\n            let turma = {\n              semestre: 3,\n              Disciplina: disciplinaGrade.Disciplina,\n              turno: \"Diurno\",\n              letra: \"A\",\n              CCD: disciplinaGrade.CCD,\n              EC: disciplinaGrade.EC,\n            };\n            for (let prop in disciplinaGrade) {\n              if (\n                prop !== \"Disciplina\" &&\n                prop !== \"CCD\" &&\n                prop !== \"EC\" &&\n                prop !== \"CCN\" &&\n                prop !== \"SI\" &&\n                prop !== \"periodo\"\n              ) {\n                turma[prop] = disciplinaGrade[prop];\n              }\n            }\n            turmasNovoPlano.push(turma);\n            turmasNovoPlano.push({\n              semestre: 3,\n              Disciplina: disciplinaGrade.Disciplina,\n              turno: \"Noturno\",\n              letra: \"B\",\n              CCN: disciplinaGrade.CCN,\n              SI: disciplinaGrade.SI,\n            });\n          } else if (disciplinaGrade.CCD || disciplinaGrade.EC) {\n            let turma = {\n              semestre: 3,\n              Disciplina: disciplinaGrade.Disciplina,\n              turno: \"Diurno\",\n              letra: \"A\",\n              CCD: disciplinaGrade.CCD,\n              EC: disciplinaGrade.EC,\n            };\n            for (let prop in disciplinaGrade) {\n              if (\n                prop !== \"Disciplina\" &&\n                prop !== \"CCD\" &&\n                prop !== \"EC\" &&\n                prop !== \"CCN\" &&\n                prop !== \"SI\" &&\n                prop !== \"periodo\"\n              ) {\n                turma[prop] = disciplinaGrade[prop];\n              }\n            }\n            turmasNovoPlano.push(turma);\n          } else if (disciplinaGrade.CCN || disciplinaGrade.SI) {\n            let turma = {\n              semestre: 3,\n              Disciplina: disciplinaGrade.Disciplina,\n              turno: \"Noturno\",\n              letra: \"A\",\n              CCN: disciplinaGrade.CCN,\n              SI: disciplinaGrade.SI,\n            };\n            for (let prop in disciplinaGrade) {\n              if (\n                prop !== \"Disciplina\" &&\n                prop !== \"CCD\" &&\n                prop !== \"EC\" &&\n                prop !== \"CCN\" &&\n                prop !== \"SI\" &&\n                prop !== \"periodo\"\n              ) {\n                turma[prop] = disciplinaGrade[prop];\n              }\n            }\n            turmasNovoPlano.push(turma);\n          }\n        }\n      });\n\n      console.log(turmasNovoPlano);\n      return turmasNovoPlano;\n    },\n    handleCopyPlano() {\n      this.setLoading({ type: \"partial\", value: true });\n      const turmasNovoPlano = this.generateTurmasNovoPlano();\n\n      this.createPlano({ data: this.plano })\n        .then((plano) => {\n          try {\n            turmasNovoPlano.forEach((t) => {\n              turmaService\n                .create({\n                  id: undefined,\n                  periodo: t.semestre,\n                  letra: t.letra,\n                  turno1: t.turno,\n                  turno2: undefined,\n                  Disciplina: t.Disciplina,\n                  Docente1: undefined,\n                  Docente2: undefined,\n                  Horario1: undefined,\n                  Horario2: undefined,\n                  Sala1: undefined,\n                  Sala2: undefined,\n                  Plano: plano.id,\n                })\n                .then((turma) => {\n                  if (t.CCN) {\n                    pedidoService\n                      .update(1, turma.Turma.id, {\n                        Turma: turma.Turma.id,\n                        Curso: 1,\n                        vagasPeriodizadas: 1,\n                        vagasNaoPeriodizadas: 0,\n                      })\n                      .then(() => {\n                      })\n                      .catch((error) => {\n                        console.log(\"erro ao atualizar pedido: \" + error);\n                      });\n                  }\n                  if (t.EC) {\n                    pedidoService\n                      .update(2, turma.Turma.id, {\n                        Turma: turma.Turma.id,\n                        Curso: 2,\n                        vagasPeriodizadas: 1,\n                        vagasNaoPeriodizadas: 0,\n                      })\n                      .then(() => {\n                      })\n                      .catch((error) => {\n                        console.log(\"erro ao atualizar pedido: \" + error);\n                      });\n                  }\n                  if (t.SI) {\n                    pedidoService\n                      .update(3, turma.Turma.id, {\n                        Turma: turma.Turma.id,\n                        Curso: 3,\n                        vagasPeriodizadas: 1,\n                        vagasNaoPeriodizadas: 0,\n                      })\n                      .then(() => {\n                      })\n                      .catch((error) => {\n                        console.log(\"erro ao atualizar pedido: \" + error);\n                      });\n                  }\n                  if (t.CCD) {\n                    pedidoService\n                      .update(4, turma.Turma.id, {\n                        Turma: turma.Turma.id,\n                        Curso: 4,\n                        vagasPeriodizadas: 1,\n                        vagasNaoPeriodizadas: 0,\n                      })\n                      .then(() => {\n                      })\n                      .catch((error) => {\n                        console.log(\"erro ao atualizar pedido: \" + error);\n                      });\n                  }\n                  for (let prop in t) {\n                    if (\n                      prop !== \"Disciplina\" &&\n                      prop !== \"CCD\" &&\n                      prop !== \"EC\" &&\n                      prop !== \"CCN\" &&\n                      prop !== \"SI\" &&\n                      prop !== \"semestre\" &&\n                      prop !== \"turno\" &&\n                      prop !== \"letra\"\n                    ) {\n                      let c = find(this.AllCursos, {codigo: prop});\n                      pedidoService\n                        .update(c.id, turma.Turma.id, {\n                          Turma: turma.Turma.id,\n                          Curso: c.id,\n                          vagasPeriodizadas: 1,\n                          vagasNaoPeriodizadas: 0,\n                        })\n                        .then(() => {\n                        })\n                        .catch((error) => {\n                          console.log(\"erro ao atualizar pedido: \" + error);\n                        });\n                    }\n                  }\n                })\n                .catch((error) => {\n                  console.log(\"erro ao criar turma: \" + error);\n                });\n            });\n\n            let turmasCopiar = filter(this.$store.state.turma.Turmas, (t) => {\n              let disciplina = this.filtrosDisciplinas.includes(t.Disciplina);\n              if (disciplina) return true;\n              else return false;\n            });\n\n            turmasCopiar.forEach((t) => {\n              turmaService\n                .create({\n                  id: undefined,\n                  periodo: t.periodo,\n                  letra: t.letra,\n                  turno1: t.turno1,\n                  turno2: undefined,\n                  Disciplina: t.Disciplina,\n                  Horario1: t.Horario1,\n                  Horario2: t.Horario2,\n                  Sala1: undefined,\n                  Sala2: undefined,\n                  Plano: plano.id,\n                })\n                .then((turma) => {\n                  let pedidos = this.$store.state.pedido.Pedidos[t.id];\n                  pedidos.forEach((p) => {\n                    pedidoService\n                      .update(p.Curso, turma.Turma.id, {\n                        Turma: turma.Turma.id,\n                        Curso: p.Curso,\n                        vagasPeriodizadas: p.vagasPeriodizadas,\n                        vagasNaoPeriodizadas: 0,\n                      })\n                      .then(() => {\n                      })\n                      .catch((error) => {\n                        console.log(\"erro ao atualizar pedido: \" + error);\n                      });\n                  });\n                })\n                .catch((error) => {\n                  console.log(\"erro ao criar turma externa: \" + error);\n                });\n            });\n            this.$store.state.turmaExterna.Turmas.forEach((t) => {\n              turmaExternaService\n                .create({\n                  id: undefined,\n                  periodo: t.periodo,\n                  letra: t.letra,\n                  turno1: t.turno1,\n                  turno2: undefined,\n                  Disciplina: t.Disciplina,\n                  Horario1: t.Horario1,\n                  Horario2: t.Horario2,\n                  Sala1: undefined,\n                  Sala2: undefined,\n                  Plano: plano.id,\n                })\n                .then((turma) => {\n                  let pedidos = this.$store.state.pedidoExterno.Pedidos[t.id];\n                  pedidos.forEach((p) => {\n                    pedidoExternoService\n                      .update(p.Curso, turma.Turma.id, {\n                        Turma: turma.Turma.id,\n                        Curso: p.Curso,\n                        vagasPeriodizadas: p.vagasPeriodizadas,\n                        vagasNaoPeriodizadas: p.vagasNaoPeriodizadas,\n                      })\n                      .then(() => {\n                      })\n                      .catch((error) => {\n                        console.log(\"erro ao atualizar pedido externo: \" + error);\n                      });\n                  });\n                })\n                .catch((error) => {\n                  console.log(\"erro ao criar turma externa: \" + error);\n                });\n            });\n          } catch (error) {\n            this.pushNotification({\n              type: \"error\",\n              title: \"Erro ao criar plano!\",\n              text: error.message,\n            });\n          } finally {\n            this.$store.dispatch(\"fetchAll\").then(() => {\n              this.setLoading({ type: \"partial\", value: false });\n              this.closeModal();\n            });\n          }\n        });\n    },\n  },\n\n  computed: {\n    ...mapGetters([\n      \"DisciplinasDCC\",\n      \"AllGrades\",\n      \"AllCursos\",\n      \"AllGradesCursosExternos\",\n      \"DisciplinasDasGradesCursosExternos\",\n    ]),\n\n    DisciplinasOrderedModal() {\n      return orderBy(\n        this.DisciplinasFiltredModal,\n        this.ordenacaoModal.disciplinas.order,\n        this.ordenacaoModal.disciplinas.type\n      );\n    },\n    DisciplinasFiltredModal() {\n      if (this.searchDisciplinasModal === \"\") return this.DisciplinasDCC;\n\n      const searchNormalized = normalizeText(this.searchDisciplinasModal);\n\n      return filter(this.DisciplinasDCC, (disciplina) => {\n        const disciplinaNome = normalizeText(disciplina.nome);\n        const disciplinaCodigo = normalizeText(disciplina.codigo);\n\n        return disciplinaNome.match(searchNormalized) || disciplinaCodigo.match(searchNormalized);\n      });\n    },\n  },\n};\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CopyPlano.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CopyPlano.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CopyPlano.vue?vue&type=template&id=0e4a6a11&\"\nimport script from \"./CopyPlano.vue?vue&type=script&lang=js&\"\nexport * from \"./CopyPlano.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n"],"sourceRoot":""}