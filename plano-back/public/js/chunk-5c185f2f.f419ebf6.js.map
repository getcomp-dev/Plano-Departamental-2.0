{"version":3,"sources":["webpack:///./src/pages/gerenciar/Planos/index.vue?5821","webpack:///./src/common/services/copyPlano.js","webpack:///src/pages/gerenciar/Planos/index.vue","webpack:///./src/pages/gerenciar/Planos/index.vue?1793","webpack:///./src/pages/gerenciar/Planos/index.vue?f2ca","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/modules/es6.string.trim.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./src/pages/gerenciar/Planos/index.vue?2f3d","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./src/pages/gerenciar/Planos/ModalImportPlano.vue?36f0","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///src/pages/gerenciar/Planos/ModalImportPlano.vue","webpack:///./src/pages/gerenciar/Planos/ModalImportPlano.vue?4c1a","webpack:///./src/pages/gerenciar/Planos/ModalImportPlano.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","title","template","on","click","$event","toggleAsideModal","styles","scopedSlots","_u","key","fn","staticStyle","width","toggleOrder","ordenacaoMainPlanos","_v","class","setIconByOrder","proxy","_l","plano","id","bg-selected","planoSelectedId","handleClickInPlano","_s","ano","nome","obs","isEditable","toggleFooter","isEdit","isPlano","btn-salvar","handleEditPlano","btn-delete","openModalDelete","btn-add","openModalNovoPlano","btn-clean","cleanPlano","btn-copy","copyPlano","planoForm","required","for","directives","name","rawName","value","expression","type","domProps","keypress","limitNomeLength","input","target","composing","$set","modifiers","number","change","$$selectedVal","Array","prototype","filter","call","options","o","selected","map","val","_value","_n","multiple","year","cols","rows","ref","isDeleting","btn-deletar","handleDeletePlano","icon","staticRenderFns","services_copyPlano","planoOld","planoNew","config","arguments","length","undefined","Vue","axios","post","concat","then","response","promise_default","a","resolve","data","catch","error","reject","emptyPlano","Planosvue_type_script_lang_js_","mixins","components","ModalAjuda","modals","ModalDelete","Card","ui","ModalNovoPlano","ModalImportPlano","asideModalsRefs","$_","clone","order","methods","Object","objectSpread","vuex_esm","preventDefault","$refs","modalDelete","open","pushNotification","text","modalNovoPlano","_handleEditPlano","asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","setPartialLoading","editPlano","t0","message","finish","stop","apply","_handleDeletePlano","_callee2","_context2","deletePlano","oldPlano","_this","newPlano","services_plano","create","Plano","$notify","group","fullMessage","replace","computed","PlanosOrdered","_this$ordenacaoMainPl","orderBy","AllPlanos","gerenciar_Planosvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","__webpack_require__","module","exports","$trim","anObject","get","getIterator","it","iterFn","TypeError","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_6776b75e_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_6776b75e_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","core","$JSON","JSON","stringify","position","hasFooter","color","handleImportPlano","_arrayWithHoles","arr","is_array_default","_iterableToArrayLimit","i","_arr","_d","_e","_i","get_iterator_default","done","push","err","_nonIterableRest","_slicedToArray","ModalImportPlanovue_type_script_lang_js_","mounted","console","log","AllTurmas","baseModal","toggle","close","_handleImportPlano","inputFile","reader","abrupt","inputFilePlano","files","FileReader","onload","_ref","event","workbook","firstWorksheet","dataString","dataStringNormalized","turmasDoPlano","_inputFile$name$split","_inputFile$name$split2","periodoStr","periodoDoPlano","xlsx_default","read","result","Sheets","SheetNames","stringify_default","utils","sheet_to_json","normalize","parse","split","parse_int_default","createPlanoImported","slice","$store","dispatch","_x","readAsBinaryString","_createPlanoImported","_callee3","turmasImported","periodo","keys","currentTurma","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","turmaFile","newTurma","_turmaFile$keys$horar","_turmaFile$keys$horar2","strHorario1","strHorario2","turmaCreated","_args3","_context3","disciplinaCod","letra","cursoCod","vagas1","vagas2","horarios","Disciplina","findDisciplinaId","Horario1","findHorarioId","Horario2","turno1","findTurno","isTheSameTurma","createPedido","createTurma","sent","return","_x2","_createPedido","_callee4","turmaId","pedido","_context4","Turma","Curso","vagasNaoPeriodizadas","vagasPeriodizadas","findCursoId","editPedido","_x3","_x4","_x5","horario1Id","horario2Id","cursoCodigo","cursoFounded","find","AllCursos","disciplinaCodigo","disciplinaFounded","AllDisciplinas","horarioString","_horarioString$split","_horarioString$split2","dia","hora","nomeHorario","parseDiaEHora","horarioFounded","AllHorarios","diaNormalized","horaNormalized","trim","substring","toLowerCase","ListaDeTodosHorarios","horarioItem","includes","turma1","turma2","Planos_ModalImportPlanovue_type_script_lang_js_"],"mappings":"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","file":"js/chunk-5c185f2f.f419ebf6.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main-component\"},[_c('PageHeader',{attrs:{\"title\":'Planos'}},[_c('BaseButton',{attrs:{\"template\":\"ajuda\"},on:{\"click\":function($event){return _vm.toggleAsideModal('ajuda')}}}),_c('BaseButton',{attrs:{\"template\":\"file-upload\"},on:{\"click\":function($event){return _vm.toggleAsideModal('importPlano')}}})],1),_c('div',{staticClass:\"page-content\"},[_c('div',{staticClass:\"div-table\"},[_c('BaseTable',{attrs:{\"styles\":'height:max-content'},scopedSlots:_vm._u([{key:\"thead\",fn:function(){return [_c('th',{staticClass:\"t-start clickable\",staticStyle:{\"width\":\"70px\"},on:{\"click\":function($event){return _vm.toggleOrder(_vm.ordenacaoMainPlanos, 'ano')}}},[_vm._v(\"\\n            Ano\\n            \"),_c('i',{class:_vm.setIconByOrder(_vm.ordenacaoMainPlanos, 'ano')})]),_c('th',{staticClass:\"t-start clickable\",staticStyle:{\"width\":\"150px\"},on:{\"click\":function($event){return _vm.toggleOrder(_vm.ordenacaoMainPlanos, 'nome')}}},[_vm._v(\"\\n            Nome\\n            \"),_c('i',{class:_vm.setIconByOrder(_vm.ordenacaoMainPlanos, 'nome')})]),_c('th',{staticClass:\"t-start clickable\",staticStyle:{\"width\":\"300px\"},on:{\"click\":function($event){return _vm.toggleOrder(_vm.ordenacaoMainPlanos, 'obs')}}},[_vm._v(\"\\n            Observação\\n            \"),_c('i',{class:_vm.setIconByOrder(_vm.ordenacaoMainPlanos, 'obs')})]),_c('th',{staticStyle:{\"width\":\"80px\"}},[_vm._v(\"\\n            Editável\\n          \")])]},proxy:true},{key:\"tbody\",fn:function(){return _vm._l((_vm.PlanosOrdered),function(plano){return _c('tr',{key:plano.id,class:{ 'bg-selected': plano.id === _vm.planoSelectedId },on:{\"click\":function($event){return _vm.handleClickInPlano(plano)}}},[_c('td',{staticClass:\"t-start\",staticStyle:{\"width\":\"70px\"}},[_vm._v(_vm._s(plano.ano))]),_c('td',{staticClass:\"t-start\",staticStyle:{\"width\":\"150px\"}},[_vm._v(_vm._s(plano.nome))]),_c('td',{staticClass:\"t-start\",staticStyle:{\"width\":\"300px\"}},[_vm._v(_vm._s(plano.obs))]),_c('td',{staticClass:\"t-start\",staticStyle:{\"width\":\"80px\"}},[_vm._v(_vm._s(plano.isEditable))])])})},proxy:true}])})],1),_c('Card',{attrs:{\"title\":'Plano',\"toggleFooter\":_vm.isEdit,\"isPlano\":_vm.isEdit},on:{\"btn-salvar\":_vm.handleEditPlano,\"btn-delete\":_vm.openModalDelete,\"btn-add\":_vm.openModalNovoPlano,\"btn-clean\":_vm.cleanPlano,\"btn-copy\":function($event){return _vm.copyPlano(_vm.planoForm)}},scopedSlots:_vm._u([{key:\"form-group\",fn:function(){return [_c('div',{staticClass:\"row mb-2 mx-0\"},[_c('div',{staticClass:\"form-group col m-0 px-0\"},[_c('label',{attrs:{\"required\":\"\",\"for\":\"planoNome\"}},[_vm._v(\"Nome\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.planoForm.nome),expression:\"planoForm.nome\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"planoNome\"},domProps:{\"value\":(_vm.planoForm.nome)},on:{\"keypress\":_vm.limitNomeLength,\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.planoForm, \"nome\", $event.target.value)}}})])]),_c('div',{staticClass:\"row mb-2 mx-0\"},[_c('div',{staticClass:\"form-group col m-0 px-0\"},[_c('label',{attrs:{\"required\":\"\",\"for\":\"ano\"}},[_vm._v(\"Ano\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.planoForm.ano),expression:\"planoForm.ano\",modifiers:{\"number\":true}}],staticClass:\"form-control input-ano\",attrs:{\"id\":\"planoAno\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.planoForm, \"ano\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.AnosDoPlano),function(year){return _c('option',{key:'anos' + year,domProps:{\"value\":year}},[_vm._v(_vm._s(year))])}),0)])]),_c('div',{staticClass:\"row mb-2 mx-0\"},[_c('div',{staticClass:\"form-group col m-0 px-0\"},[_c('label',{attrs:{\"for\":\"planoObs\"}},[_vm._v(\"Observações\")]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.planoForm.obs),expression:\"planoForm.obs\"}],staticClass:\"form-control\",attrs:{\"id\":\"planoObs\",\"cols\":\"30\",\"rows\":\"3\"},domProps:{\"value\":(_vm.planoForm.obs)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.planoForm, \"obs\", $event.target.value)}}})])]),_c('div',{staticClass:\"row mb-2 mx-0\"},[_c('div',{staticClass:\"form-group col m-0 px-0\"},[_c('label',{attrs:{\"required\":\"\",\"for\":\"planoEditavel\"}},[_vm._v(\"Editável\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.planoForm.isEditable),expression:\"planoForm.isEditable\",modifiers:{\"number\":true}}],staticClass:\"form-control input-ano\",attrs:{\"id\":\"planoEditavel\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.planoForm, \"isEditable\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"true\"}},[_vm._v(\"Sim\")]),_c('option',{attrs:{\"value\":\"false\"}},[_vm._v(\"Não\")])])])])]},proxy:true}])})],1),_c('ModalNovoPlano',{ref:\"modalNovoPlano\",attrs:{\"plano\":_vm.planoForm}}),_c('ModalDelete',{ref:\"modalDelete\",attrs:{\"isDeleting\":_vm.isEdit},on:{\"btn-deletar\":_vm.handleDeletePlano}},[_c('li',{staticClass:\"list-group-item\"},[(_vm.isEdit)?_c('span',[_vm._v(\"\\n        Tem certeza que deseja excluír o plano\\n        \"),_c('b',[_vm._v(_vm._s(_vm.planoForm.ano + \" - \" + _vm.planoForm.nome))]),_vm._v(\"\\n        ?\\n      \")]):_c('span',{staticClass:\"list-group-item\"},[_vm._v(\"Nenhum plano selecionado.\")])])]),_c('ModalAjuda',{ref:\"modalAjuda\"},[_c('li',{staticClass:\"list-group-item\"},[_c('b',[_vm._v(\"Adicionar:\")]),_vm._v(\"\\n      Preencha o cartão em branco à direita e em seguida, clique em Adicionar\\n      \"),_c('font-awesome-icon',{staticClass:\"icon-green\",attrs:{\"icon\":['fas', 'plus']}}),_vm._v(\".\\n    \")],1),_c('li',{staticClass:\"list-group-item\"},[_c('b',[_vm._v(\"Editar:\")]),_vm._v(\" Clique na linha da tabela do plano que deseja alterar. Em\\n      seguida, no cartão à direita, altere as informações que desejar e clique em\\n      Salvar \"),_c('font-awesome-icon',{staticClass:\"icon-green\",attrs:{\"icon\":['fas', 'check']}}),_vm._v(\".\\n    \")],1),_c('li',{staticClass:\"list-group-item\"},[_c('b',[_vm._v(\"Deletar:\")]),_vm._v(\" Clique na linha da tabela do plano que deseja remover. Em\\n      seguida, no cartão à direita, clique em Remover\\n      \"),_c('font-awesome-icon',{staticClass:\"icon-red\",attrs:{\"icon\":['fas', 'trash-alt']}}),_vm._v(\" e\\n      confirme a remoção na janela que será aberta.\\n    \")],1),_c('li',{staticClass:\"list-group-item\"},[_c('b',[_vm._v(\"Copiar:\")]),_vm._v(\" Clique na linha da tabela do plano que deseja copiar. Em\\n      seguida, no cartão à direita, clique em Copiar\\n      \"),_c('font-awesome-icon',{staticClass:\"icon-lightblue\",attrs:{\"icon\":['fas', 'copy']}}),_vm._v(\" .\\n    \")],1),_c('li',{staticClass:\"list-group-item\"},[_c('b',[_vm._v(\"Limpar:\")]),_vm._v(\" No cartão à direita, clique em Cancelar\\n      \"),_c('font-awesome-icon',{staticClass:\"icon-gray\",attrs:{\"icon\":['fas', 'times']}}),_vm._v(\", para limpar\\n      as informações.\\n    \")],1),_c('li',{staticClass:\"list-group-item\"},[_c('b',[_vm._v(\"Ordenar:\")]),_vm._v(\" Clique no cabeçalho da tabela, na coluna desejada, para\\n      alterar a ordenação das informações.\\n    \")])]),_c('ModalImportPlano',{ref:\"modalImportPlano\"})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from 'vue'\r\n\r\nexport default {\r\n    copyPlano (planoOld, planoNew, config = {}) {\r\n        return Vue.axios.post(`/copyPlano/${planoOld}&&${planoNew}`, config)\r\n            .then((response) => Promise.resolve(response.data))\r\n            .catch((error) => Promise.reject(error))\r\n    }\r\n}","<template>\r\n  <div class=\"main-component\">\r\n    <PageHeader :title=\"'Planos'\">\r\n      <BaseButton template=\"ajuda\" @click=\"toggleAsideModal('ajuda')\" />\r\n      <BaseButton template=\"file-upload\" @click=\"toggleAsideModal('importPlano')\" />\r\n    </PageHeader>\r\n\r\n    <div class=\"page-content\">\r\n      <div class=\"div-table\">\r\n        <BaseTable :styles=\"'height:max-content'\">\r\n          <template #thead>\r\n            <th\r\n              style=\"width: 70px\"\r\n              class=\"t-start clickable\"\r\n              @click=\"toggleOrder(ordenacaoMainPlanos, 'ano')\"\r\n            >\r\n              Ano\r\n              <i :class=\"setIconByOrder(ordenacaoMainPlanos, 'ano')\"></i>\r\n            </th>\r\n            <th\r\n              style=\"width: 150px\"\r\n              class=\"t-start clickable\"\r\n              @click=\"toggleOrder(ordenacaoMainPlanos, 'nome')\"\r\n            >\r\n              Nome\r\n              <i :class=\"setIconByOrder(ordenacaoMainPlanos, 'nome')\"></i>\r\n            </th>\r\n            <th\r\n              style=\"width: 300px\"\r\n              class=\"t-start clickable\"\r\n              @click=\"toggleOrder(ordenacaoMainPlanos, 'obs')\"\r\n            >\r\n              Observação\r\n              <i :class=\"setIconByOrder(ordenacaoMainPlanos, 'obs')\"></i>\r\n            </th>\r\n            <th\r\n                    style=\"width: 80px\"\r\n            >\r\n              Editável\r\n            </th>\r\n          </template>\r\n          <template #tbody>\r\n            <tr\r\n              v-for=\"plano in PlanosOrdered\"\r\n              :key=\"plano.id\"\r\n              @click=\"handleClickInPlano(plano)\"\r\n              :class=\"{ 'bg-selected': plano.id === planoSelectedId }\"\r\n            >\r\n              <td style=\"width: 70px\" class=\"t-start\">{{ plano.ano }}</td>\r\n              <td style=\"width: 150px\" class=\"t-start\">{{ plano.nome }}</td>\r\n              <td style=\"width: 300px\" class=\"t-start\">{{ plano.obs }}</td>\r\n              <td style=\"width: 80px\" class=\"t-start\">{{ plano.isEditable }}</td>\r\n            </tr>\r\n          </template>\r\n        </BaseTable>\r\n      </div>\r\n\r\n      <Card\r\n        :title=\"'Plano'\"\r\n        :toggleFooter=\"isEdit\"\r\n        :isPlano=\"isEdit\"\r\n        @btn-salvar=\"handleEditPlano\"\r\n        @btn-delete=\"openModalDelete\"\r\n        @btn-add=\"openModalNovoPlano\"\r\n        @btn-clean=\"cleanPlano\"\r\n        @btn-copy=\"copyPlano(planoForm)\"\r\n      >\r\n        <template #form-group>\r\n          <div class=\"row mb-2 mx-0\">\r\n            <div class=\"form-group col m-0 px-0\">\r\n              <label required for=\"planoNome\">Nome</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"planoNome\"\r\n                v-model=\"planoForm.nome\"\r\n                @keypress=\"limitNomeLength\"\r\n                class=\"form-control\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row mb-2 mx-0\">\r\n            <div class=\"form-group col m-0 px-0\">\r\n              <label required for=\"ano\">Ano</label>\r\n              <select\r\n                id=\"planoAno\"\r\n                v-model.number=\"planoForm.ano\"\r\n                class=\"form-control input-ano\"\r\n              >\r\n                <option\r\n                  v-for=\"year in AnosDoPlano\"\r\n                  :key=\"'anos' + year\"\r\n                  :value=\"year\"\r\n                  >{{ year }}</option\r\n                >\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row mb-2 mx-0\">\r\n            <div class=\"form-group col m-0 px-0\">\r\n              <label for=\"planoObs\">Observações</label>\r\n              <textarea\r\n                id=\"planoObs\"\r\n                cols=\"30\"\r\n                rows=\"3\"\r\n                v-model=\"planoForm.obs\"\r\n                class=\"form-control\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row mb-2 mx-0\">\r\n            <div class=\"form-group col m-0 px-0\">\r\n              <label required for=\"planoEditavel\">Editável</label>\r\n              <select\r\n                      id=\"planoEditavel\"\r\n                      v-model.number=\"planoForm.isEditable\"\r\n                      class=\"form-control input-ano\"\r\n              >\r\n                <option value=\"true\">Sim</option>\r\n                <option value=\"false\">Não</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </Card>\r\n    </div>\r\n\r\n    <ModalNovoPlano ref=\"modalNovoPlano\" :plano=\"planoForm\" />\r\n\r\n    <ModalDelete\r\n      ref=\"modalDelete\"\r\n      :isDeleting=\"isEdit\"\r\n      @btn-deletar=\"handleDeletePlano\"\r\n    >\r\n      <li class=\"list-group-item\">\r\n        <span v-if=\"isEdit\">\r\n          Tem certeza que deseja excluír o plano\r\n          <b>{{ planoForm.ano + \" - \" + planoForm.nome }}</b>\r\n          ?\r\n        </span>\r\n        <span v-else class=\"list-group-item\">Nenhum plano selecionado.</span>\r\n      </li>\r\n    </ModalDelete>\r\n\r\n    <ModalAjuda ref=\"modalAjuda\">\r\n      <li class=\"list-group-item\">\r\n        <b>Adicionar:</b>\r\n        Preencha o cartão em branco à direita e em seguida, clique em Adicionar\r\n        <font-awesome-icon :icon=\"['fas', 'plus']\" class=\"icon-green\" />.\r\n      </li>\r\n      <li class=\"list-group-item\">\r\n        <b>Editar:</b> Clique na linha da tabela do plano que deseja alterar. Em\r\n        seguida, no cartão à direita, altere as informações que desejar e clique em\r\n        Salvar <font-awesome-icon :icon=\"['fas', 'check']\" class=\"icon-green\" />.\r\n      </li>\r\n      <li class=\"list-group-item\">\r\n        <b>Deletar:</b> Clique na linha da tabela do plano que deseja remover. Em\r\n        seguida, no cartão à direita, clique em Remover\r\n        <font-awesome-icon :icon=\"['fas', 'trash-alt']\" class=\"icon-red\" /> e\r\n        confirme a remoção na janela que será aberta.\r\n      </li>\r\n      <li class=\"list-group-item\">\r\n        <b>Copiar:</b> Clique na linha da tabela do plano que deseja copiar. Em\r\n        seguida, no cartão à direita, clique em Copiar\r\n        <font-awesome-icon :icon=\"['fas', 'copy']\" class=\"icon-lightblue\" /> .\r\n      </li>\r\n      <li class=\"list-group-item\">\r\n        <b>Limpar:</b> No cartão à direita, clique em Cancelar\r\n        <font-awesome-icon :icon=\"['fas', 'times']\" class=\"icon-gray\" />, para limpar\r\n        as informações.\r\n      </li>\r\n      <li class=\"list-group-item\">\r\n        <b>Ordenar:</b> Clique no cabeçalho da tabela, na coluna desejada, para\r\n        alterar a ordenação das informações.\r\n      </li>\r\n    </ModalAjuda>\r\n\r\n    <ModalImportPlano ref=\"modalImportPlano\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nimport { toggleOrdination, toggleAsideModal } from \"@/common/mixins\";\r\nimport { ModalAjuda, ModalDelete } from \"@/components/modals\";\r\nimport { Card } from \"@/components/ui\";\r\nimport copyPlanoService from \"../../../common/services/copyPlano\";\r\nimport planoService from \"../../../common/services/plano\";\r\nimport ModalNovoPlano from \"./ModalNovoPlano\";\r\nimport ModalImportPlano from \"./ModalImportPlano\";\r\n\r\nconst emptyPlano = {\r\n  ano: \"\",\r\n  nome: \"\",\r\n  obs: \"\",\r\n  isEditable: \"true\"\r\n};\r\n\r\nexport default {\r\n  name: \"Planos\",\r\n  mixins: [toggleOrdination, toggleAsideModal],\r\n  components: {\r\n    ModalAjuda,\r\n    ModalDelete,\r\n    Card,\r\n    ModalNovoPlano,\r\n    ModalImportPlano,\r\n  },\r\n  data() {\r\n    return {\r\n      asideModalsRefs: [\"modalImportPlano\", \"modalAjuda\"],\r\n      planoForm: this.$_.clone(emptyPlano),\r\n      planoSelectedId: null,\r\n      ordenacaoMainPlanos: { order: \"ano\", type: \"asc\" },\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\"deletePlano\", \"editPlano\"]),\r\n\r\n    limitNomeLength($event) {\r\n      if ($event.target.value.length >= 10) $event.preventDefault();\r\n    },\r\n    handleClickInPlano(plano) {\r\n      this.cleanPlano();\r\n      this.planoSelectedId = plano.id;\r\n      this.planoForm = this.$_.clone(plano);\r\n    },\r\n    cleanPlano() {\r\n      this.planoSelectedId = null;\r\n      this.planoForm = this.$_.clone(emptyPlano);\r\n    },\r\n    openModalDelete() {\r\n      this.$refs.modalDelete.open();\r\n    },\r\n    openModalNovoPlano() {\r\n      if (\r\n        this.planoForm.ano === \"\" ||\r\n        this.planoForm.ano === null ||\r\n        this.planoForm.nome === \"\" ||\r\n        this.planoForm.nome === null\r\n      )\r\n        this.pushNotification({\r\n          type: \"error\",\r\n          text: `Campos obrigatórios inválidos ou incompletos.`,\r\n        });\r\n      else {\r\n        this.$refs.modalNovoPlano.open();\r\n      }\r\n    },\r\n\r\n    async handleEditPlano() {\r\n      try {\r\n        this.setPartialLoading(true);\r\n        await this.editPlano(this.planoForm);\r\n      } catch (error) {\r\n        this.pushNotification({\r\n          type: \"error\",\r\n          title: \"Erro ao atualizar plano\",\r\n          text: error.message || \"\",\r\n        });\r\n      } finally {\r\n        this.setPartialLoading(false);\r\n      }\r\n    },\r\n    async handleDeletePlano() {\r\n      try {\r\n        this.setPartialLoading(true);\r\n        await this.deletePlano(this.planoForm);\r\n        this.cleanPlano();\r\n      } catch (error) {\r\n        this.pushNotification({\r\n          type: \"error\",\r\n          title: \"Erro ao deletar plano\",\r\n          text: \"Tente novamente\",\r\n        });\r\n      } finally {\r\n        this.setPartialLoading(false);\r\n      }\r\n    },\r\n    copyPlano(oldPlano) {\r\n      let newPlano = {\r\n        nome: `Cópia de '${oldPlano.nome}'`,\r\n        ano: oldPlano.ano,\r\n        obs: `Cópia do plano '${oldPlano.nome} - ${oldPlano.ano}'`,\r\n      };\r\n      planoService.create(newPlano).then((plano) => {\r\n        copyPlanoService\r\n          .copyPlano(oldPlano.id, plano.Plano.id)\r\n          .then((response) => {\r\n            this.$notify({\r\n              group: \"general\",\r\n              title: `Sucesso!`,\r\n              text: `O Plano ${oldPlano.nome} foi copiado!`,\r\n              type: \"success\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            this.error = \"<b>Erro ao copiar plano</b>\";\r\n            if (error.response.data.fullMessage) {\r\n              this.error +=\r\n                \"<br/>\" + error.response.data.fullMessage.replace(\"\\n\", \"<br/>\");\r\n            }\r\n            this.$notify({\r\n              group: \"general\",\r\n              title: `Erro!`,\r\n              text: this.error,\r\n              type: \"error\",\r\n            });\r\n          });\r\n      });\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\"AllPlanos\", \"AnosDoPlano\"]),\r\n\r\n    PlanosOrdered() {\r\n      const { order, type } = this.ordenacaoMainPlanos;\r\n      return this.$_.orderBy(this.AllPlanos, order, type);\r\n    },\r\n    isEdit() {\r\n      return this.planoSelectedId != null;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n::v-deep .card input[type=\"text\"],\r\n::v-deep .card input[type=\"password\"] {\r\n  width: 200px !important;\r\n  height: 25px !important;\r\n  padding: 0px 5px !important;\r\n  font-size: 12px !important;\r\n  text-align: start;\r\n}\r\n.card select {\r\n  width: 100px;\r\n  font-size: 12px !important;\r\n  height: 25px !important;\r\n  padding: 0px 5px !important;\r\n}\r\ntextarea {\r\n  padding: 5px !important;\r\n  font-size: 12px !important;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=6776b75e&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=6776b75e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6776b75e\",\n  null\n  \n)\n\nexport default component.exports","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n","module.exports = require(\"core-js/library/fn/get-iterator\");","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=6776b75e&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=6776b75e&scoped=true&lang=css&\"","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","module.exports = require(\"core-js/library/fn/json/stringify\");","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('BaseModal',{ref:\"baseModal\",attrs:{\"title\":\"Importar plano\",\"position\":\"right\",\"hasFooter\":true},scopedSlots:_vm._u([{key:\"modal-body\",fn:function(){return [_c('input',{ref:\"inputFilePlano\",attrs:{\"type\":\"file\"}})]},proxy:true},{key:\"modal-footer\",fn:function(){return [_c('BaseButton',{staticClass:\"ml-auto\",attrs:{\"color\":\"lightblue\",\"text\":\"Importar\"},on:{\"click\":_vm.handleImportPlano}})]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nexport default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","<template>\r\n  <BaseModal\r\n    ref=\"baseModal\"\r\n    title=\"Importar plano\"\r\n    position=\"right\"\r\n    :hasFooter=\"true\"\r\n  >\r\n    <template #modal-body>\r\n      <input type=\"file\" ref=\"inputFilePlano\" />\r\n    </template>\r\n\r\n    <template #modal-footer>\r\n      <BaseButton\r\n        color=\"lightblue\"\r\n        text=\"Importar\"\r\n        class=\"ml-auto\"\r\n        @click=\"handleImportPlano\"\r\n      />\r\n    </template>\r\n  </BaseModal>\r\n</template>\r\n\r\n<script>\r\nimport XLSX from \"xlsx\";\r\nimport { mapActions, mapGetters } from \"vuex\";\r\nimport { generateEmptyTurma } from \"@/common/utils\";\r\n// import planoService from \"../../../common/services/plano\";\r\n\r\nexport default {\r\n  name: \"ModalImportPlano\",\r\n  mounted() {\r\n    console.log(this.AllTurmas);\r\n  },\r\n  methods: {\r\n    ...mapActions([\"createTurma\", \"editPedido\"]),\r\n\r\n    open() {\r\n      this.$refs.baseModal.open();\r\n    },\r\n    toggle() {\r\n      this.$refs.baseModal.toggle();\r\n    },\r\n    close() {\r\n      this.$refs.baseModal.close();\r\n    },\r\n\r\n    async handleImportPlano() {\r\n      if (this.AllTurmas.length) {\r\n        this.pushNotification({\r\n          type: \"error\",\r\n          text: `Plano atual deve estar vázio para fazer a importação!`,\r\n        });\r\n        this.$refs.baseModal.close();\r\n        return;\r\n      }\r\n\r\n      this.setPartialLoading(true);\r\n      const inputFile = this.$refs.inputFilePlano.files[0];\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = async (event) => {\r\n        const workbook = XLSX.read(event.target.result, { type: \"binary\" });\r\n        const firstWorksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n\r\n        const dataString = JSON.stringify(XLSX.utils.sheet_to_json(firstWorksheet));\r\n        const dataStringNormalized = dataString\r\n          .normalize(\"NFD\")\r\n          .replace(/[\\u0300-\\u036f]/g, \"\")\r\n          .replace(/\\s/g, \"\");\r\n\r\n        const turmasDoPlano = JSON.parse(dataStringNormalized);\r\n\r\n        const [, periodoStr] = inputFile.name.split(\".\");\r\n        const periodoDoPlano = parseInt(periodoStr) || null;\r\n\r\n        await this.createPlanoImported(turmasDoPlano.slice(0, 5), periodoDoPlano);\r\n        await this.$store.dispatch(\"fetchAll\");\r\n\r\n        this.$refs.baseModal.close();\r\n        this.setPartialLoading(false);\r\n      };\r\n\r\n      reader.readAsBinaryString(inputFile);\r\n    },\r\n\r\n    async createPlanoImported(turmasImported, periodo = 1) {\r\n      // Create plano\r\n      // const newPlano = this.createPlano()\r\n      const keys = {\r\n        disciplinaCod: null,\r\n        letra: null,\r\n        cursoCod: null,\r\n        vagas1: null,\r\n        vagas2: null,\r\n        horarios: null,\r\n      };\r\n      let i = 0;\r\n      for (const key in turmasImported[0]) {\r\n        if (i === 1) keys.disciplinaCod = key;\r\n        else if (i === 2) keys.letra = key;\r\n        else if (i === 3) keys.cursoCod = key;\r\n        else if (i === 5) keys.vagas1 = key;\r\n        else if (i === 6) keys.vagas2 = key;\r\n        else if (i === 7) keys.horarios = key;\r\n        i++;\r\n      }\r\n      let currentTurma = {};\r\n\r\n      for (const turmaFile of turmasImported) {\r\n        const newTurma = generateEmptyTurma();\r\n        //newTurma.Plano = newPlano.id;\r\n        newTurma.periodo = periodo;\r\n        newTurma.letra = turmaFile[keys.letra] || null;\r\n        newTurma.Disciplina = this.findDisciplinaId(turmaFile[keys.disciplinaCod]);\r\n\r\n        if (turmaFile[keys.horarios]) {\r\n          const [strHorario1, strHorario2] = turmaFile[keys.horarios].split(\";\");\r\n          newTurma.Horario1 = this.findHorarioId(strHorario1);\r\n          newTurma.Horario2 = this.findHorarioId(strHorario2);\r\n\r\n          newTurma.turno1 = this.findTurno(newTurma.Horario1, newTurma.Horario2);\r\n        }\r\n\r\n        //Se não achou a Disciplina, letra ou turno1 não cria a turma\r\n        if (!newTurma.Disciplina || !newTurma.letra || !newTurma.turno1) {\r\n          continue;\r\n        }\r\n\r\n        //Se é igual a turma anterior, então cria apenas a vaga\r\n        if (this.isTheSameTurma(currentTurma, newTurma)) {\r\n          await this.createPedido(turmaFile, keys, currentTurma.id);\r\n          continue;\r\n        }\r\n\r\n        //Cria a turma\r\n        const turmaCreated = await this.createTurma(newTurma);\r\n        //Atualiza currentTurma\r\n        currentTurma = { ...turmaCreated };\r\n        //Cria pedido\r\n        await this.createPedido(turmaFile, keys, turmaCreated.id);\r\n      }\r\n    },\r\n    async createPedido(turmaFile, keys, turmaId) {\r\n      const pedido = {\r\n        Turma: null,\r\n        Curso: null,\r\n        vagasNaoPeriodizadas: 0,\r\n        vagasPeriodizadas: 0,\r\n      };\r\n      pedido.Turma = turmaId;\r\n      pedido.Curso = this.findCursoId(turmaFile[keys.cursoCod]);\r\n      pedido.vagasPeriodizadas = turmaFile[keys.vagas1];\r\n      pedido.vagasNaoPeriodizadas = turmaFile[keys.vagas2];\r\n\r\n      if (pedido.Curso) {\r\n        await this.editPedido(pedido);\r\n      } else {\r\n        console.log(\"Curso não econtrado\");\r\n      }\r\n    },\r\n\r\n    findTurno(horario1Id, horario2Id) {\r\n      if (!horario1Id && !horario2Id) return null;\r\n      else if (horario1Id <= 28 || horario2Id <= 28) return \"Diurno\";\r\n      else return \"Noturno\";\r\n    },\r\n    findCursoId(cursoCodigo) {\r\n      const cursoFounded = this.$_.find(this.AllCursos, [\"codigo\", cursoCodigo]);\r\n      return cursoFounded ? cursoFounded.id : null;\r\n    },\r\n    findDisciplinaId(disciplinaCodigo) {\r\n      const disciplinaFounded = this.$_.find(this.AllDisciplinas, [\r\n        \"codigo\",\r\n        disciplinaCodigo,\r\n      ]);\r\n\r\n      return disciplinaFounded ? disciplinaFounded.id : null;\r\n    },\r\n    findHorarioId(horarioString) {\r\n      const [dia, hora] = horarioString.split(\",\");\r\n      const nomeHorario = this.parseDiaEHora(dia, hora);\r\n\r\n      if (nomeHorario) {\r\n        const horarioFounded = this.$_.find(this.AllHorarios, [\r\n          \"horario\",\r\n          nomeHorario,\r\n        ]);\r\n\r\n        return horarioFounded ? horarioFounded.id : null;\r\n      }\r\n    },\r\n    parseDiaEHora(dia, hora) {\r\n      if (!dia || !hora) return null;\r\n\r\n      let diaNormalized = null;\r\n      let horaNormalized = null;\r\n\r\n      switch (\r\n        dia\r\n          .trim()\r\n          .substring(0, 3)\r\n          .toLowerCase()\r\n      ) {\r\n        case \"seg\":\r\n          diaNormalized = \"2a\";\r\n          break;\r\n        case \"ter\":\r\n          diaNormalized = \"3a\";\r\n          break;\r\n        case \"qua\":\r\n          diaNormalized = \"4a\";\r\n          break;\r\n        case \"qui\":\r\n          diaNormalized = \"5a\";\r\n          break;\r\n        case \"sex\":\r\n          diaNormalized = \"6a\";\r\n          break;\r\n      }\r\n\r\n      const horarioFounded =\r\n        this.$_.find(this.ListaDeTodosHorarios, (horarioItem) =>\r\n          horarioItem.nome.includes(hora.substring(0, 1) + \"-\")\r\n        ) || {};\r\n\r\n      horaNormalized = horarioFounded.nome;\r\n\r\n      if (diaNormalized && horaNormalized) {\r\n        return diaNormalized + \" \" + horaNormalized;\r\n      }\r\n\r\n      return null;\r\n    },\r\n    isTheSameTurma(turma1, turma2) {\r\n      return (\r\n        turma1.letra === turma2.letra &&\r\n        turma1.Disciplina === turma2.Disciplina &&\r\n        turma1.turno1 === turma2.turno1 &&\r\n        turma1.Horario1 === turma2.Horario1 &&\r\n        turma1.Horario2 === turma2.Horario2\r\n      );\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\r\n      \"AllHorarios\",\r\n      \"AllDisciplinas\",\r\n      \"AllCursos\",\r\n      \"ListaDeTodosHorarios\",\r\n      \"AllTurmas\",\r\n    ]),\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModalImportPlano.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModalImportPlano.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModalImportPlano.vue?vue&type=template&id=db54a402&\"\nimport script from \"./ModalImportPlano.vue?vue&type=script&lang=js&\"\nexport * from \"./ModalImportPlano.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}