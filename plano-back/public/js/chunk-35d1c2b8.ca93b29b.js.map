{"version":3,"sources":["webpack:///./src/pages/plano/GraduacaoDCC/TurmaRow.vue","webpack:///src/pages/plano/GraduacaoDCC/TurmaRow.vue","webpack:///./src/pages/plano/GraduacaoDCC/TurmaRow.vue?a3bb","webpack:///./src/pages/plano/GraduacaoDCC/TurmaRow.vue?2b9b","webpack:///./node_modules/core-js/modules/_validate-collection.js","webpack:///./node_modules/core-js/modules/_collection-strong.js","webpack:///./src/pages/plano/GraduacaoDCC/TurmaRow.vue?b380","webpack:///./node_modules/core-js/modules/_collection.js","webpack:///./node_modules/core-js/modules/es6.map.js"],"names":["render","_vm","this","_c","_self","staticClass","class","highlighted","turmaForm","style","backgroundColor","disciplina","perfil","cor","attrs","directives","name","rawName","value","toggleToDelete","expression","domProps","turma","Array","isArray","_i","on","$event","$$a","$$el","target","$$c","checked","$$v","$$i","concat","slice","stopPropagation","$emit","periodo","modifiers","$$selectedVal","prototype","filter","call","options","o","selected","map","val","_value","_n","$set","multiple","checkHorariosPeriodo","_v","_s","abreviacao","toLowerCase","codigo","nome","creditoTotal","staticStyle","letra","toUpperCase","handleEditTurma","maskTurmaLetra","Docente1","checkDocente","_l","DocentesByPreferencia","docente","key","id","apelido","orderByPreferencia","getPreferenciaDocente","Docente2","turno1","isIntegralEAD","Horario1","checkHorario","_e","HorariosFiltredByTurno","horario","hasMoreThan4Creditos","Horario2","isParcialEAD","HorariosEAD","Sala1","checkSala","AllSalas","length","sala","ead","Sala2","totalPedidosNaoPeriodizados","totalPedidosPeriodizados","cursosAtivados","curso","PedidosDaTurma","pedido","index","Curso","Turma","staticRenderFns","mixins","components","InputsPedidosDCC","props","data","periodoAtual","dataAtual","currentData","methods","mapActions","resetTurmaForm","clearHorarios","setDefaultHorarios","verificaElementoComId","array","idDesejado","d2","s2","checkHorario_Conflitos","TF","t","retorna_HorarioString","horarios","retorno","checkHorarioDocente","notifyHorarioDocente","find","text","type","encontrarTurmaDuplicada_HorarioDocente","lista","tur","checkHorarioDocente1618","h1","h2","d1","checkHorarioDocente1719","checkHorarioDocente1820","checkHorarioDocente1921","checkHorarioDocenteGeral","checkHorarioSala","notifyHorarioSala","encontrarTurmaDuplicada_HorarioSala","checkHorarioSala1618","checkHorarioSala1719","checkHorarioSala1820","checkHorarioSala1921","checkHorarioSalaGeral","notify","title","computed","mapGetters","set","get","PreferenciasDisciplina","Disciplina","watch","handler","immediate","Notification","notificationDiv","document","component","isObject","module","exports","it","TYPE","_t","TypeError","dP","f","create","redefineAll","ctx","anInstance","forOf","$iterDefine","step","setSpecies","DESCRIPTORS","fastKey","validate","SIZE","getEntry","that","entry","_f","n","k","getConstructor","wrapper","NAME","IS_MAP","ADDER","C","iterable","undefined","clear","r","p","i","next","prev","forEach","callbackfn","arguments","v","has","def","setStrong","iterated","kind","_k","global","$export","redefine","meta","fails","$iterDetect","setToStringTag","inheritIfRequired","common","IS_WEAK","Base","proto","O","fixMethod","KEY","fn","a","b","entries","instance","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","iter","BUGGY_ZERO","$instance","constructor","NEED","G","W","F","strong","MAP"],"mappings":"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GACAA,YACAA,aACAA,aACAA,aACAA,SAGA,cAEA,2BAGAA,aACAA,aACAA,aACAA,aACAA,aAGA,cAGA,WAEA,0BAEA,GACAA,aACAA,aACAA,aACAA,aACAA,YAGA,cAEA,0BAGAA,YACAA,aACAA,aACAA,aACAA,aAGA,SAKA,UAEAC,sBAtKA,SAsKA3C,GACA,cACA4C,oBACAA,oBACAA,oBACAA,oBACAA,qBACAA,qBACAA,oBACAA,oBAEAA,oBACAA,oBACAA,oBACAA,qBACAA,qBACAA,qBACAA,qBACAA,qBAEAA,qBACAA,qBACAA,qBACAA,qBACAA,qBACAA,qBACAA,qBACAA,qBAEAA,qBACAA,qBACAA,qBACAA,qBACAA,qBACAA,qBACAA,qBACAA,qBAEAA,qBACAA,qBACAA,qBACAA,qBACAA,qBACAA,qBACAA,qBACAA,qBACA,IA9CI,EA8CJ,KA9CA,IAgDAA,GAhDA,IAgDA,4DAAI,EAAJ,KAAI,EAAJ,KACA,QACAC,MAlDA,8BAsDA,OADAD,UACA,GAEAE,oBA9NA,SA8NA9C,GACA,sBACA,mBACA,mBACA,kBAMA,GALA,6DACA,6DACA,6DACA,+DAGA,sFACA,mFACA,CACA,mEACA,SACA,+CACA,8CACA,mDACA,+CACA,8CACA,mDACA,+CACA,8CACA,mDACA,+CACA,8CACA,mDACA,+CACA,8CACA,mDACA,+CACA,8CACA,mDACA,+CACA,8CACA,mDACA,+CACA,8CACA,mDAEA,UACA,+CACA,mDACA,CACA,+CACA,gDAIA,UAEA+C,qBAlRA,SAkRA5D,GACA,oDACA,EACAA,MACA6D,mEACAA,mEACA,uEAEA,uBACAC,OACAC,gBAGAC,uCA/RA,WA+RA,WACA,mEACA,4BACA,iCAEAC,cALA,IAAI,EAAJ,IAOAA,GAPA,IAOA,0CAEA,GACA,gCACA,gCACAC,mBACAA,kBACA,CACA,GACA,sCACA,sCACA,mCAEA,sGACAA,SAGA,GACA,sCACA,sCACA,mCAEA,sGACAA,SAGA,GACA,sCACA,iEACA,mCAEA,sGACAA,SAGA,GACA,sCACA,iEACA,mCAEA,sGACAA,SAMA,GACA,gCACA,gCACAA,mBACAA,kBACA,CACA,IACA,sCACA,uCACA,sCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,sCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,iEACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,iEACA,mCAEA,sGACAA,SAKA,GACA,gCACA,gCACAA,mBACAA,kBACA,CACA,IACA,sCACA,wCACA,sCACA,uCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,wCACA,sCACA,uCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,wCACA,iEACA,kEACA,mCAEA,sGACAA,SAGA,IACA,sCACA,wCACA,iEACA,kEACA,mCAEA,sGACAA,SAKA,GACA,gCACA,gCACAA,mBACAA,mBAGA,uCACA,iEACA,iEACA,sCACA,uCACA,mCAEA,sGACAA,SAKA,GACA,gCACA,gCACAA,mBACAA,oBAGA,sCACA,wCACA,sCACA,sCACA,iEACA,kEACA,mCAEA,sGACAA,SAKA,GACA,gCACA,gCACAA,mBACAA,kBACA,CACA,IACA,sCACA,uCACA,sCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,sCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,sCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,sCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,iEACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,iEACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,iEACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,iEACA,mCAEA,sGACAA,SAKA,GACA,gCACA,gCACAA,mBACAA,kBACA,CACA,GACA,sCACA,sCACA,mCAGA,OADA,4BACA,gGACAA,SAGA,GACA,iEACA,sCACA,mCAGA,OADA,4BACA,gGACAA,SAKA,GACA,gCACA,gCACAA,mBACAA,kBACA,CACA,GACA,uCACA,sCACA,uCACA,mCAEA,sGACAA,SAGA,GACA,uCACA,sCACA,uCACA,mCAEA,sGACAA,SAGA,GACA,uCACA,iEACA,kEACA,mCAEA,sGACAA,SAGA,GACA,uCACA,iEACA,kEACA,mCAEA,sGACAA,SAKA,GACA,gCACA,gCACAA,mBACAA,kBACA,CACA,IACA,sCACA,sCACA,sCACA,wCACA,sCACA,uCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,sCACA,sCACA,wCACA,sCACA,uCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,sCACA,sCACA,wCACA,iEACA,kEACA,mCAEA,sGACAA,SAGA,IACA,sCACA,sCACA,sCACA,wCACA,iEACA,kEACA,mCAEA,sGACAA,SAKA,GACA,gCACA,gCACAA,mBACAA,kBACA,CACA,IACA,sCACA,uCACA,sCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,iEACA,mCAEA,sGACAA,SAKA,GACA,gCACA,gCACAA,mBACAA,kBACA,CACA,IACA,sCACA,uCACA,sCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,iEACA,mCAEA,sGACAA,SAMA,GACA,gCACA,gCACAA,mBACAA,kBACA,CACA,IACA,sCACA,uCACA,sCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,sCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,iEACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,iEACA,mCAEA,sGACAA,SAKA,GACA,gCACA,gCACAA,mBACAA,kBACA,CACA,IACA,sCACA,wCACA,sCACA,uCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,uCACA,iEACA,mEACA,mCAEA,sGACAA,SAKA,GACA,gCACA,gCACAA,mBACAA,kBACA,CACA,IACA,sCACA,sCACA,sCACA,uCACA,sCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,sCACA,sCACA,uCACA,sCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,sCACA,sCACA,uCACA,iEACA,mCAEA,sGACAA,SAGA,IACA,sCACA,sCACA,sCACA,uCACA,iEACA,mCAEA,sGACAA,SAKA,GACA,gCACA,gCACAA,mBACAA,kBACA,CACA,IACA,sCACA,sCACA,sCACA,uCACA,mCAEA,sGACAA,SAGA,IACA,sCACA,sCACA,sCACA,wCACA,iEACA,kEACA,mCAEA,sGACAA,WA7nBA,8BAkoBA,UAEAC,wBAn6BA,SAm6BAtD,EAAAb,GAAA,WACA,6DACA,wCAIA,OACAoE,EACA,mCACA,2CACAC,EACA,mCACA,6CAEAD,EACA,mCACA,2CACAC,EACA,mCACA,4CAGA,OACAC,2EACAnB,6EAEAmB,2EACAnB,6EAGA,qBAzBA,QAgBA,OAWA,qBACA,cACA,+BAKA,gCAEA,KAIAoB,wBAh9BA,SAg9BA1D,EAAAb,GAAA,WACA,6DACA,wCAIA,OACAoE,EACA,mCACA,4CACA,oCACAC,EACA,mCACA,4CACA,sCAEAD,EACA,mCACA,4CACA,oCACAC,EACA,mCACA,4CACA,qCAGA,OACAC,2EACAnB,6EAEAmB,2EACAnB,6EAGA,qBA7BA,QAoBA,OAWA,qBACA,cACA,+BAKA,gCAEA,KAIAqB,wBAjgCA,SAigCA3D,EAAAb,GAAA,WACA,6DACA,wCAIA,OACAoE,EACA,mCACA,4CACA,oCACAC,EACA,mCACA,4CACA,sCAEAD,EACA,mCACA,4CACA,oCACAC,EACA,mCACA,4CACA,qCAGA,OACAC,2EACAnB,6EAEAmB,2EACAnB,6EAGA,qBA7BA,QAoBA,OAWA,qBACA,cACA,+BAKA,gCAEA,KAIAsB,wBAljCA,SAkjCA5D,EAAAb,GAAA,WACA,6DACA,wCAIA,OACAoE,EACA,mCACA,2CACAC,EACA,mCACA,6CAEAD,EACA,mCACA,2CACAC,EACA,mCACA,4CAGA,OACAC,2EACAnB,6EAEAmB,2EACAnB,6EAGA,qBAzBA,QAgBA,OAWA,qBACA,cACA,+BAKA,gCAEA,KAKAuB,yBAhmCA,SAgmCA7D,EAAAb,GAAA,WACA,6DACA,wCAIA,OACAoE,2EACAC,6EAEAD,2EACAC,4EAGA,OACAC,2EACAnB,6EAEAmB,2EACAnB,6EAGA,qBAjBA,QAQA,OAWA,qBACA,cACA,+BAKA,gCAEA,KAIAwB,iBAroCA,SAqoCA9D,GACA,sBACA,mBACA,mBACA,kBAMA,GAJA,6DACA,6DACA,uDACA,yDAEA,sFACA,6EACA,CACA,mEACA,SACA,+CACA,gDACA,+CACA,gDACA,+CACA,gDACA,+CACA,gDACA,+CACA,gDACA,+CACA,gDACA,+CACA,gDACA,+CACA,gDAEA,SACA,iDAEA,4CAIA,UAEA+D,kBA/qCA,SA+qCAtD,GACA,iDAEA,EACAA,MACAuC,0DACAA,0DAEA,iEACA,uBACAC,OACAC,gBAGAc,oCA7rCA,WA6rCA,WACA,mEACA,4BACA,iCAEAZ,cALA,IAAI,EAAJ,IAOAA,GAPA,IAOA,0CAEA,GACA,gCACA,6BACAC,mBACAA,eACA,CACA,IACA,iEACA,sCACA,mCAEA,sGACAA,SAGA,IACA,iEACA,sCACA,mCAEA,sGACAA,SAGA,IACA,iEACA,iEACA,mCAEA,sGACAA,SAGA,IACA,iEACA,iEACA,mCAEA,sGACAA,SAMA,GACA,gCACA,6BACAA,mBACAA,eACA,CACA,GACA,gCACA,sCACA,mCAEA,sGACAA,SAGA,GACA,gCACA,iEACA,mCAEA,sGACAA,SAKA,GACA,gCACA,6BACAA,mBACAA,eACA,CACA,IACA,gCACA,gCACA,gCACA,kCACA,sCACA,uCACA,mCAEA,sGACAA,SAGA,IACA,gCACA,gCACA,gCACA,kCACA,sCACA,uCACA,mCAEA,sGACAA,SAGA,IACA,gCACA,gCACA,gCACA,kCACA,iEACA,kEACA,mCAEA,sGACAA,SAGA,IACA,gCACA,gCACA,gCACA,kCACA,iEACA,kEACA,mCAEA,sGACAA,SAMA,GACA,gCACA,6BACAA,mBACAA,eACA,CACA,IACA,kEACA,sCACA,uCACA,mCAEA,sGACAA,SAGA,IACA,kEACA,iEACA,kEACA,mCAEA,sGACAA,WApKA,8BAyKA,UAGAY,qBAz2CA,SAy2CAjE,EAAAS,GAAA,WACA,iBACA,8EACA,YACA,wCAIA,OACA8C,EACA,mCACA,2CACAC,EACA,mCACA,6CAEAD,EACA,mCACA,2CACAC,EACA,mCACA,4CAGA,OACAC,kEACAnB,oEAEAmB,kEACAnB,mEAGA,YAzBA,QAgBA,OAYA,qBACA,cACA,+BAKA,6BAEA,KAIA4B,qBAz5CA,SAy5CAlE,EAAAS,GAAA,WACA,iBACA,8EACA,YACA,wCAIA,OACA8C,EACA,mCACA,4CACA,oCACAC,EACA,mCACA,4CACA,sCAEAD,EACA,mCACA,4CACA,oCACAC,EACA,mCACA,4CACA,qCAGA,OACAC,kEACAnB,oEAEAmB,kEACAnB,mEAGA,YA7BA,QAoBA,OAYA,qBACA,cACA,+BAKA,6BAEA,KAIA6B,qBA78CA,SA68CAnE,EAAAS,GAAA,WACA,iBACA,8EACA,YACA,wCAIA,OACA8C,EACA,mCACA,4CACA,oCACAC,EACA,mCACA,4CACA,sCAEAD,EACA,mCACA,4CACA,oCACAC,EACA,mCACA,4CACA,qCAGA,OACAC,kEACAnB,oEAEAmB,kEACAnB,mEAGA,YA7BA,QAoBA,OAYA,qBACA,cACA,+BAKA,6BAEA,KAIA8B,qBAjgDA,SAigDApE,EAAAS,GAAA,WACA,iBACA,8EACA,YACA,wCAIA,OACA8C,EACA,mCACA,2CACAC,EACA,mCACA,6CAEAD,EACA,mCACA,2CACAC,EACA,mCACA,4CAGA,OACAC,kEACAnB,oEAEAmB,kEACAnB,mEAGA,YAzBA,QAgBA,OAYA,qBACA,cACA,+BAKA,6BAEA,KAIA+B,sBAjjDA,SAijDArE,EAAAS,GAAA,WACA,iBACA,8EACA,YACA,wCAIA,OACA8C,2EACAC,6EAEAD,2EACAC,4EAGA,OACAC,kEACAnB,oEAEAmB,kEACAnB,mEAGA,YAjBA,QAQA,OAYA,qBACA,cACA,+BAKA,6BAEA,KAIAzD,gBAzlDA,uKA2lDA,iBAAAqE,eAAApH,WA3lDA,SA6lDA,gBAAA4F,oBAAA4C,YA7lDA,OA8lDA,gDA9lDA,mDAgmDA,0CACA,uBACApB,aACAqB,iCACAtB,mBACA,8DACA,eAtmDA,yBAymDA,iBAAAC,eAAApH,WAzmDA,oIA6mDA0D,sBA7mDA,SA6mDAL,GACA,mEACA,4BAIAqF,gBACAC,gBACA,iBACA,WACA,cACA,YACA,iBACA,YACA,cACA,kBACA,iBACA,iBACA,UACA,0BAbA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","file":"js/chunk-35d1c2b8.ca93b29b.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('tr',{staticClass:\"turmarow max-content\",class:{ highlighted: _vm.turmaForm.highlighted }},[_c('v-td',{staticClass:\"table-data\",style:({ backgroundColor: _vm.turmaForm.disciplina.perfil.cor }),attrs:{\"width\":\"25\",\"type\":\"content\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.toggleToDelete),expression:\"toggleToDelete\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"value\":_vm.turma,\"checked\":Array.isArray(_vm.toggleToDelete)?_vm._i(_vm.toggleToDelete,_vm.turma)>-1:(_vm.toggleToDelete)},on:{\"change\":function($event){var $$a=_vm.toggleToDelete,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=_vm.turma,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.toggleToDelete=$$a.concat([$$v]))}else{$$i>-1&&(_vm.toggleToDelete=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.toggleToDelete=$$c}}}})]),_c('v-td',{staticClass:\"table-data\",attrs:{\"width\":\"40\",\"type\":\"content\"}},[_c('button',{staticClass:\"btn-table\",on:{\"click\":function($event){$event.stopPropagation();return _vm.$emit('click-edit', _vm.turma)}}},[_c('font-awesome-icon',{staticClass:\"btn-table-icon icon-darkgray\",attrs:{\"icon\":['fas', 'edit']}})],1)]),_c('v-td',{staticClass:\"table-data\",attrs:{\"width\":\"65\",\"type\":\"content\"}},[_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.turmaForm.periodo),expression:\"turmaForm.periodo\",modifiers:{\"number\":true}}],on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.turmaForm, \"periodo\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},function($event){return _vm.checkHorariosPeriodo()}]}},[_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"1\")]),_c('option',{attrs:{\"value\":\"2\"}},[_vm._v(\"2\")]),_c('option',{attrs:{\"value\":\"3\"}},[_vm._v(\"3\")]),_c('option',{attrs:{\"value\":\"4\"}},[_vm._v(\"4\")])])]),_c('v-td',{staticClass:\"table-data\",attrs:{\"width\":\"80\",\"paddingX\":\"2\"}},[_vm._v(\"\\n    \"+_vm._s(_vm.turmaForm.disciplina.perfil.abreviacao.toLowerCase())+\"\\n  \")]),_c('v-td',{staticClass:\"table-data\",attrs:{\"width\":\"80\",\"paddingX\":\"2\"}},[_vm._v(_vm._s(_vm.turmaForm.disciplina.codigo))]),_c('v-td',{staticClass:\"table-data\",attrs:{\"width\":\"330\",\"align\":\"start\"}},[_vm._v(\"\\n    \"+_vm._s(_vm.turmaForm.disciplina.nome.toLowerCase())+\"\\n  \")]),_c('v-td',{staticClass:\"table-data\",attrs:{\"width\":\"60\"}},[_vm._v(_vm._s(_vm.turmaForm.disciplina.creditoTotal))]),_c('v-td',{staticClass:\"table-data\",attrs:{\"width\":\"45\",\"type\":\"content\"}},[_c('input',{staticStyle:{\"width\":\"30px\"},attrs:{\"type\":\"text\"},domProps:{\"value\":_vm.turmaForm.letra},on:{\"input\":function($event){_vm.turmaForm.letra = $event.target.value.toUpperCase()},\"change\":_vm.handleEditTurma,\"keypress\":_vm.maskTurmaLetra}})]),_c('v-td',{staticClass:\"table-data\",attrs:{\"width\":\"160\",\"type\":\"none\",\"paddingX\":\"3\"}},[_c('div',{staticClass:\"d-flex align-items-center w-100\"},[_c('div',{staticClass:\"d-flex flex-column\",staticStyle:{\"width\":\"130px\",\"text-transform\":\"capitalize\"}},[_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.turmaForm.Docente1),expression:\"turmaForm.Docente1\",modifiers:{\"number\":true}}],staticStyle:{\"text-transform\":\"capitalize\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.turmaForm, \"Docente1\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},_vm.checkDocente]}},[_c('option'),_vm._l((_vm.DocentesByPreferencia),function(docente){return _c('option',{key:docente.id + docente.apelido,domProps:{\"value\":docente.id}},[_vm._v(\"\\n            \"+_vm._s(docente.apelido.toLowerCase())+\"\\n            \"+_vm._s(_vm.orderByPreferencia && _vm.getPreferenciaDocente(docente)\n                ? \"- \" + _vm.getPreferenciaDocente(docente)\n                : \"\")+\"\\n          \")])})],2),_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.turmaForm.Docente2),expression:\"turmaForm.Docente2\",modifiers:{\"number\":true}}],staticStyle:{\"text-transform\":\"capitalize\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.turmaForm, \"Docente2\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},_vm.checkDocente]}},[_c('option'),_vm._l((_vm.DocentesByPreferencia),function(docente){return _c('option',{key:docente.apelido + docente.id,domProps:{\"value\":docente.id}},[_vm._v(\"\\n            \"+_vm._s(docente.apelido.toLowerCase())+\"\\n            \"+_vm._s(_vm.orderByPreferencia && _vm.getPreferenciaDocente(docente)\n                ? \"- \" + _vm.getPreferenciaDocente(docente)\n                : \"\")+\"\\n          \")])})],2)]),_c('font-awesome-icon',{class:['clickable mx-auto', { 'low-opacity': !_vm.orderByPreferencia }],staticStyle:{\"font-size\":\"12px\"},attrs:{\"icon\":['fas', 'graduation-cap'],\"title\":\"Alternar ordenação de docentes por preferência\"},on:{\"click\":function($event){_vm.orderByPreferencia = !_vm.orderByPreferencia}}})],1)]),_c('v-td',{staticClass:\"table-data\",attrs:{\"width\":\"80\",\"type\":\"content\"}},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.turmaForm.turno1),expression:\"turmaForm.turno1\"}],attrs:{\"type\":\"text\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.turmaForm, \"turno1\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},_vm.handleEditTurma]}},[(_vm.isIntegralEAD)?_c('option',{attrs:{\"value\":\"EAD\"}},[_vm._v(\"EAD\")]):[_c('option',{attrs:{\"value\":\"Diurno\"}},[_vm._v(\"Diurno\")]),_c('option',{attrs:{\"value\":\"Noturno\"}},[_vm._v(\"Noturno\")])]],2)]),_c('v-td',{staticClass:\"table-data\",attrs:{\"width\":\"85\",\"type\":\"content\"}},[_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.turmaForm.Horario1),expression:\"turmaForm.Horario1\",modifiers:{\"number\":true}}],on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.turmaForm, \"Horario1\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},function($event){return _vm.checkHorario(1)}]}},[(!_vm.isIntegralEAD)?_c('option'):_vm._e(),_vm._l((_vm.HorariosFiltredByTurno),function(horario){return _c('option',{key:horario.id + horario.horario,domProps:{\"value\":horario.id}},[_vm._v(\"\\n        \"+_vm._s(horario.horario)+\"\\n      \")])})],2),(_vm.hasMoreThan4Creditos)?_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.turmaForm.Horario2),expression:\"turmaForm.Horario2\",modifiers:{\"number\":true}}],on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.turmaForm, \"Horario2\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},function($event){return _vm.checkHorario(2)}]}},[(_vm.isParcialEAD)?_vm._l((_vm.HorariosEAD),function(horario){return _c('option',{key:horario.horario + horario.id,domProps:{\"value\":horario.id}},[_vm._v(\"\\n          \"+_vm._s(horario.horario)+\"\\n        \")])}):[(!_vm.isIntegralEAD)?_c('option'):_vm._e(),_vm._l((_vm.HorariosFiltredByTurno),function(horario){return _c('option',{key:horario.horario + horario.id,domProps:{\"value\":horario.id}},[_vm._v(\"\\n          \"+_vm._s(horario.horario)+\"\\n        \")])})]],2):_vm._e()]),_c('v-td',{staticClass:\"table-data\",attrs:{\"width\":\"95\",\"type\":\"content\"}},[(!_vm.isIntegralEAD)?[_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.turmaForm.Sala1),expression:\"turmaForm.Sala1\",modifiers:{\"number\":true}}],on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.turmaForm, \"Sala1\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},_vm.checkSala]}},[(!_vm.AllSalas.length)?_c('option',{attrs:{\"type\":\"text\"}},[_vm._v(\"Nenhuma Sala Encontrada\")]):_c('option'),_vm._l((_vm.AllSalas),function(sala){return _c('option',{key:sala.id + sala.nome,domProps:{\"value\":sala.id}},[_vm._v(\"\\n          \"+_vm._s(sala.nome)+\"\\n        \")])})],2),(_vm.hasMoreThan4Creditos && _vm.turmaForm.disciplina.ead === 0)?_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.turmaForm.Sala2),expression:\"turmaForm.Sala2\",modifiers:{\"number\":true}}],on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(_vm.turmaForm, \"Sala2\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},_vm.checkSala]}},[(!_vm.AllSalas.length)?_c('option',{attrs:{\"type\":\"text\"}},[_vm._v(\"Nenhuma Sala Encontrada\")]):_c('option'),_vm._l((_vm.AllSalas),function(sala){return _c('option',{key:sala.nome + sala.id,domProps:{\"value\":sala.id}},[_vm._v(\"\\n          \"+_vm._s(sala.nome)+\"\\n        \")])})],2):_vm._e()]:_vm._e()],2),_c('v-td',{staticClass:\"table-data\",attrs:{\"width\":\"45\",\"type\":\"content\"}},[_c('div',{staticClass:\"d-flex flex-column justify-content-between py-1\"},[_c('b',{staticClass:\"mb-1\"},[_vm._v(\"\\n        \"+_vm._s(_vm.totalPedidosNaoPeriodizados + _vm.totalPedidosPeriodizados)+\"\\n      \")]),_c('span',[_vm._v(_vm._s(_vm.totalPedidosPeriodizados)+\"+\"+_vm._s(_vm.totalPedidosNaoPeriodizados))])])]),_vm._l((_vm.cursosAtivados),function(curso){return _c('v-td',{key:curso.id + curso.codigo,staticClass:\"table-data\",attrs:{\"width\":\"35\",\"paddingX\":\"0\",\"type\":\"none\"}},[_vm._l((_vm.PedidosDaTurma),function(pedido,index){return [(pedido.Curso === curso.id)?_c('InputsPedidosDCC',{key:pedido.Turma + curso.Curso,attrs:{\"index\":index,\"turma\":_vm.turma,\"curso\":curso,\"type\":\"main\"}}):_vm._e()]})],2)})],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <tr class=\"turmarow max-content\" :class=\"{ highlighted: turmaForm.highlighted }\">\n    <v-td\n      class=\"table-data\"\n      width=\"25\"\n      type=\"content\"\n      :style=\"{ backgroundColor: turmaForm.disciplina.perfil.cor }\"\n    >\n      <input type=\"checkbox\" v-model=\"toggleToDelete\" :value=\"turma\" />\n    </v-td>\n    <v-td class=\"table-data\" width=\"40\" type=\"content\">\n      <button class=\"btn-table\" @click.stop=\"$emit('click-edit', turma)\">\n        <font-awesome-icon :icon=\"['fas', 'edit']\" class=\"btn-table-icon icon-darkgray\" />\n      </button>\n    </v-td>\n    <v-td class=\"table-data\" width=\"65\" type=\"content\">\n      <select v-model.number=\"turmaForm.periodo\" @change=\"checkHorariosPeriodo()\">\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n      </select>\n    </v-td>\n    <v-td class=\"table-data\" width=\"80\" paddingX=\"2\">\n      {{ turmaForm.disciplina.perfil.abreviacao.toLowerCase() }}\n    </v-td>\n    <v-td class=\"table-data\" width=\"80\" paddingX=\"2\">{{ turmaForm.disciplina.codigo }}</v-td>\n    <v-td class=\"table-data\" width=\"330\" align=\"start\">\n      {{ turmaForm.disciplina.nome.toLowerCase() }}\n    </v-td>\n    <v-td class=\"table-data\" width=\"60\">{{ turmaForm.disciplina.creditoTotal }}</v-td>\n    <v-td class=\"table-data\" width=\"45\" type=\"content\">\n      <input\n        type=\"text\"\n        style=\"width: 30px\"\n        :value=\"turmaForm.letra\"\n        @input=\"turmaForm.letra = $event.target.value.toUpperCase()\"\n        @change=\"handleEditTurma\"\n        @keypress=\"maskTurmaLetra\"\n      />\n    </v-td>\n    <v-td class=\"table-data\" width=\"160\" type=\"none\" paddingX=\"3\">\n      <div class=\"d-flex align-items-center w-100\">\n        <div class=\"d-flex flex-column\" style=\"width: 130px; text-transform: capitalize\">\n          <select\n            v-model.number=\"turmaForm.Docente1\"\n            @change=\"checkDocente\"\n            style=\"text-transform: capitalize\"\n          >\n            <option />\n            <option\n              v-for=\"docente in DocentesByPreferencia\"\n              :key=\"docente.id + docente.apelido\"\n              :value=\"docente.id\"\n            >\n              {{ docente.apelido.toLowerCase() }}\n              {{\n                orderByPreferencia && getPreferenciaDocente(docente)\n                  ? \"- \" + getPreferenciaDocente(docente)\n                  : \"\"\n              }}\n            </option>\n          </select>\n\n          <select\n            v-model.number=\"turmaForm.Docente2\"\n            @change=\"checkDocente\"\n            style=\"text-transform: capitalize\"\n          >\n            <option />\n            <option\n              v-for=\"docente in DocentesByPreferencia\"\n              :key=\"docente.apelido + docente.id\"\n              :value=\"docente.id\"\n            >\n              {{ docente.apelido.toLowerCase() }}\n              {{\n                orderByPreferencia && getPreferenciaDocente(docente)\n                  ? \"- \" + getPreferenciaDocente(docente)\n                  : \"\"\n              }}\n            </option>\n          </select>\n        </div>\n        <font-awesome-icon\n          :icon=\"['fas', 'graduation-cap']\"\n          :class=\"['clickable mx-auto', { 'low-opacity': !orderByPreferencia }]\"\n          style=\"font-size: 12px\"\n          title=\"Alternar ordenação de docentes por preferência\"\n          @click=\"orderByPreferencia = !orderByPreferencia\"\n        />\n      </div>\n    </v-td>\n    <v-td class=\"table-data\" width=\"80\" type=\"content\">\n      <select type=\"text\" v-model=\"turmaForm.turno1\" @change=\"handleEditTurma\">\n        <option v-if=\"isIntegralEAD\" value=\"EAD\">EAD</option>\n        <template v-else>\n          <option value=\"Diurno\">Diurno</option>\n          <option value=\"Noturno\">Noturno</option>\n        </template>\n      </select>\n    </v-td>\n    <v-td class=\"table-data\" width=\"85\" type=\"content\">\n      <select @change=\"checkHorario(1)\" v-model.number=\"turmaForm.Horario1\">\n        <option v-if=\"!isIntegralEAD\" />\n        <option\n          v-for=\"horario in HorariosFiltredByTurno\"\n          :key=\"horario.id + horario.horario\"\n          :value=\"horario.id\"\n        >\n          {{ horario.horario }}\n        </option>\n      </select>\n\n      <select\n        v-if=\"hasMoreThan4Creditos\"\n        @change=\"checkHorario(2)\"\n        v-model.number=\"turmaForm.Horario2\"\n      >\n        <template v-if=\"isParcialEAD\">\n          <option\n            v-for=\"horario in HorariosEAD\"\n            :key=\"horario.horario + horario.id\"\n            :value=\"horario.id\"\n          >\n            {{ horario.horario }}\n          </option>\n        </template>\n\n        <template v-else>\n          <option v-if=\"!isIntegralEAD\" />\n          <option\n            v-for=\"horario in HorariosFiltredByTurno\"\n            :key=\"horario.horario + horario.id\"\n            :value=\"horario.id\"\n          >\n            {{ horario.horario }}\n          </option>\n        </template>\n      </select>\n    </v-td>\n    <v-td class=\"table-data\" width=\"95\" type=\"content\">\n      <template v-if=\"!isIntegralEAD\">\n        <select v-model.number=\"turmaForm.Sala1\" @change=\"checkSala\">\n          <option v-if=\"!AllSalas.length\" type=\"text\">Nenhuma Sala Encontrada</option>\n          <option v-else />\n\n          <option v-for=\"sala in AllSalas\" :key=\"sala.id + sala.nome\" :value=\"sala.id\">\n            {{ sala.nome }}\n          </option>\n        </select>\n\n        <select\n          v-if=\"hasMoreThan4Creditos && turmaForm.disciplina.ead === 0\"\n          v-model.number=\"turmaForm.Sala2\"\n          @change=\"checkSala\"\n        >\n          <option v-if=\"!AllSalas.length\" type=\"text\">Nenhuma Sala Encontrada</option>\n          <option v-else />\n\n          <option v-for=\"sala in AllSalas\" :key=\"sala.nome + sala.id\" :value=\"sala.id\">\n            {{ sala.nome }}\n          </option>\n        </select>\n      </template>\n    </v-td>\n    <v-td class=\"table-data\" width=\"45\" type=\"content\">\n      <div class=\"d-flex flex-column justify-content-between py-1\">\n        <b class=\"mb-1\">\n          {{ totalPedidosNaoPeriodizados + totalPedidosPeriodizados }}\n        </b>\n        <span>{{ totalPedidosPeriodizados }}+{{ totalPedidosNaoPeriodizados }}</span>\n      </div>\n    </v-td>\n    <v-td\n      class=\"table-data\"\n      v-for=\"curso in cursosAtivados\"\n      :key=\"curso.id + curso.codigo\"\n      width=\"35\"\n      paddingX=\"0\"\n      type=\"none\"\n    >\n      <template v-for=\"(pedido, index) in PedidosDaTurma\">\n        <InputsPedidosDCC\n          v-if=\"pedido.Curso === curso.id\"\n          :key=\"pedido.Turma + curso.Curso\"\n          :index=\"index\"\n          :turma=\"turma\"\n          :curso=\"curso\"\n          type=\"main\"\n        />\n      </template>\n    </v-td>\n  </tr>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport { clone, cloneDeep, orderBy, isNull, find, filter } from \"lodash-es\";\nimport { maskTurmaLetra } from \"@/common/mixins\";\nimport { InputsPedidosDCC } from \"@/components/ui\";\n\nexport default {\n  name: \"TurmaRow\",\n  mixins: [maskTurmaLetra],\n  components: {\n    InputsPedidosDCC,\n  },\n  props: {\n    turma: Object,\n    curso: Object,\n    cursosAtivados: Array,\n  },\n  data() {\n    return {\n      periodoAtual: 1,\n      dataAtual: new Date(\"August 20, 69 00:20:18\"),\n      currentData: null,\n      turmaForm: null,\n      orderByPreferencia: false,\n    };\n  },\n\n  methods: {\n    ...mapActions([\"toggleTurmaToDelete\", \"editTurma\"]),\n\n    // retorna a letra da turma que há o conflito\n\n    resetTurmaForm() {\n      this.turmaForm = clone(this.turma);\n      this.currentData = clone(this.turma);\n      this.setDefaultHorarios();\n    },\n    clearHorarios() {\n      this.turmaForm.Horario1 = null;\n      this.turmaForm.Horario2 = null;\n    },\n    setDefaultHorarios() {\n      if (this.turma.disciplina.ead === 1) {\n        this.turmaForm.turno1 = \"EAD\";\n        this.turmaForm.Horario1 = 31;\n        this.turmaForm.Horario2 = 31;\n      } else if (this.turma.disciplina.ead === 2) {\n        this.turmaForm.Horario2 = 31;\n      }\n    },\n    verificaElementoComId(array, idDesejado) {\n      for (let i = 0; i < array.length; i++) {\n        if (\"id\" in array[i] && array[i].id === idDesejado) {\n          return true;\n        }\n      }\n      return false;\n    },\n    checkHorariosPeriodo() {\n      if (!this.checkHorarioDocente(1) && !this.checkHorarioSala(1)) {\n        if (!this.checkHorarioDocente(2) && !this.checkHorarioSala(2)) {\n          this.handleEditTurma();\n        } else {\n          this.turmaForm.Horario2 = this.currentData.Horario2;\n          this.turmaForm.periodo = this.currentData.periodo;\n        }\n      } else {\n        this.turmaForm.Horario1 = this.currentData.Horario1;\n        this.turmaForm.periodo = this.currentData.periodo;\n      }\n    },\n    checkHorario(horario) {\n      if (!this.checkHorarioDocente(horario) && !this.checkHorarioSala(horario)) {\n        this.handleEditTurma();\n      } else {\n        if (horario === 1) this.turmaForm.Horario1 = this.currentData.Horario1;\n        else this.turmaForm.Horario2 = this.currentData.Horario2;\n      }\n    },\n    checkDocente() {\n      let d1 = !this.checkHorarioDocente(1),\n        d2 = !this.checkHorarioDocente(2);\n      if (d1 && d2) {\n        this.handleEditTurma();\n      } else {\n        if (!d1) this.turmaForm.Docente1 = this.currentData.Docente1;\n        if (!d2) this.turmaForm.Docente2 = this.currentData.Docente2;\n      }\n    },\n    checkSala() {\n      let s1 = !this.checkHorarioSala(1),\n        s2 = !this.checkHorarioSala(2);\n      if (s1 && s2) {\n        this.handleEditTurma();\n      } else {\n        if (!s1) this.turmaForm.Sala1 = this.currentData.Sala1;\n        if (!s2) this.turmaForm.Sala2 = this.currentData.Sala2;\n      }\n    },\n    checkHorario_Conflitos(TF, t) {\n      if (TF >= 4 && TF <= 29) {\n        // OU É 16-18 OU 19-21\n        if (TF % 2 === 0) {\n          // É 16-18\n          if (t % 2 !== 0 && t >= 32 && t <= 40) {\n            // verifica se tur.Horario é 17-19\n            if (\n              t / TF === 32 / 4 ||\n              t / TF === 34 / 10 ||\n              t / TF === 36 / 16 ||\n              t / TF === 38 / 22 ||\n              t / TF === 40 / 28\n            ) {\n              // compara 16-18 com 17-19\n              return true; // retorna verdadeiro para o conflito\n            }\n          }\n        } else if (TF % 2 !== 0) {\n          // É 19-21\n          if (t % 2 !== 0 && t >= 33 && t <= 41) {\n            // verifica se tur.Horario é 18-20\n            if (\n              t / TF === 33 / 5 ||\n              t / TF === 35 / 11 ||\n              t / TF === 37 / 17 ||\n              t / TF === 39 / 23 ||\n              t / TF === 41 / 29\n            ) {\n              // compara 19-21 com 18-20\n              return true; // retorna verdadeiro para o conflito\n            }\n          }\n        }\n      } else if (TF >= 32 && TF <= 41) {\n        // OU É 17-19 OU É 18-20\n        if (TF % 2 === 0) {\n          // É 17 - 19\n          if (t % 2 === 0 && t >= 4 && t <= 28) {\n            // verifica se tur.Horario é 16-18\n            if (\n              t / TF === 4 / 32 ||\n              t / TF === 10 / 34 ||\n              t / TF === 16 / 36 ||\n              t / TF === 22 / 38 ||\n              t / TF === 28 / 40\n            ) {\n              // compara 17-19 com 16-18\n              return true; // retorna verdadeiro para o conflito\n            }\n          } else if (t % 2 !== 0 && t >= 33 && t <= 41) {\n            // verifica se tur.Horario é 18-20\n            if (\n              t / TF === 33 / 32 ||\n              t / TF === 35 / 34 ||\n              t / TF === 37 / 36 ||\n              t / TF === 39 / 38 ||\n              t / TF === 41 / 40\n            ) {\n              // compara 17-19 com 18-20\n              return true; // retorna verdadeiro para o conflito\n            }\n          }\n        } else if (TF % 2 !== 0) {\n          // É 18-20\n          if (t % 2 === 0 && t >= 32 && t <= 40) {\n            // verifica se tur.Horario é 17-19\n            if (\n              t / TF === 32 / 33 ||\n              t / TF === 34 / 35 ||\n              t / TF === 36 / 37 ||\n              t / TF === 38 / 39 ||\n              t / TF === 40 / 41\n            ) {\n              // compara 18-20 com 17-19\n              return true; // retorna verdadeiro para o conflito\n            }\n          } else if (t % 2 !== 0 && t >= 5 && t <= 29) {\n            // verifica se tur.HOrario é 19-21\n            if (\n              t / TF === 5 / 33 ||\n              t / TF === 11 / 35 ||\n              t / TF === 17 / 37 ||\n              t / TF === 23 / 39 ||\n              t / TF === 29 / 41\n            ) {\n              // compara 18-20 com 19-21\n              return true; // retorna verdadeiro para o conflito\n            }\n          }\n        }\n      }\n      return false; // não há conflito de interseção\n    },\n    retorna_HorarioString(horario) {\n      var horarios = new Map();\n      horarios.set(1, \"2a 08-10\");\n      horarios.set(2, \"2a 10-12\");\n      horarios.set(3, \"2a 14-16\");\n      horarios.set(4, \"2a 16-18\");\n      horarios.set(32, \"2a 17-19\");\n      horarios.set(33, \"2a 18-20\");\n      horarios.set(5, \"2a 19-21\");\n      horarios.set(6, \"2a 21-23\");\n\n      horarios.set(7, \"3a 08-10\");\n      horarios.set(8, \"3a 10-12\");\n      horarios.set(9, \"3a 14-16\");\n      horarios.set(10, \"3a 16-18\");\n      horarios.set(34, \"3a 17-19\");\n      horarios.set(35, \"3a 18-20\");\n      horarios.set(11, \"3a 19-21\");\n      horarios.set(12, \"3a 21-23\");\n\n      horarios.set(13, \"4a 08-10\");\n      horarios.set(14, \"4a 10-12\");\n      horarios.set(15, \"4a 14-16\");\n      horarios.set(16, \"4a 16-18\");\n      horarios.set(36, \"4a 17-19\");\n      horarios.set(37, \"4a 18-20\");\n      horarios.set(17, \"4a 19-21\");\n      horarios.set(18, \"4a 21-23\");\n\n      horarios.set(19, \"5a 08-10\");\n      horarios.set(20, \"5a 10-12\");\n      horarios.set(21, \"5a 14-16\");\n      horarios.set(22, \"5a 16-18\");\n      horarios.set(38, \"5a 17-19\");\n      horarios.set(39, \"5a 18-20\");\n      horarios.set(23, \"5a 19-21\");\n      horarios.set(24, \"5a 21-23\");\n\n      horarios.set(25, \"6a 08-10\");\n      horarios.set(26, \"6a 10-12\");\n      horarios.set(27, \"6a 14-16\");\n      horarios.set(28, \"6a 16-18\");\n      horarios.set(40, \"6a 17-19\");\n      horarios.set(41, \"6a 18-20\");\n      horarios.set(29, \"6a 19-21\");\n      horarios.set(30, \"6a 21-23\");\n      let retorno = \"\";\n\n      for (var [key, value] of horarios) {\n        if (horario === key) {\n          retorno = value;\n        }\n      }\n      horarios.clear();\n      return retorno;\n    },\n    checkHorarioDocente(horario) {\n      let horarios1618 = [4, 10, 16, 22, 28];\n      let horarios1719 = [32, 34, 36, 38, 40];\n      let horarios1820 = [33, 35, 37, 39, 41];\n      let horarios1921 = [5, 11, 17, 23, 29];\n      if (this.turmaForm.Horario1 === \"\") this.turmaForm.Horario1 = null;\n      if (this.turmaForm.Horario2 === \"\") this.turmaForm.Horario2 = null;\n      if (this.turmaForm.Docente1 === \"\") this.turmaForm.Docente1 = null;\n      if (this.turmaForm.Docente2 === \"\") this.turmaForm.Docente2 = null;\n\n      if (\n        (!isNull(this.turmaForm.Horario1) || !isNull(this.turmaForm.Horario2)) &&\n        (!isNull(this.turmaForm.Docente1) || !isNull(this.turmaForm.Docente2))\n      ) {\n        if (horario === 1 ? this.turmaForm.Horario1 === 31 : this.turmaForm.Horario2 === 31) {\n          return false;\n        } else if (horario === 1 && horarios1618.includes(this.turmaForm.Horario1)) {\n          if (this.checkHorarioDocente1618(1, 1)) return true;\n          if (this.checkHorarioDocente1618(1, 2)) return true;\n        } else if (horario === 2 && horarios1618.includes(this.turmaForm.Horario2)) {\n          if (this.checkHorarioDocente1618(2, 1)) return true;\n          if (this.checkHorarioDocente1618(2, 2)) return true;\n        } else if (horario === 1 && horarios1719.includes(this.turmaForm.Horario1)) {\n          if (this.checkHorarioDocente1719(1, 1)) return true;\n          if (this.checkHorarioDocente1719(1, 2)) return true;\n        } else if (horario === 2 && horarios1719.includes(this.turmaForm.Horario2)) {\n          if (this.checkHorarioDocente1719(2, 1)) return true;\n          if (this.checkHorarioDocente1719(2, 2)) return true;\n        } else if (horario === 1 && horarios1820.includes(this.turmaForm.Horario1)) {\n          if (this.checkHorarioDocente1820(1, 1)) return true;\n          if (this.checkHorarioDocente1820(1, 2)) return true;\n        } else if (horario === 2 && horarios1820.includes(this.turmaForm.Horario2)) {\n          if (this.checkHorarioDocente1820(2, 1)) return true;\n          if (this.checkHorarioDocente1820(2, 2)) return true;\n        } else if (horario === 1 && horarios1921.includes(this.turmaForm.Horario1)) {\n          if (this.checkHorarioDocente1921(1, 1)) return true;\n          if (this.checkHorarioDocente1921(1, 2)) return true;\n        } else if (horario === 2 && horarios1921.includes(this.turmaForm.Horario2)) {\n          if (this.checkHorarioDocente1921(2, 1)) return true;\n          if (this.checkHorarioDocente1921(2, 2)) return true;\n        } else {\n          if (horario === 1) {\n            if (this.checkHorarioDocenteGeral(1, 1)) return true;\n            if (this.checkHorarioDocenteGeral(1, 2)) return true;\n          } else {\n            if (this.checkHorarioDocenteGeral(2, 1)) return true;\n            if (this.checkHorarioDocenteGeral(2, 2)) return true;\n          }\n        }\n      }\n      return false;\n    },\n    notifyHorarioDocente(docente) {\n      let extraInfo = this.encontrarTurmaDuplicada_HorarioDocente();\n      let d =\n        docente === 1\n          ? find(this.DocentesAtivos, [\"id\", this.turmaForm.Docente1])\n          : find(this.DocentesAtivos, [\"id\", this.turmaForm.Docente2]);\n      let text = `Conflito com o docente ${d.apelido} no horário ${extraInfo}`;\n\n      this.pushNotification({\n        text: text,\n        type: \"error\",\n      });\n    },\n    encontrarTurmaDuplicada_HorarioDocente() {\n      const found = this.AllTurmas.find((tur) => tur.id === this.turmaForm.id);\n      let index = this.AllTurmas.indexOf(found);\n      let lista = [...this.AllTurmas];\n\n      lista.splice(index, 1);\n\n      for (const tur of lista) {\n        // Comparação de uma turma com um Professor (turmaForm) e um horario com uma turma de um professor e dois horários ok ok ok OK\n        if (\n          this.turmaForm.Horario2 === null &&\n          this.turmaForm.Docente2 === null &&\n          tur.Horario2 !== null &&\n          tur.Docente2 === null\n        ) {\n          if (\n            this.turmaForm.Docente1 === tur.Docente1 &&\n            this.turmaForm.Horario1 === tur.Horario1 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            this.turmaForm.Docente1 === tur.Docente1 &&\n            this.turmaForm.Horario1 === tur.Horario2 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            this.turmaForm.Docente1 === tur.Docente1 &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            this.turmaForm.Docente1 === tur.Docente1 &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario2) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n\n        // Comparação turma com um professor e um horário com uma turma dois professores e dois horários  ok ok ok ok\n        if (\n          this.turmaForm.Horario2 === null &&\n          this.turmaForm.Docente2 === null &&\n          tur.Docente2 !== null &&\n          tur.Horario2 !== null\n        ) {\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2) &&\n            this.turmaForm.Horario1 === tur.Horario1 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2) &&\n            this.turmaForm.Horario1 === tur.Horario2 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2) &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2) &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario2) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n        // Comparação turma com um professor e dois horarios com uma turma com dois professores e dois horários ok ok ok ok\n        if (\n          this.turmaForm.Horario2 !== null &&\n          this.turmaForm.Docente2 === null &&\n          tur.Horario2 !== null &&\n          tur.Docente2 !== null\n        ) {\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2) &&\n            (this.turmaForm.Horario1 === tur.Horario1 ||\n              this.turmaForm.Horario2 === tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2) &&\n            (this.turmaForm.Horario1 === tur.Horario2 ||\n              this.turmaForm.Horario2 === tur.Horario2) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2) &&\n            (this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) ||\n              this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario1)) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2) &&\n            (this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario2) ||\n              this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario2)) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n        // Comparação de uma turma de um professor e dois horários com uma turma com um Professor e um horario  ok ok ok OK\n        if (\n          this.turmaForm.Docente2 === null &&\n          this.turmaForm.Horario2 !== null &&\n          tur.Docente2 === null &&\n          tur.Horario2 === null\n        ) {\n          if (\n            this.turmaForm.Docente1 === tur.Docente1 &&\n            (this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) ||\n              this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario1) ||\n              this.turmaForm.Horario1 === tur.Horario1 ||\n              this.turmaForm.Horario2 === tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n        // Comparação de uma turma dois professores e dois horários com uma turma com um professor e um horário  ok ok ok ok\n        if (\n          this.turmaForm.Horario2 !== null &&\n          this.turmaForm.Docente2 !== null &&\n          tur.Horario2 === null &&\n          tur.Docente2 === null\n        ) {\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            (this.turmaForm.Horario1 === tur.Horario1 ||\n              this.turmaForm.Horario2 === tur.Horario1 ||\n              this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) ||\n              this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario1)) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n        // Comparação turma com dois professores e dois horários com uma turma com um professor e dois horarios ok ok ok ok\n        if (\n          this.turmaForm.Horario2 !== null &&\n          this.turmaForm.Docente2 !== null &&\n          tur.Docente2 === null &&\n          tur.Horario2 !== null\n        ) {\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            this.turmaForm.Horario1 === tur.Horario1 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            this.turmaForm.Horario2 === tur.Horario1 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            this.turmaForm.Horario1 === tur.Horario2 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            this.turmaForm.Horario2 === tur.Horario2 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario2) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario2) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n        // Comparação de uma turma com um horário com outra turma com um professor e um horário  OK OK OK OK\n        if (\n          this.turmaForm.Horario2 === null &&\n          this.turmaForm.Docente2 === null &&\n          tur.Horario2 === null &&\n          tur.Docente2 === null\n        ) {\n          if (\n            this.turmaForm.Horario1 === tur.Horario1 &&\n            this.turmaForm.Docente1 === tur.Docente1 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            this.$emit(\"conflict\", tur.id);\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) &&\n            this.turmaForm.Docente1 === tur.Docente1 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            this.$emit(\"conflict\", tur.id);\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n        // Comparação de uma turma com dois horários e um professor com uma turma com um professor e dois horários ok OK OK OK\n        if (\n          this.turmaForm.Horario2 !== null &&\n          this.turmaForm.Docente2 === null &&\n          tur.Horario2 !== null &&\n          tur.Docente2 === null\n        ) {\n          if (\n            this.turmaForm.Docente1 === tur.Docente1 &&\n            (this.turmaForm.Horario1 === tur.Horario1 ||\n              this.turmaForm.Horario2 === tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            this.turmaForm.Docente1 === tur.Docente1 &&\n            (this.turmaForm.Horario1 === tur.Horario2 ||\n              this.turmaForm.Horario2 === tur.Horario2) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            this.turmaForm.Docente1 === tur.Docente1 &&\n            (this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) ||\n              this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario1)) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            this.turmaForm.Docente1 === tur.Docente1 &&\n            (this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario2) ||\n              this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario2)) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n        // Comparação de uma turma com dois professores e dois horários com uma turmas com dois professores e dois horários OK OK OK ok\n        if (\n          this.turmaForm.Docente2 !== null &&\n          this.turmaForm.Horario2 !== null &&\n          tur.Docente2 !== null &&\n          tur.Horario2 !== null\n        ) {\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2 ||\n              this.turmaForm.Docente2 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente2) &&\n            (this.turmaForm.Horario1 === tur.Horario1 ||\n              this.turmaForm.Horario2 === tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2 ||\n              this.turmaForm.Docente2 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente2) &&\n            (this.turmaForm.Horario1 === tur.Horario2 ||\n              this.turmaForm.Horario2 === tur.Horario2) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2 ||\n              this.turmaForm.Docente2 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente2) &&\n            (this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) ||\n              this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario1)) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2 ||\n              this.turmaForm.Docente2 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente2) &&\n            (this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario2) ||\n              this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario2)) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n        // Comparação de uma turma com dois professores e um horário com uma turma com um professor e um horário\n        if (\n          this.turmaForm.Docente2 !== null &&\n          this.turmaForm.Horario2 === null &&\n          tur.Docente2 === null &&\n          tur.Horario2 === null\n        ) {\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            this.turmaForm.Horario1 === tur.Horario1 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n        // Comparação de uma turma com um professor e um horário com uma turma com dois professores e um horário\n        if (\n          this.turmaForm.Docente2 === null &&\n          this.turmaForm.Horario2 === null &&\n          tur.Docente2 !== null &&\n          tur.Horario2 === null\n        ) {\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2) &&\n            this.turmaForm.Horario1 === tur.Horario1 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2) &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n\n        // Comparação de uma turma com dois professores e um horário com uma turma com um professor e dois horários\n        if (\n          this.turmaForm.Docente2 !== null &&\n          this.turmaForm.Horario2 === null &&\n          tur.Docente2 === null &&\n          tur.Horario2 !== null\n        ) {\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            this.turmaForm.Horario1 === tur.Horario1 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            this.turmaForm.Horario1 === tur.Horario2 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1) &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario2) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n        // Comparação de uma turma com um professor e dois horários com uma turma com dois professores e um horário\n        if (\n          this.turmaForm.Docente2 === null &&\n          this.turmaForm.Horario2 !== null &&\n          tur.Docente2 !== null &&\n          tur.Horario2 === null\n        ) {\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2) &&\n            (this.turmaForm.Horario1 === tur.Horario1 ||\n              this.turmaForm.Horario2 === tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              (this.turmaForm.Docente1 === tur.Docente2 &&\n                (this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) ||\n                  this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario1)))) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n        // Comparação de uma turma com dois professores e um horário com uma turma com dois professores e dois horários\n        if (\n          this.turmaForm.Docente2 !== null &&\n          this.turmaForm.Horario2 === null &&\n          tur.Docente2 !== null &&\n          tur.Horario2 !== null\n        ) {\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2 ||\n              this.turmaForm.Docente2 === tur.Docente2) &&\n            this.turmaForm.Horario1 === tur.Horario1 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2 ||\n              this.turmaForm.Docente2 === tur.Docente2) &&\n            this.turmaForm.Horario1 === tur.Horario2 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2 ||\n              this.turmaForm.Docente2 === tur.Docente2) &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2 ||\n              this.turmaForm.Docente2 === tur.Docente2) &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario2) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n        // Comparação de uma turma com dois professores e dois horários com uma turma com dois professores e um horário\n        if (\n          this.turmaForm.Docente2 !== null &&\n          this.turmaForm.Horario2 !== null &&\n          tur.Docente2 !== null &&\n          tur.Horario2 === null\n        ) {\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2 ||\n              this.turmaForm.Docente2 === tur.Docente2) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Docente1 === tur.Docente1 ||\n              this.turmaForm.Docente2 === tur.Docente1 ||\n              this.turmaForm.Docente1 === tur.Docente2 ||\n              this.turmaForm.Docente2 === tur.Docente2) &&\n            (this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) ||\n              this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario1)) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n      }\n      return false;\n    },\n    checkHorarioDocente1618(horario, docente) {\n      let conflitos = filter(this.$store.state.turma.Turmas, (t) => {\n        if (this.turmaForm.periodo != t.periodo) {\n          return false;\n        }\n        let h1, h2;\n        if (horario === 1) {\n          h1 =\n            this.turmaForm.Horario1 === t.Horario1 ||\n            32 + (this.turmaForm.Horario1 - 4) / 3 === t.Horario1;\n          h2 =\n            this.turmaForm.Horario1 === t.Horario2 ||\n            32 + (this.turmaForm.Horario1 - 4) / 3 === t.Horario2;\n        } else {\n          h1 =\n            this.turmaForm.Horario2 === t.Horario1 ||\n            32 + (this.turmaForm.Horario2 - 4) / 3 === t.Horario1;\n          h2 =\n            this.turmaForm.Horario2 === t.Horario2 ||\n            32 + (this.turmaForm.Horario2 - 4) / 3 === t.Horario2;\n        }\n        let d1, d2;\n        if (docente === 1) {\n          d1 = !isNull(this.turmaForm.Docente1) && this.turmaForm.Docente1 === t.Docente1;\n          d2 = !isNull(this.turmaForm.Docente1) && this.turmaForm.Docente1 === t.Docente2;\n        } else {\n          d1 = !isNull(this.turmaForm.Docente2) && this.turmaForm.Docente2 === t.Docente1;\n          d2 = !isNull(this.turmaForm.Docente2) && this.turmaForm.Docente2 === t.Docente2;\n        }\n\n        return ((h1 || h2) && d1) || ((h1 || h2) && d2);\n      });\n      if (conflitos.length > 0) {\n        if (conflitos.length === 1) {\n          if (conflitos[0].id === this.turmaForm.id) {\n            return false;\n          }\n        }\n\n        this.notifyHorarioDocente(horario, docente);\n\n        return true;\n      }\n      return false;\n    },\n    checkHorarioDocente1719(horario, docente) {\n      let conflitos = filter(this.$store.state.turma.Turmas, (t) => {\n        if (this.turmaForm.periodo != t.periodo) {\n          return false;\n        }\n        let h1, h2;\n        if (horario === 1) {\n          h1 =\n            this.turmaForm.Horario1 === t.Horario1 ||\n            4 + (this.turmaForm.Horario1 - 32) * 3 === t.Horario1 ||\n            this.turmaForm.Horario1 + 1 === t.Horario1;\n          h2 =\n            this.turmaForm.Horario1 === t.Horario2 ||\n            4 + (this.turmaForm.Horario1 - 32) * 3 === t.Horario2 ||\n            this.turmaForm.Horario1 + 1 === t.Horario2;\n        } else {\n          h1 =\n            this.turmaForm.Horario2 === t.Horario1 ||\n            4 + (this.turmaForm.Horario2 - 32) * 3 === t.Horario1 ||\n            this.turmaForm.Horario2 + 1 === t.Horario1;\n          h2 =\n            this.turmaForm.Horario2 === t.Horario2 ||\n            4 + (this.turmaForm.Horario2 - 32) * 3 === t.Horario2 ||\n            this.turmaForm.Horario2 + 1 === t.Horario2;\n        }\n        let d1, d2;\n        if (docente === 1) {\n          d1 = !isNull(this.turmaForm.Docente1) && this.turmaForm.Docente1 === t.Docente1;\n          d2 = !isNull(this.turmaForm.Docente1) && this.turmaForm.Docente1 === t.Docente2;\n        } else {\n          d1 = !isNull(this.turmaForm.Docente2) && this.turmaForm.Docente2 === t.Docente1;\n          d2 = !isNull(this.turmaForm.Docente2) && this.turmaForm.Docente2 === t.Docente2;\n        }\n\n        return ((h1 || h2) && d1) || ((h1 || h2) && d2);\n      });\n      if (conflitos.length > 0) {\n        if (conflitos.length === 1) {\n          if (conflitos[0].id === this.turmaForm.id) {\n            return false;\n          }\n        }\n\n        this.notifyHorarioDocente(horario, docente);\n\n        return true;\n      }\n      return false;\n    },\n    checkHorarioDocente1820(horario, docente) {\n      let conflitos = filter(this.$store.state.turma.Turmas, (t) => {\n        if (this.turmaForm.periodo != t.periodo) {\n          return false;\n        }\n        let h1, h2;\n        if (horario === 1) {\n          h1 =\n            this.turmaForm.Horario1 === t.Horario1 ||\n            5 + (this.turmaForm.Horario1 - 33) * 3 === t.Horario1 ||\n            this.turmaForm.Horario1 - 1 === t.Horario1;\n          h2 =\n            this.turmaForm.Horario1 === t.Horario2 ||\n            5 + (this.turmaForm.Horario1 - 33) * 3 === t.Horario2 ||\n            this.turmaForm.Horario1 - 1 === t.Horario2;\n        } else {\n          h1 =\n            this.turmaForm.Horario2 === t.Horario1 ||\n            5 + (this.turmaForm.Horario2 - 33) * 3 === t.Horario1 ||\n            this.turmaForm.Horario2 - 1 === t.Horario1;\n          h2 =\n            this.turmaForm.Horario2 === t.Horario2 ||\n            5 + (this.turmaForm.Horario2 - 33) * 3 === t.Horario2 ||\n            this.turmaForm.Horario2 - 1 === t.Horario2;\n        }\n        let d1, d2;\n        if (docente === 1) {\n          d1 = !isNull(this.turmaForm.Docente1) && this.turmaForm.Docente1 === t.Docente1;\n          d2 = !isNull(this.turmaForm.Docente1) && this.turmaForm.Docente1 === t.Docente2;\n        } else {\n          d1 = !isNull(this.turmaForm.Docente2) && this.turmaForm.Docente2 === t.Docente1;\n          d2 = !isNull(this.turmaForm.Docente2) && this.turmaForm.Docente2 === t.Docente2;\n        }\n\n        return ((h1 || h2) && d1) || ((h1 || h2) && d2);\n      });\n      if (conflitos.length > 0) {\n        if (conflitos.length === 1) {\n          if (conflitos[0].id === this.turmaForm.id) {\n            return false;\n          }\n        }\n\n        this.notifyHorarioDocente(horario, docente);\n\n        return true;\n      }\n      return false;\n    },\n    checkHorarioDocente1921(horario, docente) {\n      let conflitos = filter(this.$store.state.turma.Turmas, (t) => {\n        if (this.turmaForm.periodo != t.periodo) {\n          return false;\n        }\n        let h1, h2;\n        if (horario === 1) {\n          h1 =\n            this.turmaForm.Horario1 === t.Horario1 ||\n            33 + (this.turmaForm.Horario1 - 5) / 3 === t.Horario1;\n          h2 =\n            this.turmaForm.Horario1 === t.Horario2 ||\n            33 + (this.turmaForm.Horario1 - 5) / 3 === t.Horario2;\n        } else {\n          h1 =\n            this.turmaForm.Horario2 === t.Horario1 ||\n            33 + (this.turmaForm.Horario2 - 5) / 3 === t.Horario1;\n          h2 =\n            this.turmaForm.Horario2 === t.Horario2 ||\n            33 + (this.turmaForm.Horario2 - 5) / 3 === t.Horario2;\n        }\n        let d1, d2;\n        if (docente === 1) {\n          d1 = !isNull(this.turmaForm.Docente1) && this.turmaForm.Docente1 === t.Docente1;\n          d2 = !isNull(this.turmaForm.Docente1) && this.turmaForm.Docente1 === t.Docente2;\n        } else {\n          d1 = !isNull(this.turmaForm.Docente2) && this.turmaForm.Docente2 === t.Docente1;\n          d2 = !isNull(this.turmaForm.Docente2) && this.turmaForm.Docente2 === t.Docente2;\n        }\n\n        return ((h1 || h2) && d1) || ((h1 || h2) && d2);\n      });\n      if (conflitos.length > 0) {\n        if (conflitos.length === 1) {\n          if (conflitos[0].id === this.turmaForm.id) {\n            return false;\n          }\n        }\n\n        this.notifyHorarioDocente(horario, docente);\n\n        return true;\n      }\n      return false;\n    },\n\n    checkHorarioDocenteGeral(horario, docente) {\n      let conflitos = filter(this.$store.state.turma.Turmas, (t) => {\n        if (this.turmaForm.periodo != t.periodo) {\n          return false;\n        }\n        let h1, h2;\n        if (horario === 1) {\n          h1 = !isNull(this.turmaForm.Horario1) && this.turmaForm.Horario1 === t.Horario1;\n          h2 = !isNull(this.turmaForm.Horario1) && this.turmaForm.Horario1 === t.Horario2;\n        } else {\n          h1 = !isNull(this.turmaForm.Horario2) && this.turmaForm.Horario2 === t.Horario1;\n          h2 = !isNull(this.turmaForm.Horario2) && this.turmaForm.Horario2 === t.Horario2;\n        }\n        let d1, d2;\n        if (docente === 1) {\n          d1 = !isNull(this.turmaForm.Docente1) && this.turmaForm.Docente1 === t.Docente1;\n          d2 = !isNull(this.turmaForm.Docente1) && this.turmaForm.Docente1 === t.Docente2;\n        } else {\n          d1 = !isNull(this.turmaForm.Docente2) && this.turmaForm.Docente2 === t.Docente1;\n          d2 = !isNull(this.turmaForm.Docente2) && this.turmaForm.Docente2 === t.Docente2;\n        }\n\n        return ((h1 || h2) && d1) || ((h1 || h2) && d2);\n      });\n      if (conflitos.length > 0) {\n        if (conflitos.length === 1) {\n          if (conflitos[0].id === this.turmaForm.id) {\n            return false;\n          }\n        }\n\n        this.notifyHorarioDocente(horario, docente);\n\n        return true;\n      }\n      return false;\n    },\n    checkHorarioSala(horario) {\n      let horarios1618 = [4, 10, 16, 22, 28];\n      let horarios1719 = [32, 34, 36, 38, 40];\n      let horarios1820 = [33, 35, 37, 39, 41];\n      let horarios1921 = [5, 11, 17, 23, 29];\n\n      if (this.turmaForm.Horario1 === \"\") this.turmaForm.Horario1 = null;\n      if (this.turmaForm.Horario2 === \"\") this.turmaForm.Horario2 = null;\n      if (this.turmaForm.Sala1 === \"\") this.turmaForm.Sala1 = null;\n      if (this.turmaForm.Sala2 === \"\") this.turmaForm.Sala2 = null;\n      if (\n        (!isNull(this.turmaForm.Horario1) || !isNull(this.turmaForm.Horario2)) &&\n        (!isNull(this.turmaForm.Sala1) || !isNull(this.turmaForm.Sala2))\n      ) {\n        if (horario === 1 ? this.turmaForm.Horario1 === 31 : this.turmaForm.Horario2 === 31) {\n          return false;\n        } else if (horario === 1 && horarios1618.includes(this.turmaForm.Horario1)) {\n          if (this.checkHorarioSala1618(1, 1)) return true;\n        } else if (horario === 2 && horarios1618.includes(this.turmaForm.Horario2)) {\n          if (this.checkHorarioSala1618(2, 2)) return true;\n        } else if (horario === 1 && horarios1719.includes(this.turmaForm.Horario1)) {\n          if (this.checkHorarioSala1719(1, 1)) return true;\n        } else if (horario === 2 && horarios1719.includes(this.turmaForm.Horario2)) {\n          if (this.checkHorarioSala1719(2, 2)) return true;\n        } else if (horario === 1 && horarios1820.includes(this.turmaForm.Horario1)) {\n          if (this.checkHorarioSala1820(1, 1)) return true;\n        } else if (horario === 2 && horarios1820.includes(this.turmaForm.Horario2)) {\n          if (this.checkHorarioSala1820(2, 2)) return true;\n        } else if (horario === 1 && horarios1921.includes(this.turmaForm.Horario1)) {\n          if (this.checkHorarioSala1921(1, 1)) return true;\n        } else if (horario === 2 && horarios1921.includes(this.turmaForm.Horario2)) {\n          if (this.checkHorarioSala1921(2, 2)) return true;\n        } else {\n          if (horario == 1) {\n            if (this.checkHorarioSalaGeral(1, 1)) return true;\n          } else {\n            if (this.checkHorarioSalaGeral(2, 2)) return true;\n          }\n        }\n      }\n      return false;\n    },\n    notifyHorarioSala(sala) {\n      let extraInfo = this.encontrarTurmaDuplicada_HorarioSala();\n\n      let s =\n        sala === 1\n          ? find(this.AllSalas, [\"id\", this.turmaForm.Sala1])\n          : find(this.AllSalas, [\"id\", this.turmaForm.Sala2]);\n\n      let text = `Conflito com a sala ${s.nome} no horário ${extraInfo}`;\n      this.pushNotification({\n        text: text,\n        type: \"error\",\n      });\n    },\n    encontrarTurmaDuplicada_HorarioSala() {\n      const found = this.AllTurmas.find((tur) => tur.id === this.turmaForm.id);\n      let index = this.AllTurmas.indexOf(found);\n      let lista = [...this.AllTurmas];\n\n      lista.splice(index, 1);\n\n      for (const tur of lista) {\n        // Comparação de uma turma com uma sala (turmaForm) e um horario com uma turma duas salas e dois horários ok ok\n        if (\n          this.turmaForm.Horario2 === null &&\n          this.turmaForm.Sala2 === null &&\n          tur.Horario2 !== null &&\n          tur.Sala2 !== null\n        ) {\n          if (\n            (this.turmaForm.Sala1 === tur.Sala1 || this.turmaForm.Sala1 === tur.Sala2) &&\n            this.turmaForm.Horario1 === tur.Horario1 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Sala1 === tur.Sala1 || this.turmaForm.Sala1 === tur.Sala2) &&\n            this.turmaForm.Horario1 === tur.Horario2 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Sala1 === tur.Sala1 || this.turmaForm.Sala1 === tur.Sala2) &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Sala1 === tur.Sala1 || this.turmaForm.Sala1 === tur.Sala2) &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario2) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n        // Comparação turma com uma sala e um horário com uma turma sala e um horário ok ok\n\n        if (\n          this.turmaForm.Horario2 === null &&\n          this.turmaForm.Sala2 === null &&\n          tur.Horario2 === null &&\n          tur.Sala2 === null\n        ) {\n          if (\n            this.turmaForm.Sala1 === tur.Sala1 &&\n            this.turmaForm.Horario1 === tur.Horario1 &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            this.turmaForm.Sala1 === tur.Sala1 &&\n            this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n        // Comparação turma com duas salas e dois horarios     ok ok\n        if (\n          this.turmaForm.Horario2 !== null &&\n          this.turmaForm.Sala2 !== null &&\n          tur.Horario2 !== null &&\n          tur.Sala2 !== null\n        ) {\n          if (\n            (this.turmaForm.Sala1 === tur.Sala1 ||\n              this.turmaForm.Sala1 === tur.Sala2 ||\n              this.turmaForm.Sala2 === tur.Sala1 ||\n              this.turmaForm.Sala2 === tur.Sala2) &&\n            (this.turmaForm.Horario1 === tur.Horario1 ||\n              this.turmaForm.Horario2 === tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Sala1 === tur.Sala1 ||\n              this.turmaForm.Sala1 === tur.Sala2 ||\n              this.turmaForm.Sala2 === tur.Sala1 ||\n              this.turmaForm.Sala2 === tur.Sala2) &&\n            (this.turmaForm.Horario1 === tur.Horario2 ||\n              this.turmaForm.Horario2 === tur.Horario2) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Sala1 === tur.Sala1 ||\n              this.turmaForm.Sala1 === tur.Sala2 ||\n              this.turmaForm.Sala2 === tur.Sala1 ||\n              this.turmaForm.Sala2 === tur.Sala2) &&\n            (this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) ||\n              this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario1)) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Sala1 === tur.Sala1 ||\n              this.turmaForm.Sala1 === tur.Sala2 ||\n              this.turmaForm.Sala2 === tur.Sala1 ||\n              this.turmaForm.Sala2 === tur.Sala2) &&\n            (this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario2) ||\n              this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario2)) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario2)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n\n        // Comparação de uma turma com duas salas e dois horarios com uma turma com um horário e uma sala ok ok\n        if (\n          this.turmaForm.Horario2 !== null &&\n          this.turmaForm.Sala2 !== null &&\n          tur.Horario2 === null &&\n          tur.Sala2 === null\n        ) {\n          if (\n            (this.turmaForm.Sala1 === tur.Sala1 || this.turmaForm.Sala2 === tur.Sala1) &&\n            (this.turmaForm.Horario1 === tur.Horario1 ||\n              this.turmaForm.Horario2 === tur.Horario1) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n          if (\n            (this.turmaForm.Sala1 === tur.Sala1 || this.turmaForm.Sala2 === tur.Sala1) &&\n            (this.checkHorario_Conflitos(this.turmaForm.Horario1, tur.Horario1) ||\n              this.checkHorario_Conflitos(this.turmaForm.Horario2, tur.Horario1)) &&\n            this.turmaForm.periodo === tur.periodo\n          ) {\n            return `${this.retorna_HorarioString(tur.Horario1)}. ${tur.disciplina.codigo} - ${\n              tur.letra\n            }`;\n          }\n        }\n      }\n      return \"\";\n    },\n\n    checkHorarioSala1618(horario, sala) {\n      let conflitos = filter(\n        this.$store.state.turma.Turmas.concat(this.$store.state.turmaExterna.Turmas),\n        (t) => {\n          if (this.turmaForm.periodo != t.periodo) {\n            return false;\n          }\n          let h1, h2;\n          if (horario === 1) {\n            h1 =\n              this.turmaForm.Horario1 === t.Horario1 ||\n              32 + (this.turmaForm.Horario1 - 4) / 3 === t.Horario1;\n            h2 =\n              this.turmaForm.Horario1 === t.Horario2 ||\n              32 + (this.turmaForm.Horario1 - 4) / 3 === t.Horario2;\n          } else {\n            h1 =\n              this.turmaForm.Horario2 === t.Horario1 ||\n              32 + (this.turmaForm.Horario2 - 4) / 3 === t.Horario1;\n            h2 =\n              this.turmaForm.Horario2 === t.Horario2 ||\n              32 + (this.turmaForm.Horario2 - 4) / 3 === t.Horario2;\n          }\n          let d1, d2;\n          if (sala === 1) {\n            d1 = !isNull(this.turmaForm.Sala1) && this.turmaForm.Sala1 === t.Sala1;\n            d2 = !isNull(this.turmaForm.Sala1) && this.turmaForm.Sala1 === t.Sala2;\n          } else {\n            d1 = !isNull(this.turmaForm.Sala2) && this.turmaForm.Sala2 === t.Sala1;\n            d2 = !isNull(this.turmaForm.Sala2) && this.turmaForm.Sala2 === t.Sala2;\n          }\n\n          return (h1 && d1) || (h2 && d2);\n        }\n      );\n      if (conflitos.length > 0) {\n        if (conflitos.length === 1) {\n          if (conflitos[0].id === this.turmaForm.id) {\n            return false;\n          }\n        }\n\n        this.notifyHorarioSala(horario, sala);\n\n        return true;\n      }\n      return false;\n    },\n    checkHorarioSala1719(horario, sala) {\n      let conflitos = filter(\n        this.$store.state.turma.Turmas.concat(this.$store.state.turmaExterna.Turmas),\n        (t) => {\n          if (this.turmaForm.periodo != t.periodo) {\n            return false;\n          }\n          let h1, h2;\n          if (horario === 1) {\n            h1 =\n              this.turmaForm.Horario1 === t.Horario1 ||\n              4 + (this.turmaForm.Horario1 - 32) * 3 === t.Horario1 ||\n              this.turmaForm.Horario1 + 1 === t.Horario1;\n            h2 =\n              this.turmaForm.Horario1 === t.Horario2 ||\n              4 + (this.turmaForm.Horario1 - 32) * 3 === t.Horario2 ||\n              this.turmaForm.Horario1 + 1 === t.Horario2;\n          } else {\n            h1 =\n              this.turmaForm.Horario2 === t.Horario1 ||\n              4 + (this.turmaForm.Horario2 - 32) * 3 === t.Horario1 ||\n              this.turmaForm.Horario2 + 1 === t.Horario1;\n            h2 =\n              this.turmaForm.Horario2 === t.Horario2 ||\n              4 + (this.turmaForm.Horario2 - 32) * 3 === t.Horario2 ||\n              this.turmaForm.Horario2 + 1 === t.Horario2;\n          }\n          let d1, d2;\n          if (sala === 1) {\n            d1 = !isNull(this.turmaForm.Sala1) && this.turmaForm.Sala1 === t.Sala1;\n            d2 = !isNull(this.turmaForm.Sala1) && this.turmaForm.Sala1 === t.Sala2;\n          } else {\n            d1 = !isNull(this.turmaForm.Sala2) && this.turmaForm.Sala2 === t.Sala1;\n            d2 = !isNull(this.turmaForm.Sala2) && this.turmaForm.Sala2 === t.Sala2;\n          }\n\n          return (h1 && d1) || (h2 && d2);\n        }\n      );\n      if (conflitos.length > 0) {\n        if (conflitos.length === 1) {\n          if (conflitos[0].id === this.turmaForm.id) {\n            return false;\n          }\n        }\n\n        this.notifyHorarioSala(horario, sala);\n\n        return true;\n      }\n      return false;\n    },\n    checkHorarioSala1820(horario, sala) {\n      let conflitos = filter(\n        this.$store.state.turma.Turmas.concat(this.$store.state.turmaExterna.Turmas),\n        (t) => {\n          if (this.turmaForm.periodo != t.periodo) {\n            return false;\n          }\n          let h1, h2;\n          if (horario === 1) {\n            h1 =\n              this.turmaForm.Horario1 === t.Horario1 ||\n              5 + (this.turmaForm.Horario1 - 33) * 3 === t.Horario1 ||\n              this.turmaForm.Horario1 - 1 === t.Horario1;\n            h2 =\n              this.turmaForm.Horario1 === t.Horario2 ||\n              5 + (this.turmaForm.Horario1 - 33) * 3 === t.Horario2 ||\n              this.turmaForm.Horario1 - 1 === t.Horario2;\n          } else {\n            h1 =\n              this.turmaForm.Horario2 === t.Horario1 ||\n              5 + (this.turmaForm.Horario2 - 33) * 3 === t.Horario1 ||\n              this.turmaForm.Horario2 - 1 === t.Horario1;\n            h2 =\n              this.turmaForm.Horario2 === t.Horario2 ||\n              5 + (this.turmaForm.Horario2 - 33) * 3 === t.Horario2 ||\n              this.turmaForm.Horario2 - 1 === t.Horario2;\n          }\n          let d1, d2;\n          if (sala === 1) {\n            d1 = !isNull(this.turmaForm.Sala1) && this.turmaForm.Sala1 === t.Sala1;\n            d2 = !isNull(this.turmaForm.Sala1) && this.turmaForm.Sala1 === t.Sala2;\n          } else {\n            d1 = !isNull(this.turmaForm.Sala2) && this.turmaForm.Sala2 === t.Sala1;\n            d2 = !isNull(this.turmaForm.Sala2) && this.turmaForm.Sala2 === t.Sala2;\n          }\n\n          return (h1 && d1) || (h2 && d2);\n        }\n      );\n      if (conflitos.length > 0) {\n        if (conflitos.length === 1) {\n          if (conflitos[0].id === this.turmaForm.id) {\n            return false;\n          }\n        }\n\n        this.notifyHorarioSala(horario, sala);\n\n        return true;\n      }\n      return false;\n    },\n    checkHorarioSala1921(horario, sala) {\n      let conflitos = filter(\n        this.$store.state.turma.Turmas.concat(this.$store.state.turmaExterna.Turmas),\n        (t) => {\n          if (this.turmaForm.periodo != t.periodo) {\n            return false;\n          }\n          let h1, h2;\n          if (horario === 1) {\n            h1 =\n              this.turmaForm.Horario1 === t.Horario1 ||\n              33 + (this.turmaForm.Horario1 - 5) / 3 === t.Horario1;\n            h2 =\n              this.turmaForm.Horario1 === t.Horario2 ||\n              33 + (this.turmaForm.Horario1 - 5) / 3 === t.Horario2;\n          } else {\n            h1 =\n              this.turmaForm.Horario2 === t.Horario1 ||\n              33 + (this.turmaForm.Horario2 - 5) / 3 === t.Horario1;\n            h2 =\n              this.turmaForm.Horario2 === t.Horario2 ||\n              33 + (this.turmaForm.Horario2 - 5) / 3 === t.Horario2;\n          }\n          let d1, d2;\n          if (sala === 1) {\n            d1 = !isNull(this.turmaForm.Sala1) && this.turmaForm.Sala1 === t.Sala1;\n            d2 = !isNull(this.turmaForm.Sala1) && this.turmaForm.Sala1 === t.Sala2;\n          } else {\n            d1 = !isNull(this.turmaForm.Sala2) && this.turmaForm.Sala2 === t.Sala1;\n            d2 = !isNull(this.turmaForm.Sala2) && this.turmaForm.Sala2 === t.Sala2;\n          }\n\n          return (h1 && d1) || (h2 && d2);\n        }\n      );\n      if (conflitos.length > 0) {\n        if (conflitos.length === 1) {\n          if (conflitos[0].id === this.turmaForm.id) {\n            return false;\n          }\n        }\n\n        this.notifyHorarioSala(horario, sala);\n\n        return true;\n      }\n      return false;\n    },\n    checkHorarioSalaGeral(horario, sala) {\n      let conflitos = filter(\n        this.$store.state.turma.Turmas.concat(this.$store.state.turmaExterna.Turmas),\n        (t) => {\n          if (this.turmaForm.periodo != t.periodo) {\n            return false;\n          }\n          let h1, h2;\n          if (horario === 1) {\n            h1 = !isNull(this.turmaForm.Horario1) && this.turmaForm.Horario1 === t.Horario1;\n            h2 = !isNull(this.turmaForm.Horario1) && this.turmaForm.Horario1 === t.Horario2;\n          } else {\n            h1 = !isNull(this.turmaForm.Horario2) && this.turmaForm.Horario2 === t.Horario1;\n            h2 = !isNull(this.turmaForm.Horario2) && this.turmaForm.Horario2 === t.Horario2;\n          }\n          let d1, d2;\n          if (sala === 1) {\n            d1 = !isNull(this.turmaForm.Sala1) && this.turmaForm.Sala1 === t.Sala1;\n            d2 = !isNull(this.turmaForm.Sala1) && this.turmaForm.Sala1 === t.Sala2;\n          } else {\n            d1 = !isNull(this.turmaForm.Sala2) && this.turmaForm.Sala2 === t.Sala1;\n            d2 = !isNull(this.turmaForm.Sala2) && this.turmaForm.Sala2 === t.Sala2;\n          }\n\n          return (h1 && d1) || (h2 && d2);\n        }\n      );\n      if (conflitos.length > 0) {\n        if (conflitos.length === 1) {\n          if (conflitos[0].id === this.turmaForm.id) {\n            return false;\n          }\n        }\n\n        this.notifyHorarioSala(horario, sala);\n\n        return true;\n      }\n      return false;\n    },\n    async handleEditTurma() {\n      try {\n        this.setLoading({ type: \"partial\", value: true });\n\n        await this.editTurma({ data: this.turmaForm, notify: true });\n        this.currentData = cloneDeep(this.turmaForm);\n      } catch (error) {\n        this.turmaForm = cloneDeep(this.turma);\n        this.pushNotification({\n          type: \"error\",\n          title: \"Erro ao atualizar turma!\",\n          text: error.response\n            ? \"A combinação de disciplina, período e turma deve ser única.\"\n            : error.message,\n        });\n      } finally {\n        this.setLoading({ type: \"partial\", value: false });\n      }\n    },\n\n    getPreferenciaDocente(docente) {\n      let p = find(this.PreferenciasDisciplina, [\"Docente\", docente.id]);\n      return p ? p.preferencia : false;\n    },\n  },\n\n  computed: {\n    ...mapGetters([\n      \"DocentesAtivos\",\n      \"AllSalas\",\n      \"AllHorarios\",\n      \"AllCursos\",\n      \"AllDisciplinas\",\n      \"AllTurmas\",\n      \"HorariosEAD\",\n      \"HorariosNoturno\",\n      \"HorariosDiurno\",\n      \"TurmasToDelete\",\n      \"Pedidos\",\n      \"PreferenciasDocentes\",\n    ]),\n\n    toggleToDelete: {\n      set() {\n        this.toggleTurmaToDelete(this.turma);\n      },\n      get() {\n        return this.TurmasToDelete;\n      },\n    },\n\n    HorariosFiltredByTurno() {\n      const cadastroEAD = this.turmaForm.disciplina.ead;\n      if (cadastroEAD === 1) return this.HorariosEAD;\n\n      switch (this.turmaForm.turno1) {\n      case \"EAD\":\n        return this.HorariosEAD;\n      case \"Diurno\":\n        return this.HorariosDiurno;\n      case \"Noturno\":\n        return this.HorariosNoturno;\n      default:\n        return this.AllHorarios;\n      }\n    },\n    isIntegralEAD() {\n      return this.turmaForm.disciplina.ead === 1;\n    },\n    isParcialEAD() {\n      return this.turma.disciplina.ead === 2;\n    },\n    hasMoreThan4Creditos() {\n      return this.turmaForm.disciplina.creditoTotal >= 4;\n    },\n    totalPedidosPeriodizados() {\n      return this.PedidosDaTurma.reduce((sum, pedido) => {\n        return sum + parseInt(pedido.vagasPeriodizadas, 10);\n      }, 0);\n    },\n    totalPedidosNaoPeriodizados() {\n      return this.PedidosDaTurma.reduce((sum, pedido) => {\n        return sum + parseInt(pedido.vagasNaoPeriodizadas, 10);\n      }, 0);\n    },\n    PedidosDaTurma() {\n      const pedidosDaTurma = this.Pedidos[this.turma.id];\n      return pedidosDaTurma ? pedidosDaTurma : [];\n    },\n    PreferenciasDisciplina() {\n      return filter(this.PreferenciasDocentes, {\n        Disciplina: this.turmaForm.Disciplina,\n      });\n    },\n    DocentesByPreferencia() {\n      if (this.orderByPreferencia) {\n        return orderBy(\n          this.DocentesAtivos,\n          (docente) => {\n            let pref = find(this.PreferenciasDisciplina, [\"Docente\", docente.id]);\n            return pref ? pref.preferencia : 0;\n          },\n          \"desc\"\n        );\n      } else {\n        return this.DocentesAtivos;\n      }\n    },\n  },\n\n  watch: {\n    turma: {\n      handler: \"resetTurmaForm\",\n      immediate: true,\n    },\n  },\n};\n\nfunction Notification(options) {\n  this.message = options.message;\n  this.onClick = options.onClick;\n}\n\nNotification.prototype.show = function() {\n  const notificationDiv = document.createElement(\"div\");\n  notificationDiv.textContent = this.message;\n  notificationDiv.style.backgroundColor = \"blue\";\n  notificationDiv.style.color = \"white\";\n  notificationDiv.style.cursor = \"pointer\";\n  notificationDiv.addEventListener(\"click\", this.onClick);\n\n  document.body.appendChild(notificationDiv);\n};\n</script>\n\n<style scoped>\n.highlighted {\n  background-color: #fbfb97 !important;\n}\n.turmarow {\n  font-size: 11px;\n}\n.btn-table {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  border: none;\n  background: none;\n  font-size: 12px;\n  padding: 0;\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TurmaRow.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TurmaRow.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TurmaRow.vue?vue&type=template&id=40bb8a70&scoped=true&\"\nimport script from \"./TurmaRow.vue?vue&type=script&lang=js&\"\nexport * from \"./TurmaRow.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TurmaRow.vue?vue&type=style&index=0&id=40bb8a70&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"40bb8a70\",\n  null\n  \n)\n\nexport default component.exports","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TurmaRow.vue?vue&type=style&index=0&id=40bb8a70&prod&scoped=true&lang=css&\"","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar redefineAll = require('./_redefine-all');\nvar meta = require('./_meta');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar $iterDetect = require('./_iter-detect');\nvar setToStringTag = require('./_set-to-string-tag');\nvar inheritIfRequired = require('./_inherit-if-required');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function (KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY,\n      KEY == 'delete' ? function (a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'has' ? function has(a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'get' ? function get(a) {\n        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }\n        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }\n    );\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new C();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    // weak collections should not contains .clear method\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n"],"sourceRoot":""}