{"version":3,"sources":["webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/modules/es6.string.trim.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/ImportPlano.vue?a951","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///src/pages/gerenciar/Planos/ModalNovoPlano/ImportPlano.vue","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/ImportPlano.vue?e5d6","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/ImportPlano.vue","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js"],"names":["__webpack_require__","module","exports","$trim","this","anObject","get","getIterator","it","iterFn","TypeError","call","render","_vm","_h","$createElement","_c","_self","_m","staticClass","attrs","for","_v","directives","name","rawName","value","expression","modifiers","number","id","on","change","$event","$$selectedVal","Array","prototype","filter","target","options","o","selected","map","val","_value","_n","periodoTurmas","multiple","_l","periodo","key","nome","domProps","_s","ref","type","staticRenderFns","_arrayWithHoles","arr","is_array_default","_iterableToArrayLimit","i","_arr","_d","_e","undefined","_i","get_iterator_default","next","done","push","length","err","_nonIterableRest","_slicedToArray","ImportPlanovue_type_script_lang_js_","props","plano","Object","required","data","methods","objectSpread","vuex_esm","handleImportPlano","_handleImportPlano","asyncToGenerator","regeneratorRuntime","mark","_callee2","inputFile","reader","_this","wrap","_context2","prev","setPartialLoading","$refs","inputFilePlano","files","FileReader","onload","_ref","_callee","event","workbook","firstWorksheet","dataString","dataStringNormalized","turmasDoPlano","_context","xlsx_default","a","read","result","Sheets","SheetNames","stringify_default","utils","sheet_to_json","normalize","replace","JSON","parse","createPlanoImported","$store","dispatch","stop","_x","apply","arguments","readAsBinaryString","_createPlanoImported","_callee3","turmasImported","keys","currentTurma","response","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","turmaFile","newTurma","_turmaFile$keys$horar","_turmaFile$keys$horar2","str1","str2","_turmaFile$keys$docen","_turmaFile$keys$docen2","docente1Str","docente2Str","turmaCreated","_args3","_context3","disciplinaCod","letra","cursoCod","vagas1","vagas2","horarioESala","docentes","create","sent","Plano","Disciplina","findDisciplinaId","split","Horario1","findHorarioId","Horario2","turno1","findTurno","Sala1","findSalaId","Sala2","Docente1","findDocenteId","Docente2","abrupt","isTheSameTurma","createTurma","t0","return","finish","_x2","createPedido","_createPedido","_callee4","turmaId","pedido","_context4","Turma","Curso","vagasNaoPeriodizadas","vagasPeriodizadas","vagasOferecidas","vagasOcupadas","findCursoId","editPedido","console","log","_x3","_x4","_x5","horario1Id","horario2Id","$_","some","HorariosNoturno","cursoCodigo","cursoFounded","find","AllCursos","docenteNomeSiga","docenteFounded","AllDocentes","docente","nomesiga","disciplinaCodigo","disciplinaFounded","AllDisciplinas","horarioString","_horarioString$split","_horarioString$split2","dia","hora","sala","nomeHorario","parseDiaEHora","horarioFounded","AllHorarios","includes","diaNormalized","horaNormalized","trim","substring","toLowerCase","ListaDeTodosHorarios","horarioItem","salaString","_salaString$split","_salaString$split2","salaNormalized","salaFounded","AllSalas","nomeNormalized","turma1","turma2","computed","ModalNovoPlano_ImportPlanovue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","core","$JSON","stringify"],"mappings":"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","file":"js/chunk-5985da21.4fcb8156.js","sourcesContent":["require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n","module.exports = require(\"core-js/library/fn/get-iterator\");","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),_c('div',{staticClass:\"form-row\"},[_c('div',{staticClass:\"form-group col-4\"},[_c('label',{attrs:{\"for\":\"periodoPlano\"}},[_vm._v(\"Período das turmas:\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.periodoTurmas),expression:\"periodoTurmas\",modifiers:{\"number\":true}}],staticClass:\"form-control w-100\",attrs:{\"id\":\"periodoPlano\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.periodoTurmas=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.PeriodosLetivos),function(periodo){return _c('option',{key:periodo.id + periodo.nome,domProps:{\"value\":periodo.id}},[_vm._v(\"\\n          \"+_vm._s(periodo.nome)+\"\\n        \")])}),0)])]),_c('div',{staticClass:\"form-row\"},[_c('div',{staticClass:\"form-group col\"},[_c('input',{ref:\"inputFilePlano\",staticClass:\"w-100 form-control-file\",attrs:{\"type\":\"file\"}})])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"alert alert-secondary\"},[_vm._v(\"\\n    Selecione um arquivo\\n    \"),_c('b',[_vm._v(\".csv\")]),_vm._v(\"\\n    para importar as turmas para o novo plano.\\n  \")])}]\n\nexport { render, staticRenderFns }","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nexport default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","<template>\r\n  <div>\r\n    <p class=\"alert alert-secondary\">\r\n      Selecione um arquivo\r\n      <b>.csv</b>\r\n      para importar as turmas para o novo plano.\r\n    </p>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col-4\">\r\n        <label for=\"periodoPlano\">Período das turmas:</label>\r\n        <select\r\n          id=\"periodoPlano\"\r\n          v-model.number=\"periodoTurmas\"\r\n          class=\"form-control w-100\"\r\n        >\r\n          <option\r\n            v-for=\"periodo in PeriodosLetivos\"\r\n            :key=\"periodo.id + periodo.nome\"\r\n            :value=\"periodo.id\"\r\n          >\r\n            {{ periodo.nome }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <input type=\"file\" ref=\"inputFilePlano\" class=\"w-100 form-control-file\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from \"vuex\";\r\nimport XLSX from \"xlsx\";\r\nimport planoService from \"@/common/services/plano\";\r\nimport { generateEmptyTurma, normalizeText } from \"@/common/utils\";\r\n\r\nexport default {\r\n  name: \"ModalImportPlano\",\r\n  props: { plano: { type: Object, required: true } },\r\n  data() {\r\n    return {\r\n      periodoTurmas: null,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\"createTurma\", \"editPedido\"]),\r\n\r\n    async handleImportPlano() {\r\n      this.setPartialLoading(true);\r\n      const inputFile = this.$refs.inputFilePlano.files[0];\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = async (event) => {\r\n        const workbook = XLSX.read(event.target.result, { type: \"binary\" });\r\n        const firstWorksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n\r\n        const dataString = JSON.stringify(XLSX.utils.sheet_to_json(firstWorksheet));\r\n        const dataStringNormalized = dataString\r\n          .normalize(\"NFD\")\r\n          .replace(/[\\u0300-\\u036f]/g, \"\")\r\n          .replace(/\\s/g, \"\");\r\n\r\n        const turmasDoPlano = JSON.parse(dataStringNormalized);\r\n\r\n        await this.createPlanoImported(turmasDoPlano, this.periodoTurmas);\r\n        await this.$store.dispatch(\"fetchAll\");\r\n\r\n        this.setPartialLoading(false);\r\n      };\r\n\r\n      reader.readAsBinaryString(inputFile);\r\n    },\r\n    async createPlanoImported(turmasImported, periodo = 1) {\r\n      const keys = {\r\n        disciplinaCod: null,\r\n        letra: null,\r\n        cursoCod: null,\r\n        vagas1: null,\r\n        vagas2: null,\r\n        horarioESala: null,\r\n        docentes: null,\r\n      };\r\n      let i = 0;\r\n      for (const key in turmasImported[0]) {\r\n        if (i === 1) keys.disciplinaCod = key;\r\n        else if (i === 2) keys.letra = key;\r\n        else if (i === 3) keys.cursoCod = key;\r\n        else if (i === 5) keys.vagas1 = key;\r\n        else if (i === 6) keys.vagas2 = key;\r\n        else if (i === 7) keys.horarioESala = key;\r\n        else if (i === 8) keys.docentes = key;\r\n        i++;\r\n      }\r\n      let currentTurma = {};\r\n\r\n      const response = await planoService.create(this.plano);\r\n\r\n      for (const turmaFile of turmasImported) {\r\n        const newTurma = generateEmptyTurma();\r\n\r\n        newTurma.Plano = response.Plano.id;\r\n        newTurma.periodo = periodo;\r\n        newTurma.letra = turmaFile[keys.letra] || null;\r\n        newTurma.Disciplina = this.findDisciplinaId(turmaFile[keys.disciplinaCod]);\r\n\r\n        if (turmaFile[keys.horarioESala]) {\r\n          const [str1, str2] = turmaFile[keys.horarioESala].split(\";\");\r\n          //Horarios\r\n          newTurma.Horario1 = this.findHorarioId(str1);\r\n          newTurma.Horario2 = this.findHorarioId(str2);\r\n          newTurma.turno1 = this.findTurno(newTurma.Horario1, newTurma.Horario2);\r\n\r\n          //Salas\r\n          if (newTurma.turno1 !== \"EAD\") {\r\n            newTurma.Sala1 = this.findSalaId(str1);\r\n            newTurma.Sala2 = this.findSalaId(str2);\r\n          }\r\n        }\r\n\r\n        if (turmaFile[keys.docentes]) {\r\n          const [docente1Str, docente2Str] = turmaFile[keys.docentes].split(\";\");\r\n          newTurma.Docente1 = this.findDocenteId(docente1Str);\r\n          newTurma.Docente2 = this.findDocenteId(docente2Str);\r\n        }\r\n\r\n        if (!newTurma.Disciplina || !newTurma.letra || !newTurma.turno1) {\r\n          //Se não achou a Disciplina, letra ou turno1 não cria a turma\r\n          continue;\r\n        }\r\n\r\n        if (this.isTheSameTurma(currentTurma, newTurma)) {\r\n          //Se é igual a turma anterior, então cria apenas a vaga\r\n          // await this.createPedido(turmaFile, keys, currentTurma.id); //Não esta funcionando\r\n          continue;\r\n        }\r\n\r\n        const turmaCreated = await this.createTurma(newTurma); //Cria a turma\r\n        currentTurma = { ...turmaCreated }; //Atualiza currentTurma\r\n\r\n        // await this.createPedido(turmaFile, keys, turmaCreated.id); //Não esta funcionando\r\n      }\r\n    },\r\n    async createPedido(turmaFile, keys, turmaId) {\r\n      const pedido = {\r\n        Turma: null,\r\n        Curso: null,\r\n        vagasNaoPeriodizadas: 0,\r\n        vagasPeriodizadas: 0,\r\n        vagasOferecidas: 0,\r\n        vagasOcupadas: 0,\r\n      };\r\n      pedido.Turma = turmaId;\r\n      pedido.Curso = this.findCursoId(turmaFile[keys.cursoCod]);\r\n      pedido.vagasOferecidas = turmaFile[keys.vagas1];\r\n      pedido.vagasOcupadas = turmaFile[keys.vagas2];\r\n\r\n      if (pedido.Curso) {\r\n        await this.editPedido(pedido);\r\n      } else {\r\n        console.log(\"Curso não econtrado: \" + turmaFile[keys.cursoCod]);\r\n      }\r\n    },\r\n\r\n    findTurno(horario1Id, horario2Id) {\r\n      if (!horario1Id && !horario2Id) return null;\r\n      else if (horario1Id == 31) return \"EAD\";\r\n      else if (\r\n        this.$_.some(this.HorariosNoturno, [\"id\", horario1Id]) ||\r\n        this.$_.some(this.HorariosNoturno, [\"id\", horario2Id])\r\n      )\r\n        return \"Noturno\";\r\n      else return \"Diurno\";\r\n    },\r\n    findCursoId(cursoCodigo) {\r\n      const cursoFounded = this.$_.find(this.AllCursos, [\"codigo\", cursoCodigo]);\r\n      return cursoFounded ? cursoFounded.id : null;\r\n    },\r\n    findDocenteId(docenteNomeSiga) {\r\n      if (!docenteNomeSiga.length) return null;\r\n\r\n      const docenteFounded = this.$_.find(\r\n        this.AllDocentes,\r\n        (docente) => normalizeText(docente.nomesiga) === normalizeText(docenteNomeSiga)\r\n      );\r\n      return docenteFounded ? docenteFounded.id : null;\r\n    },\r\n    findDisciplinaId(disciplinaCodigo) {\r\n      const disciplinaFounded = this.$_.find(this.AllDisciplinas, [\r\n        \"codigo\",\r\n        disciplinaCodigo,\r\n      ]);\r\n\r\n      return disciplinaFounded ? disciplinaFounded.id : null;\r\n    },\r\n    findHorarioId(horarioString) {\r\n      if (!horarioString) return null;\r\n\r\n      const [dia, hora, sala] = horarioString.split(\",\");\r\n      const nomeHorario = this.parseDiaEHora(dia, hora);\r\n\r\n      if (nomeHorario) {\r\n        const horarioFounded = this.$_.find(this.AllHorarios, [\"horario\", nomeHorario]);\r\n\r\n        return horarioFounded ? horarioFounded.id : null;\r\n      }\r\n\r\n      if (normalizeText(sala).includes(normalizeText(\"HORÁRIO EAD\"))) {\r\n        console.log(\"EAD sala\", sala);\r\n        return 31; //Id EAD\r\n      }\r\n\r\n      return null;\r\n    },\r\n    parseDiaEHora(dia, hora) {\r\n      if (!dia || !hora) return null;\r\n\r\n      let diaNormalized = null;\r\n      let horaNormalized = null;\r\n      switch (\r\n        dia\r\n          .trim()\r\n          .substring(0, 3)\r\n          .toLowerCase()\r\n      ) {\r\n        case \"seg\":\r\n          diaNormalized = \"2a\";\r\n          break;\r\n        case \"ter\":\r\n          diaNormalized = \"3a\";\r\n          break;\r\n        case \"qua\":\r\n          diaNormalized = \"4a\";\r\n          break;\r\n        case \"qui\":\r\n          diaNormalized = \"5a\";\r\n          break;\r\n        case \"sex\":\r\n          diaNormalized = \"6a\";\r\n          break;\r\n        case \"sab\":\r\n          return \"EAD\";\r\n      }\r\n\r\n      const horarioFounded =\r\n        this.$_.find(this.ListaDeTodosHorarios, (horarioItem) =>\r\n          horarioItem.nome.includes(hora.substring(0, 2) + \"-\")\r\n        ) || {};\r\n\r\n      horaNormalized = horarioFounded.nome;\r\n\r\n      if (diaNormalized && horaNormalized) {\r\n        return diaNormalized + \" \" + horaNormalized;\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    findSalaId(salaString) {\r\n      if (!salaString) return null;\r\n\r\n      const [, , sala] = salaString.split(\",\");\r\n      const salaNormalized = normalizeText(sala);\r\n\r\n      const salaFounded = this.$_.find(this.AllSalas, (sala) => {\r\n        const nomeNormalized = normalizeText(sala.nome);\r\n        return salaNormalized.includes(nomeNormalized);\r\n      });\r\n\r\n      return salaFounded ? salaFounded.id : null;\r\n    },\r\n    isTheSameTurma(turma1, turma2) {\r\n      return (\r\n        turma1.letra === turma2.letra &&\r\n        turma1.Disciplina === turma2.Disciplina &&\r\n        turma1.turno1 === turma2.turno1 &&\r\n        turma1.Horario1 === turma2.Horario1 &&\r\n        turma1.Horario2 === turma2.Horario2\r\n      );\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\r\n      \"AllHorarios\",\r\n      \"HorariosNoturno\",\r\n      \"AllDisciplinas\",\r\n      \"AllCursos\",\r\n      \"ListaDeTodosHorarios\",\r\n      \"AllTurmas\",\r\n      \"AllSalas\",\r\n      \"AllDocentes\",\r\n      \"PeriodosLetivos\",\r\n    ]),\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImportPlano.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImportPlano.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ImportPlano.vue?vue&type=template&id=1275c2e8&\"\nimport script from \"./ImportPlano.vue?vue&type=script&lang=js&\"\nexport * from \"./ImportPlano.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","module.exports = require(\"core-js/library/fn/json/stringify\");"],"sourceRoot":""}