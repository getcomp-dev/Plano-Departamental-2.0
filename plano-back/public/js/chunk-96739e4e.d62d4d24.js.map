{"version":3,"sources":["webpack:///./src/pages/validacoes/lancamentoSIGA/index.vue?5e1c","webpack:///src/pages/validacoes/lancamentoSIGA/index.vue","webpack:///./src/pages/validacoes/lancamentoSIGA/index.vue?116e","webpack:///./src/pages/validacoes/lancamentoSIGA/index.vue","webpack:///./src/common/utils/factories/makeEmptyCurso.js","webpack:///./src/common/utils/factories/makeEmptyDisciplina.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","on","$event","$refs","modalAjuda","toggle","scopedSlots","_u","key","fn","ordenacaoConflitos","_v","proxy","_l","turmaConflito","id","_s","disciplina","codigo","nome","letra","conflito","label","curso","siga","sistema","turmasConflitosOrdered","length","_e","directives","name","rawName","value","expression","modifiers","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","val","_value","_n","periodoForm","multiple","periodo","domProps","ref","handleCompareTurmas","clearCardForm","staticRenderFns","components","mixins","data","turmasConflitos","order","type","methods","inputFileForm","normalizeTurmasEPedidosSIGA","turmasNormalized","searchConflitos","turmasSistema","forEach","turmaSIGAFound","turmaConflitos","conflitos","push","turmasConflitosFound","pedidosOferecidos","pedidoSistemaFound","totalVagasSistema","pedidoSIGA","totalVagas","pedidosDaTurmaSistema","turmasAreEqual","docentesAreEqual","turma1","Docente1","turma2","Docente2","horariosAreEqual","computed","disciplinasGradeDCC1Periodo","disciplinasGradeFiltered","alredyExist","disciplinasGradeUnique","component","makeEmptyCurso","overwriteValues","semestreInicial","posicao","turno","alunosEntrada","alunosEntrada2","makeEmptyDisciplina","Perfil","cargaTeorica","cargaPratica","laboratorio","ead","departamento"],"mappings":"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","file":"js/chunk-96739e4e.d62d4d24.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main-component row\"},[_c('portal',{attrs:{\"to\":\"page-header\"}},[_c('BaseButton',{attrs:{\"template\":\"ajuda\"},on:{\"click\":function($event){return _vm.$refs.modalAjuda.toggle()}}})],1),_c('div',{staticClass:\"page-content\"},[_c('div',{staticClass:\"table-div\"},[_c('BaseTable',{scopedSlots:_vm._u([{key:\"thead\",fn:function(){return [_c('v-th-ordination',{attrs:{\"currentOrder\":_vm.ordenacaoConflitos,\"orderToCheck\":\"disciplina.codigo\",\"width\":\"80\",\"align\":\"start\",\"title\":\"Código da Disciplina\"}},[_vm._v(\"\\n            Código\\n          \")]),_c('v-th-ordination',{attrs:{\"currentOrder\":_vm.ordenacaoConflitos,\"orderToCheck\":\"disciplina.nome\",\"width\":\"300\",\"align\":\"start\"}},[_vm._v(\"\\n            Disciplina\\n          \")]),_c('v-th',{attrs:{\"width\":\"30\",\"title\":\"Turma\"}},[_vm._v(\"T.\")]),_c('v-th',{attrs:{\"width\":\"55\",\"title\":\"Código do Curso\"}},[_vm._v(\"Curso\")]),_c('v-th',{attrs:{\"width\":\"180\",\"align\":\"start\",\"title\":\"Valor do pedido no SIGA\"}},[_vm._v(\"Conflito\")]),_c('v-th',{attrs:{\"width\":\"120\",\"paddingX\":\"0\",\"title\":\"Valor do pedido no SIGA\"}},[_vm._v(\"Valor SIGA\")]),_c('v-th',{attrs:{\"width\":\"120\",\"paddingX\":\"0\",\"title\":\"Valor do pedido no Sistema\"}},[_vm._v(\"Valor Sistema\")])]},proxy:true},{key:\"tbody\",fn:function(){return [_vm._l((_vm.turmasConflitosOrdered),function(turmaConflito){return [_c('tr',{key:turmaConflito.id,staticClass:\"bg-custom\"},[_c('v-td',{attrs:{\"width\":\"80\",\"align\":\"start\"}},[_vm._v(_vm._s(turmaConflito.disciplina.codigo))]),_c('v-td',{attrs:{\"width\":\"300\",\"align\":\"start\"}},[_vm._v(_vm._s(turmaConflito.disciplina.nome))]),_c('v-td',{attrs:{\"width\":\"30\"}},[_vm._v(_vm._s(turmaConflito.letra))]),_c('v-td',{attrs:{\"width\":\"55\"}}),_c('v-td',{attrs:{\"width\":\"180\"}}),_c('v-td',{attrs:{\"width\":\"120\"}}),_c('v-td',{attrs:{\"width\":\"120\"}})],1),_vm._l((turmaConflito.conflitos),function(conflito){return _c('tr',{key:turmaConflito.id + conflito.label + conflito.curso.id},[_c('v-td',{attrs:{\"width\":\"80\"}}),_c('v-td',{attrs:{\"width\":\"300\"}}),_c('v-td',{attrs:{\"width\":\"30\"}}),_c('v-td',{attrs:{\"width\":\"55\",\"title\":conflito.curso.nome}},[_vm._v(\"\\n                \"+_vm._s(conflito.curso.codigo)+\"\\n              \")]),_c('v-td',{attrs:{\"width\":\"180\",\"align\":\"start\"}},[_vm._v(_vm._s(conflito.label))]),_c('v-td',{attrs:{\"width\":\"120\",\"paddingX\":\"0\",\"title\":conflito.siga}},[_vm._v(_vm._s(conflito.siga))]),_c('v-td',{attrs:{\"width\":\"120\",\"paddingX\":\"0\",\"title\":conflito.sistema}},[_vm._v(\"\\n                \"+_vm._s(conflito.sistema)+\"\\n              \")])],1)})]}),(!_vm.turmasConflitosOrdered.length)?_c('tr',[_c('v-td',{attrs:{\"width\":\"870\"}},[_c('b',[_vm._v(\"Nenhum conflito encontrado.\")]),_vm._v(\"\\n              Certifiqui-se de selecionar um arquivo correspondente com o plano atual e o periodo\\n              selecionado.\\n            \")])],1):_vm._e()]},proxy:true}])})],1),_c('Card',{attrs:{\"title\":'Validar pedidos'},scopedSlots:_vm._u([{key:\"body\",fn:function(){return [_c('div',{staticClass:\"row mb-2 mx-0\"},[_c('div',{staticClass:\"form-group col m-0 px-0\"},[_c('label',{staticClass:\"col-form-label\",attrs:{\"required\":\"\",\"for\":\"periodoPlano\"}},[_vm._v(\"Período\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.periodoForm),expression:\"periodoForm\",modifiers:{\"number\":true}}],staticClass:\"input-lg form-control form-control-sm\",attrs:{\"id\":\"periodoPlano\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.periodoForm=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.PeriodosLetivos),function(periodo){return _c('option',{key:periodo.id + periodo.nome,domProps:{\"value\":periodo.id}},[_vm._v(\"\\n                \"+_vm._s(periodo.nome)+\"\\n              \")])}),0)])]),_c('div',{staticClass:\"row mb-2 mx-0\"},[_c('div',{staticClass:\"form-group col m-0 px-0\"},[_c('label',{staticClass:\"col-form-label\",attrs:{\"required\":\"\",\"for\":\"turmaFile\"}},[_vm._v(\"\\n              Arquivo .csv do plano SIGA\\n            \")]),_c('input',{ref:\"inputFileForm\",staticClass:\"form-control-file mt-1\",attrs:{\"type\":\"file\",\"id\":\"turmaFile\",\"accept\":\".csv\"}})])])]},proxy:true},{key:\"footer\",fn:function(){return [_c('BaseButton',{attrs:{\"template\":\"Salvar\",\"title\":'Iniciar'},on:{\"click\":_vm.handleCompareTurmas}}),_c('BaseButton',{attrs:{\"template\":\"cancelar\"},on:{\"click\":_vm.clearCardForm}})]},proxy:true}])})],1),_c('ModalAjuda',{ref:\"modalAjuda\"},[_c('li',{staticClass:\"list-group-item\"},[_c('b',[_vm._v(\"Limpar:\")]),_vm._v(\"\\n      No cartão à direita, clique em Cancelar\\n      \"),_c('font-awesome-icon',{staticClass:\"icon-gray\",attrs:{\"icon\":['fas', 'times']}}),_vm._v(\"\\n      , para limpar as informações.\\n    \")],1),_c('li',{staticClass:\"list-group-item\"},[_c('b',[_vm._v(\"Ordenar:\")]),_vm._v(\"\\n      Clique no cabeçalho da tabela, na coluna desejada, para alterar a ordenação das informações.\\n    \")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"main-component row\">\r\n    <portal to=\"page-header\">\r\n      <BaseButton template=\"ajuda\" @click=\"$refs.modalAjuda.toggle()\" />\r\n    </portal>\r\n\r\n    <div class=\"page-content\">\r\n      <div class=\"table-div\">\r\n        <BaseTable>\r\n          <template #thead>\r\n            <v-th-ordination\r\n              :currentOrder=\"ordenacaoConflitos\"\r\n              orderToCheck=\"disciplina.codigo\"\r\n              width=\"80\"\r\n              align=\"start\"\r\n              title=\"Código da Disciplina\"\r\n            >\r\n              Código\r\n            </v-th-ordination>\r\n            <v-th-ordination\r\n              :currentOrder=\"ordenacaoConflitos\"\r\n              orderToCheck=\"disciplina.nome\"\r\n              width=\"300\"\r\n              align=\"start\"\r\n            >\r\n              Disciplina\r\n            </v-th-ordination>\r\n            <v-th width=\"30\" title=\"Turma\">T.</v-th>\r\n            <v-th width=\"55\" title=\"Código do Curso\">Curso</v-th>\r\n            <v-th width=\"180\" align=\"start\" title=\"Valor do pedido no SIGA\">Conflito</v-th>\r\n            <v-th width=\"120\" paddingX=\"0\" title=\"Valor do pedido no SIGA\">Valor SIGA</v-th>\r\n            <v-th width=\"120\" paddingX=\"0\" title=\"Valor do pedido no Sistema\">Valor Sistema</v-th>\r\n          </template>\r\n\r\n          <template #tbody>\r\n            <template v-for=\"turmaConflito in turmasConflitosOrdered\">\r\n              <tr :key=\"turmaConflito.id\" class=\"bg-custom\">\r\n                <v-td width=\"80\" align=\"start\">{{ turmaConflito.disciplina.codigo }}</v-td>\r\n                <v-td width=\"300\" align=\"start\">{{ turmaConflito.disciplina.nome }}</v-td>\r\n                <v-td width=\"30\">{{ turmaConflito.letra }}</v-td>\r\n                <v-td width=\"55\" />\r\n                <v-td width=\"180\" />\r\n                <v-td width=\"120\" />\r\n                <v-td width=\"120\" />\r\n              </tr>\r\n\r\n              <tr\r\n                v-for=\"conflito in turmaConflito.conflitos\"\r\n                :key=\"turmaConflito.id + conflito.label + conflito.curso.id\"\r\n              >\r\n                <v-td width=\"80\" />\r\n                <v-td width=\"300\" />\r\n                <v-td width=\"30\" />\r\n                <v-td width=\"55\" :title=\"conflito.curso.nome\">\r\n                  {{ conflito.curso.codigo }}\r\n                </v-td>\r\n                <v-td width=\"180\" align=\"start\">{{ conflito.label }}</v-td>\r\n                <v-td width=\"120\" paddingX=\"0\" :title=\"conflito.siga\">{{ conflito.siga }}</v-td>\r\n                <v-td width=\"120\" paddingX=\"0\" :title=\"conflito.sistema\">\r\n                  {{ conflito.sistema }}\r\n                </v-td>\r\n              </tr>\r\n            </template>\r\n\r\n            <tr v-if=\"!turmasConflitosOrdered.length\">\r\n              <v-td width=\"870\">\r\n                <b>Nenhum conflito encontrado.</b>\r\n                Certifiqui-se de selecionar um arquivo correspondente com o plano atual e o periodo\r\n                selecionado.\r\n              </v-td>\r\n            </tr>\r\n          </template>\r\n        </BaseTable>\r\n      </div>\r\n\r\n      <Card :title=\"'Validar pedidos'\">\r\n        <template #body>\r\n          <div class=\"row mb-2 mx-0\">\r\n            <div class=\"form-group col m-0 px-0\">\r\n              <label required for=\"periodoPlano\" class=\"col-form-label\">Período</label>\r\n              <select\r\n                id=\"periodoPlano\"\r\n                v-model.number=\"periodoForm\"\r\n                class=\"input-lg form-control form-control-sm\"\r\n              >\r\n                <option\r\n                  v-for=\"periodo in PeriodosLetivos\"\r\n                  :key=\"periodo.id + periodo.nome\"\r\n                  :value=\"periodo.id\"\r\n                >\r\n                  {{ periodo.nome }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row mb-2 mx-0\">\r\n            <div class=\"form-group col m-0 px-0\">\r\n              <label required for=\"turmaFile\" class=\"col-form-label\">\r\n                Arquivo .csv do plano SIGA\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"turmaFile\"\r\n                ref=\"inputFileForm\"\r\n                class=\"form-control-file mt-1\"\r\n                accept=\".csv\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </template>\r\n\r\n        <template #footer>\r\n          <BaseButton template=\"Salvar\" :title=\"'Iniciar'\" @click=\"handleCompareTurmas\" />\r\n          <BaseButton template=\"cancelar\" @click=\"clearCardForm\" />\r\n        </template>\r\n      </Card>\r\n    </div>\r\n\r\n    <ModalAjuda ref=\"modalAjuda\">\r\n      <li class=\"list-group-item\">\r\n        <b>Limpar:</b>\r\n        No cartão à direita, clique em Cancelar\r\n        <font-awesome-icon :icon=\"['fas', 'times']\" class=\"icon-gray\" />\r\n        , para limpar as informações.\r\n      </li>\r\n      <li class=\"list-group-item\">\r\n        <b>Ordenar:</b>\r\n        Clique no cabeçalho da tabela, na coluna desejada, para alterar a ordenação das informações.\r\n      </li>\r\n    </ModalAjuda>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport { some, orderBy } from \"lodash-es\";\r\nimport { parseCSVFileToArray } from \"@utils\";\r\nimport { makeEmptyCurso } from \"@utils/factories\";\r\nimport { generateDocentesText, generateHorariosText } from \"@mixins\";\r\nimport { Card } from \"@/components/ui\";\r\nimport { ModalAjuda } from \"@/components/modals\";\r\nimport {\r\n  parseTurmaSIGAToTurma,\r\n  parseTurmaSIGAToPedido,\r\n  getKeysTurmaSIGA,\r\n  validateTurmasSIGA,\r\n} from \"@/common/utils/turmasSIGA\";\r\n\r\nexport default {\r\n  name: \"ValidaçãoLançamentoSIGA\",\r\n  components: { Card, ModalAjuda },\r\n  mixins: [generateDocentesText, generateHorariosText],\r\n  data() {\r\n    return {\r\n      periodoForm: 1,\r\n      turmasConflitos: [],\r\n      ordenacaoConflitos: {\r\n        order: \"disciplina.codigo\",\r\n        type: \"asc\",\r\n      },\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    clearCardForm() {\r\n      this.periodoForm = 1;\r\n      this.$refs.inputFileForm.value = \"\";\r\n    },\r\n    async handleCompareTurmas() {\r\n      if (!this.periodoForm) {\r\n        this.pushNotification({\r\n          type: \"error\",\r\n          text: \"Nenhum período selecionado\",\r\n        });\r\n        return;\r\n      }\r\n      const [fileTurmas] = this.$refs.inputFileForm.files;\r\n      if (!fileTurmas) {\r\n        this.pushNotification({\r\n          type: \"error\",\r\n          text: \"Nenhum arquivo selecionado\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        this.setLoading({ type: \"partial\", value: true });\r\n        const turmasFile = await parseCSVFileToArray(fileTurmas);\r\n        validateTurmasSIGA(turmasFile);\r\n        const turmasSIGANormalized = this.normalizeTurmasEPedidosSIGA(turmasFile, this.periodoForm);\r\n        this.searchConflitos(turmasSIGANormalized, this.periodoForm);\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.pushNotification({\r\n          type: \"error\",\r\n        });\r\n      } finally {\r\n        this.setLoading({ type: \"partial\", value: false });\r\n      }\r\n    },\r\n    normalizeTurmasEPedidosSIGA(turmasSIGA, periodo) {\r\n      const keysTurmaSIGA = getKeysTurmaSIGA(turmasSIGA[0]);\r\n      const turmasNormalized = [];\r\n      let currentTurma = {};\r\n\r\n      for (const turmaSIGA of turmasSIGA) {\r\n        const newTurma = parseTurmaSIGAToTurma(turmaSIGA, keysTurmaSIGA, null, periodo);\r\n        if (!newTurma) continue;\r\n        newTurma.pedidosOferecidos = []; //Array com todos pedidos da turmas\r\n\r\n        const pedidoOferecido = parseTurmaSIGAToPedido(turmaSIGA, keysTurmaSIGA, null);\r\n        if (pedidoOferecido) {\r\n          const { vagasOferecidas, vagasOcupadas } = pedidoOferecido;\r\n          pedidoOferecido.totalVagas = vagasOferecidas + vagasOcupadas;\r\n        }\r\n\r\n        // Se turma igual ao currentTurma apenas adiciona o pedido na turma anterior\r\n        if (this.turmasAreEqual(currentTurma, newTurma)) {\r\n          if (pedidoOferecido) {\r\n            const index = turmasNormalized[turmasNormalized.length - 1].pedidosOferecidos.findIndex(\r\n              (pedido) => pedido.Curso === pedidoOferecido.Curso\r\n            );\r\n            if (index === -1) {\r\n              turmasNormalized[turmasNormalized.length - 1].pedidosOferecidos.push(pedidoOferecido);\r\n            }\r\n          }\r\n        } else {\r\n          // Se é uma turma nova então adiciona a turma e o pedido\r\n          if (pedidoOferecido) newTurma.pedidosOferecidos.push(pedidoOferecido);\r\n          turmasNormalized.push(newTurma);\r\n          currentTurma = { ...newTurma };\r\n        }\r\n      }\r\n\r\n      return turmasNormalized;\r\n    },\r\n    searchConflitos(turmasSIGA, periodo) {\r\n      this.turmasConflitos = [];\r\n      const turmasConflitosFound = [];\r\n      //Turmas do periodo selecionado, exclui perfil MAC que existe no arquivo SIGA\r\n      const turmasSistema = this.AllTurmas.filter(\r\n        (turma) => turma.periodo === periodo && turma.disciplina.Perfil != 15\r\n      );\r\n\r\n      turmasSistema.forEach((turmaSistema) => {\r\n        const turmaSIGAFound = turmasSIGA.find(\r\n          (turmaFile) =>\r\n            turmaSistema.Disciplina == turmaFile.Disciplina && turmaSistema.letra == turmaFile.letra\r\n        );\r\n        const turmaConflitos = { ...turmaSistema, conflitos: [] };\r\n\r\n        if (!turmaSIGAFound) {\r\n          turmaConflitos.conflitos.push({\r\n            label: \"Turma existe apenas no sistema\",\r\n            siga: \"-\",\r\n            sistema: \"-\",\r\n            curso: makeEmptyCurso({ codigo: \"-\" }),\r\n          });\r\n          turmasConflitosFound.push(turmaConflitos);\r\n          return;\r\n        }\r\n        // Conflitos de turmas\r\n        if (!this.docentesAreEqual(turmaSistema, turmaSIGAFound)) {\r\n          turmaConflitos.conflitos.push({\r\n            label: \"Docentes diferentes\",\r\n            siga: this.generateDocentesText(turmaSIGAFound.Docente1, turmaSIGAFound.Docente2),\r\n            sistema: this.generateDocentesText(turmaSistema.Docente1, turmaSistema.Docente2),\r\n            curso: makeEmptyCurso({ codigo: \"-\" }),\r\n          });\r\n        }\r\n        if (!this.horariosAreEqual(turmaSistema, turmaSIGAFound)) {\r\n          turmaConflitos.conflitos.push({\r\n            label: \"Horarios diferentes\",\r\n            siga: this.generateHorariosText(turmaSIGAFound.Horario1, turmaSIGAFound.Horario2),\r\n            sistema: this.generateHorariosText(turmaSistema.Horario1, turmaSistema.Horario2),\r\n            curso: makeEmptyCurso({ codigo: \"-\" }),\r\n          });\r\n        }\r\n        // Conflitos de pedidos - exclui as disciplinas que são do 1 periodo de alguma gradeDCC\r\n        if (!some(this.disciplinasGradeDCC1Periodo, [\"Disciplina\", turmaSistema.Disciplina])) {\r\n          const pedidosDaTurmaSistema = this.Pedidos[turmaSistema.id] || [];\r\n\r\n          turmaSIGAFound.pedidosOferecidos.forEach((pedidoSIGA) => {\r\n            const pedidoSistemaFound = pedidosDaTurmaSistema.find(\r\n              (pedidoSis) => pedidoSis.Curso == pedidoSIGA.Curso\r\n            );\r\n\r\n            if (!pedidoSistemaFound) {\r\n              turmaConflitos.conflitos.push({\r\n                label: \"Pedido não existe no sistema\",\r\n                siga: pedidoSIGA.totalVagas,\r\n                sistema: \"-\",\r\n                curso: this.AllCursos.find((curso) => curso.id === pedidoSIGA.Curso),\r\n              });\r\n              return;\r\n            }\r\n\r\n            const totalVagasSistema =\r\n              pedidoSistemaFound.vagasPeriodizadas + pedidoSistemaFound.vagasNaoPeriodizadas;\r\n\r\n            if (totalVagasSistema != pedidoSIGA.totalVagas) {\r\n              turmaConflitos.conflitos.push({\r\n                label: \"Pedido com valores diferentes\",\r\n                siga: pedidoSIGA.totalVagas,\r\n                sistema: totalVagasSistema == 0 ? \"-\" : totalVagasSistema,\r\n                curso: this.AllCursos.find((curso) => curso.id === pedidoSistemaFound.Curso),\r\n              });\r\n              return;\r\n            }\r\n          });\r\n\r\n          pedidosDaTurmaSistema\r\n            .filter((pedido) => pedido.vagasPeriodizadas != 0 || pedido.vagasNaoPeriodizadas != 0)\r\n            .forEach((pedidoSistema) => {\r\n              const pedidoSIGA = turmaSIGAFound.pedidosOferecidos.find(\r\n                (pedidoArq) => pedidoSistema.Curso == pedidoArq.Curso\r\n              );\r\n\r\n              if (!pedidoSIGA) {\r\n                turmaConflitos.conflitos.push({\r\n                  label: \"Pedido não existe no SIGA\",\r\n                  siga: \"-\",\r\n                  sistema: pedidoSistema.vagasPeriodizadas + pedidoSistema.vagasNaoPeriodizadas,\r\n                  curso: this.AllCursos.find((curso) => curso.id === pedidoSistema.Curso),\r\n                });\r\n                return;\r\n              }\r\n            });\r\n        }\r\n\r\n        if (turmaConflitos.conflitos.length) turmasConflitosFound.push(turmaConflitos);\r\n      });\r\n\r\n      this.turmasConflitos = turmasConflitosFound;\r\n    },\r\n    turmasAreEqual(turma1, turma2) {\r\n      return (\r\n        turma1.letra === turma2.letra &&\r\n        turma1.Disciplina === turma2.Disciplina &&\r\n        turma1.Horario1 === turma2.Horario1 &&\r\n        turma1.Horario2 === turma2.Horario2\r\n      );\r\n    },\r\n    docentesAreEqual(turma1, turma2) {\r\n      if (turma1.Docente1 == turma2.Docente1 && turma1.Docente2 == turma2.Docente2) return true;\r\n      if (turma1.Docente1 == turma2.Docente2 && turma1.Docente2 == turma2.Docente1) return true;\r\n      return false;\r\n    },\r\n    horariosAreEqual(turma1, turma2) {\r\n      if (\r\n        (turma1.Horario1 == turma2.Horario1 && turma1.Horario2 == turma2.Horario2) ||\r\n        (turma1.Horario1 == turma2.Horario2 && turma1.Horario2 == turma2.Horario1)\r\n      )\r\n        return true;\r\n      if (\r\n        turma1.Horario1 == null &&\r\n        (turma1.Horario2 == turma2.Horario1 || turma1.Horario2 == turma2.Horario2)\r\n      )\r\n        return true;\r\n      if (\r\n        turma2.Horario1 == null &&\r\n        (turma2.Horario2 == turma1.Horario1 || turma2.Horario2 == turma1.Horario2)\r\n      )\r\n        return true;\r\n      if (\r\n        turma1.Horario2 == null &&\r\n        (turma1.Horario1 == turma2.Horario1 || turma1.Horario1 == turma2.Horario2)\r\n      )\r\n        return true;\r\n      if (\r\n        turma2.Horario2 == null &&\r\n        (turma2.Horario1 == turma1.Horario1 || turma2.Horario1 == turma1.Horario2)\r\n      )\r\n        return true;\r\n\r\n      return false;\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\"AllCursos\", \"AllTurmas\", \"PeriodosLetivos\", \"Pedidos\", \"DisciplinasGrades\"]),\r\n\r\n    turmasConflitosOrdered() {\r\n      const { order, type } = this.ordenacaoConflitos;\r\n      return orderBy(this.turmasConflitos, order, type);\r\n    },\r\n    disciplinasGradeDCC1Periodo() {\r\n      const disciplinasGradeFiltered = this.DisciplinasGrades.filter(\r\n        (disciplinaGrade) => disciplinaGrade.periodo === 1\r\n      );\r\n\r\n      const disciplinasGradeUnique = [];\r\n      disciplinasGradeFiltered.forEach((disciplinaGrade) => {\r\n        const alredyExist = disciplinasGradeUnique.find(\r\n          (disciplinaGrade2) => disciplinaGrade2.Disciplina === disciplinaGrade.Disciplina\r\n        );\r\n\r\n        if (!alredyExist) disciplinasGradeUnique.push({ ...disciplinaGrade });\r\n      });\r\n\r\n      return disciplinasGradeUnique;\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=407ad8e8&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","function makeEmptyCurso(overwriteValues = {}) {\r\n  const {\r\n    id = null,\r\n    semestreInicial = null,\r\n    posicao = null,\r\n    nome = \"\",\r\n    codigo = \"\",\r\n    turno = \"\",\r\n    alunosEntrada = 0,\r\n    alunosEntrada2 = 0,\r\n  } = overwriteValues;\r\n\r\n  return {\r\n    id,\r\n    semestreInicial,\r\n    posicao,\r\n    nome,\r\n    codigo,\r\n    turno,\r\n    alunosEntrada,\r\n    alunosEntrada2,\r\n  };\r\n}\r\nexport default makeEmptyCurso;\r\n","function makeEmptyDisciplina(overwriteValues = {}) {\r\n  const {\r\n    id = null,\r\n    nome = \"\",\r\n    codigo = \"\",\r\n    Perfil = \"\",\r\n    cargaTeorica = 0,\r\n    cargaPratica = 0,\r\n    laboratorio = 0,\r\n    ead = 0,\r\n    departamento = 1,\r\n  } = overwriteValues;\r\n\r\n  return {\r\n    id,\r\n    nome,\r\n    codigo,\r\n    Perfil,\r\n    cargaTeorica,\r\n    cargaPratica,\r\n    laboratorio,\r\n    ead,\r\n    departamento,\r\n  };\r\n}\r\nexport default makeEmptyDisciplina;\r\n"],"sourceRoot":""}