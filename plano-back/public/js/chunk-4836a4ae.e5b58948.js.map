{"version":3,"sources":["webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/modules/es6.string.trim.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./src/pages/gerenciar/Planos/ModalImportPlano.vue?36f0","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///src/pages/gerenciar/Planos/ModalImportPlano.vue","webpack:///./src/pages/gerenciar/Planos/ModalImportPlano.vue?4c1a","webpack:///./src/pages/gerenciar/Planos/ModalImportPlano.vue"],"names":["__webpack_require__","module","exports","$trim","this","anObject","get","getIterator","it","iterFn","TypeError","call","core","$JSON","JSON","stringify","apply","arguments","render","_vm","_h","$createElement","_c","_self","ref","attrs","title","position","hasFooter","scopedSlots","_u","key","fn","type","proxy","staticClass","color","text","on","click","handleImportPlano","staticRenderFns","_arrayWithHoles","arr","is_array_default","_iterableToArrayLimit","i","_arr","_n","_d","_e","undefined","_s","_i","get_iterator_default","next","done","push","value","length","err","_nonIterableRest","_slicedToArray","ModalImportPlanovue_type_script_lang_js_","name","mounted","console","log","AllTurmas","methods","Object","objectSpread","vuex_esm","open","$refs","baseModal","toggle","close","_handleImportPlano","asyncToGenerator","regeneratorRuntime","mark","_callee2","inputFile","reader","_this","wrap","_context2","prev","pushNotification","abrupt","setPartialLoading","inputFilePlano","files","FileReader","onload","_ref","_callee","event","workbook","firstWorksheet","dataString","dataStringNormalized","turmasDoPlano","_inputFile$name$split","_inputFile$name$split2","periodoStr","periodoDoPlano","_context","xlsx_default","a","read","target","result","Sheets","SheetNames","stringify_default","utils","sheet_to_json","normalize","replace","parse","split","parse_int_default","createPlanoImported","slice","$store","dispatch","stop","_x","readAsBinaryString","_createPlanoImported","_callee3","turmasImported","periodo","keys","currentTurma","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","turmaFile","newTurma","_turmaFile$keys$horar","_turmaFile$keys$horar2","strHorario1","strHorario2","turmaCreated","_args3","_context3","disciplinaCod","letra","cursoCod","vagas1","vagas2","horarios","Disciplina","findDisciplinaId","Horario1","findHorarioId","Horario2","turno1","findTurno","isTheSameTurma","createPedido","id","createTurma","sent","t0","return","finish","_x2","_createPedido","_callee4","turmaId","pedido","_context4","Turma","Curso","vagasNaoPeriodizadas","vagasPeriodizadas","findCursoId","editPedido","_x3","_x4","_x5","horario1Id","horario2Id","cursoCodigo","cursoFounded","$_","find","AllCursos","disciplinaCodigo","disciplinaFounded","AllDisciplinas","horarioString","_horarioString$split","_horarioString$split2","dia","hora","nomeHorario","parseDiaEHora","horarioFounded","AllHorarios","diaNormalized","horaNormalized","trim","substring","toLowerCase","ListaDeTodosHorarios","horarioItem","nome","includes","turma1","turma2","computed","Planos_ModalImportPlanovue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-4836a4ae.e5b58948.js","sourcesContent":["require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n","module.exports = require(\"core-js/library/fn/get-iterator\");","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","module.exports = require(\"core-js/library/fn/json/stringify\");","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('BaseModal',{ref:\"baseModal\",attrs:{\"title\":\"Importar plano\",\"position\":\"right\",\"hasFooter\":true},scopedSlots:_vm._u([{key:\"modal-body\",fn:function(){return [_c('input',{ref:\"inputFilePlano\",attrs:{\"type\":\"file\"}})]},proxy:true},{key:\"modal-footer\",fn:function(){return [_c('BaseButton',{staticClass:\"ml-auto\",attrs:{\"color\":\"lightblue\",\"text\":\"Importar\"},on:{\"click\":_vm.handleImportPlano}})]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nexport default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","<template>\r\n  <BaseModal\r\n    ref=\"baseModal\"\r\n    title=\"Importar plano\"\r\n    position=\"right\"\r\n    :hasFooter=\"true\"\r\n  >\r\n    <template #modal-body>\r\n      <input type=\"file\" ref=\"inputFilePlano\" />\r\n    </template>\r\n\r\n    <template #modal-footer>\r\n      <BaseButton\r\n        color=\"lightblue\"\r\n        text=\"Importar\"\r\n        class=\"ml-auto\"\r\n        @click=\"handleImportPlano\"\r\n      />\r\n    </template>\r\n  </BaseModal>\r\n</template>\r\n\r\n<script>\r\nimport XLSX from \"xlsx\";\r\nimport { mapActions, mapGetters } from \"vuex\";\r\nimport { generateEmptyTurma } from \"@/common/utils\";\r\n// import planoService from \"../../../common/services/plano\";\r\n\r\nexport default {\r\n  name: \"ModalImportPlano\",\r\n  mounted() {\r\n    console.log(this.AllTurmas);\r\n  },\r\n  methods: {\r\n    ...mapActions([\"createTurma\", \"editPedido\"]),\r\n\r\n    open() {\r\n      this.$refs.baseModal.open();\r\n    },\r\n    toggle() {\r\n      this.$refs.baseModal.toggle();\r\n    },\r\n    close() {\r\n      this.$refs.baseModal.close();\r\n    },\r\n\r\n    async handleImportPlano() {\r\n      if (this.AllTurmas.length) {\r\n        this.pushNotification({\r\n          type: \"error\",\r\n          text: `Plano atual deve estar vázio para fazer a importação!`,\r\n        });\r\n        this.$refs.baseModal.close();\r\n        return;\r\n      }\r\n\r\n      this.setPartialLoading(true);\r\n      const inputFile = this.$refs.inputFilePlano.files[0];\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = async (event) => {\r\n        const workbook = XLSX.read(event.target.result, { type: \"binary\" });\r\n        const firstWorksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n\r\n        const dataString = JSON.stringify(XLSX.utils.sheet_to_json(firstWorksheet));\r\n        const dataStringNormalized = dataString\r\n          .normalize(\"NFD\")\r\n          .replace(/[\\u0300-\\u036f]/g, \"\")\r\n          .replace(/\\s/g, \"\");\r\n\r\n        const turmasDoPlano = JSON.parse(dataStringNormalized);\r\n\r\n        const [, periodoStr] = inputFile.name.split(\".\");\r\n        const periodoDoPlano = parseInt(periodoStr) || null;\r\n\r\n        await this.createPlanoImported(turmasDoPlano.slice(0, 5), periodoDoPlano);\r\n        await this.$store.dispatch(\"fetchAll\");\r\n\r\n        this.$refs.baseModal.close();\r\n        this.setPartialLoading(false);\r\n      };\r\n\r\n      reader.readAsBinaryString(inputFile);\r\n    },\r\n\r\n    async createPlanoImported(turmasImported, periodo = 1) {\r\n      // Create plano\r\n      // const newPlano = this.createPlano()\r\n      const keys = {\r\n        disciplinaCod: null,\r\n        letra: null,\r\n        cursoCod: null,\r\n        vagas1: null,\r\n        vagas2: null,\r\n        horarios: null,\r\n      };\r\n      let i = 0;\r\n      for (const key in turmasImported[0]) {\r\n        if (i === 1) keys.disciplinaCod = key;\r\n        else if (i === 2) keys.letra = key;\r\n        else if (i === 3) keys.cursoCod = key;\r\n        else if (i === 5) keys.vagas1 = key;\r\n        else if (i === 6) keys.vagas2 = key;\r\n        else if (i === 7) keys.horarios = key;\r\n        i++;\r\n      }\r\n      let currentTurma = {};\r\n\r\n      for (const turmaFile of turmasImported) {\r\n        const newTurma = generateEmptyTurma();\r\n        //newTurma.Plano = newPlano.id;\r\n        newTurma.periodo = periodo;\r\n        newTurma.letra = turmaFile[keys.letra] || null;\r\n        newTurma.Disciplina = this.findDisciplinaId(turmaFile[keys.disciplinaCod]);\r\n\r\n        if (turmaFile[keys.horarios]) {\r\n          const [strHorario1, strHorario2] = turmaFile[keys.horarios].split(\";\");\r\n          newTurma.Horario1 = this.findHorarioId(strHorario1);\r\n          newTurma.Horario2 = this.findHorarioId(strHorario2);\r\n\r\n          newTurma.turno1 = this.findTurno(newTurma.Horario1, newTurma.Horario2);\r\n        }\r\n\r\n        //Se não achou a Disciplina, letra ou turno1 não cria a turma\r\n        if (!newTurma.Disciplina || !newTurma.letra || !newTurma.turno1) {\r\n          continue;\r\n        }\r\n\r\n        //Se é igual a turma anterior, então cria apenas a vaga\r\n        if (this.isTheSameTurma(currentTurma, newTurma)) {\r\n          await this.createPedido(turmaFile, keys, currentTurma.id);\r\n          continue;\r\n        }\r\n\r\n        //Cria a turma\r\n        const turmaCreated = await this.createTurma(newTurma);\r\n        //Atualiza currentTurma\r\n        currentTurma = { ...turmaCreated };\r\n        //Cria pedido\r\n        await this.createPedido(turmaFile, keys, turmaCreated.id);\r\n      }\r\n    },\r\n    async createPedido(turmaFile, keys, turmaId) {\r\n      const pedido = {\r\n        Turma: null,\r\n        Curso: null,\r\n        vagasNaoPeriodizadas: 0,\r\n        vagasPeriodizadas: 0,\r\n      };\r\n      pedido.Turma = turmaId;\r\n      pedido.Curso = this.findCursoId(turmaFile[keys.cursoCod]);\r\n      pedido.vagasPeriodizadas = turmaFile[keys.vagas1];\r\n      pedido.vagasNaoPeriodizadas = turmaFile[keys.vagas2];\r\n\r\n      if (pedido.Curso) {\r\n        await this.editPedido(pedido);\r\n      } else {\r\n        console.log(\"Curso não econtrado\");\r\n      }\r\n    },\r\n\r\n    findTurno(horario1Id, horario2Id) {\r\n      if (!horario1Id && !horario2Id) return null;\r\n      else if (horario1Id <= 28 || horario2Id <= 28) return \"Diurno\";\r\n      else return \"Noturno\";\r\n    },\r\n    findCursoId(cursoCodigo) {\r\n      const cursoFounded = this.$_.find(this.AllCursos, [\"codigo\", cursoCodigo]);\r\n      return cursoFounded ? cursoFounded.id : null;\r\n    },\r\n    findDisciplinaId(disciplinaCodigo) {\r\n      const disciplinaFounded = this.$_.find(this.AllDisciplinas, [\r\n        \"codigo\",\r\n        disciplinaCodigo,\r\n      ]);\r\n\r\n      return disciplinaFounded ? disciplinaFounded.id : null;\r\n    },\r\n    findHorarioId(horarioString) {\r\n      const [dia, hora] = horarioString.split(\",\");\r\n      const nomeHorario = this.parseDiaEHora(dia, hora);\r\n\r\n      if (nomeHorario) {\r\n        const horarioFounded = this.$_.find(this.AllHorarios, [\r\n          \"horario\",\r\n          nomeHorario,\r\n        ]);\r\n\r\n        return horarioFounded ? horarioFounded.id : null;\r\n      }\r\n    },\r\n    parseDiaEHora(dia, hora) {\r\n      if (!dia || !hora) return null;\r\n\r\n      let diaNormalized = null;\r\n      let horaNormalized = null;\r\n\r\n      switch (\r\n        dia\r\n          .trim()\r\n          .substring(0, 3)\r\n          .toLowerCase()\r\n      ) {\r\n        case \"seg\":\r\n          diaNormalized = \"2a\";\r\n          break;\r\n        case \"ter\":\r\n          diaNormalized = \"3a\";\r\n          break;\r\n        case \"qua\":\r\n          diaNormalized = \"4a\";\r\n          break;\r\n        case \"qui\":\r\n          diaNormalized = \"5a\";\r\n          break;\r\n        case \"sex\":\r\n          diaNormalized = \"6a\";\r\n          break;\r\n      }\r\n\r\n      const horarioFounded =\r\n        this.$_.find(this.ListaDeTodosHorarios, (horarioItem) =>\r\n          horarioItem.nome.includes(hora.substring(0, 1) + \"-\")\r\n        ) || {};\r\n\r\n      horaNormalized = horarioFounded.nome;\r\n\r\n      if (diaNormalized && horaNormalized) {\r\n        return diaNormalized + \" \" + horaNormalized;\r\n      }\r\n\r\n      return null;\r\n    },\r\n    isTheSameTurma(turma1, turma2) {\r\n      return (\r\n        turma1.letra === turma2.letra &&\r\n        turma1.Disciplina === turma2.Disciplina &&\r\n        turma1.turno1 === turma2.turno1 &&\r\n        turma1.Horario1 === turma2.Horario1 &&\r\n        turma1.Horario2 === turma2.Horario2\r\n      );\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\r\n      \"AllHorarios\",\r\n      \"AllDisciplinas\",\r\n      \"AllCursos\",\r\n      \"ListaDeTodosHorarios\",\r\n      \"AllTurmas\",\r\n    ]),\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModalImportPlano.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModalImportPlano.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModalImportPlano.vue?vue&type=template&id=db54a402&\"\nimport script from \"./ModalImportPlano.vue?vue&type=script&lang=js&\"\nexport * from \"./ModalImportPlano.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}