{"version":3,"sources":["webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/CopyPlano.vue?4e5b","webpack:///src/pages/gerenciar/Planos/ModalNovoPlano/CopyPlano.vue","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/CopyPlano.vue?ba13","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/CopyPlano.vue","webpack:///./node_modules/core-js/modules/es6.string.trim.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/ImportPlano.vue?a951","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///src/pages/gerenciar/Planos/ModalNovoPlano/ImportPlano.vue","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/ImportPlano.vue?e5d6","webpack:///./src/pages/gerenciar/Planos/ModalNovoPlano/ImportPlano.vue","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js"],"names":["__webpack_require__","module","exports","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","currentPlano","nome","ano","attrs","type","hasSearchBar","styles","scopedSlots","_u","key","fn","placeholder","model","value","callback","$$v","searchDisciplinasModal","expression","proxy","width","currentOrder","ordenacaoModal","disciplinas","orderToCheck","align","_l","disciplina","directives","name","rawName","id","on","click","$event","toggleItemInArray","filtrosDisciplinas","domProps","checked","Array","isArray","_i","change","$$a","$$el","target","$$c","$$i","concat","slice","codigo","title","perfil","abreviacao","DisciplinasOrderedModal","length","_e","colspan","staticRenderFns","CopyPlanovue_type_script_lang_js_","mixins","components","InputSearch","ui","ImportPlano","props","plano","Object","required","data","order","grades1semestre","CCD","CCN","EC","SI","grades2semestre","methods","open","$refs","baseModalNovoPlano","close","selectAllDisciplinas","$_","union","map","DisciplinasFiltredModal","selectNoneDisciplinas","difference","gradesAtivas","g","periodoInicial","periodoFinal","filter","$store","state","grade","Grades","orderBy","i","parse_int_default","periodoInicio","push","inicio","fim","_i2","_i3","_i4","_i5","_i6","_i7","generateTurmasNovoPlano","_this","disciplinasNovoPlano1Semestre","disciplinasNovoPlano2Semestre","_loop","disciplinasGrade","disciplinaGrade","DisciplinaGrades","Grade","forEach","periodo","t","find","Disciplina","undefined","_loop2","_loop3","_loop4","_loop5","_loop6","_loop7","_loop8","d","DisciplinasInPerfis","Perfil","turmasNovoPlano","includes","semestre","turno","letra","handleCopyPlano","_this2","setPartialLoading","services_plano","create","then","services_turma","turno1","turno2","Docente1","Docente2","Horario1","Horario2","Sala1","Sala2","Plano","turma","pedido","update","Turma","Curso","vagasPeriodizadas","vagasNaoPeriodizadas","response","catch","error","console","log","turmasCopiar","Turmas","pedidos","Pedidos","p","turmaExterna","pedidoExterno","dispatch","setTimeout","computed","objectSpread","vuex_esm","searchNormalized","utils","disciplinaNome","disciplinaCodigo","match","ModalNovoPlano_CopyPlanovue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","$trim","anObject","get","getIterator","it","iterFn","TypeError","call","_m","for","modifiers","number","$$selectedVal","prototype","options","o","selected","val","_value","_n","periodoTurmas","multiple","ref","_arrayWithHoles","arr","is_array_default","_iterableToArrayLimit","_arr","_d","get_iterator_default","next","done","err","_nonIterableRest","_slicedToArray","ImportPlanovue_type_script_lang_js_","handleImportPlano","_handleImportPlano","asyncToGenerator","regeneratorRuntime","mark","_callee2","inputFile","reader","wrap","_context2","prev","inputFilePlano","files","FileReader","onload","_ref","_callee","event","workbook","firstWorksheet","dataString","dataStringNormalized","turmasDoPlano","_context","xlsx_default","a","read","result","Sheets","SheetNames","stringify_default","sheet_to_json","normalize","replace","JSON","parse","createPlanoImported","stop","_x","apply","arguments","readAsBinaryString","_createPlanoImported","_callee3","turmasImported","keys","currentTurma","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","turmaFile","newTurma","_turmaFile$keys$horar","_turmaFile$keys$horar2","str1","str2","_turmaFile$keys$docen","_turmaFile$keys$docen2","docente1Str","docente2Str","turmaCreated","_args3","_context3","disciplinaCod","cursoCod","vagas1","vagas2","horarioESala","docentes","sent","findDisciplinaId","split","findHorarioId","findTurno","findSalaId","findDocenteId","abrupt","isTheSameTurma","createTurma","t0","return","finish","_x2","createPedido","_createPedido","_callee4","turmaId","_context4","vagasOferecidas","vagasOcupadas","findCursoId","editPedido","_x3","_x4","_x5","horario1Id","horario2Id","some","HorariosNoturno","cursoCodigo","cursoFounded","AllCursos","docenteNomeSiga","docenteFounded","AllDocentes","docente","nomesiga","disciplinaFounded","AllDisciplinas","horarioString","_horarioString$split","_horarioString$split2","dia","hora","sala","nomeHorario","parseDiaEHora","horarioFounded","AllHorarios","diaNormalized","horaNormalized","trim","substring","toLowerCase","ListaDeTodosHorarios","horarioItem","salaString","_salaString$split","_salaString$split2","salaNormalized","salaFounded","AllSalas","nomeNormalized","turma1","turma2","ModalNovoPlano_ImportPlanovue_type_script_lang_js_","core","$JSON","stringify"],"mappings":"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","file":"js/chunk-a40fe88e.5ae2b37a.js","sourcesContent":["require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',{staticClass:\"alert alert-secondary\"},[_vm._v(\"\\n    Selecione as disciplinas para quais as turmas do atual plano\\n    \"),_c('b',[_vm._v(_vm._s(_vm.currentPlano.nome + \" - \" + _vm.currentPlano.ano))]),_vm._v(\"\\n    serão copiadas para o novo plano.\\n  \")]),_c('div',{staticClass:\"div-table\"},[_c('BaseTable',{attrs:{\"type\":\"modal\",\"hasSearchBar\":true,\"styles\":'max-height:500px; height:500px'},scopedSlots:_vm._u([{key:\"thead-search\",fn:function(){return [_c('InputSearch',{attrs:{\"placeholder\":\"Pesquise nome ou codigo de uma disciplina...\"},model:{value:(_vm.searchDisciplinasModal),callback:function ($$v) {_vm.searchDisciplinasModal=$$v},expression:\"searchDisciplinasModal\"}})]},proxy:true},{key:\"thead\",fn:function(){return [_c('v-th',{attrs:{\"width\":\"25\"}}),_c('v-th-ordination',{attrs:{\"currentOrder\":_vm.ordenacaoModal.disciplinas,\"orderToCheck\":\"codigo\",\"width\":\"80\",\"align\":\"start\"}},[_vm._v(\"\\n          Código\\n        \")]),_c('v-th-ordination',{attrs:{\"currentOrder\":_vm.ordenacaoModal.disciplinas,\"orderToCheck\":\"nome\",\"width\":\"260\",\"align\":\"start\"}},[_vm._v(\"\\n          Nome\\n        \")]),_c('v-th-ordination',{attrs:{\"currentOrder\":_vm.ordenacaoModal.disciplinas,\"orderToCheck\":\"perfil.abreviacao\",\"width\":\"85\",\"align\":\"start\"}},[_vm._v(\"\\n          Perfil\\n        \")])]},proxy:true},{key:\"tbody\",fn:function(){return [_vm._l((_vm.DisciplinasOrderedModal),function(disciplina){return _c('tr',{directives:[{name:\"prevent-click-selection\",rawName:\"v-prevent-click-selection\"}],key:disciplina.id,on:{\"click\":function($event){return _vm.toggleItemInArray(disciplina.id, _vm.filtrosDisciplinas)}}},[_c('v-td',{attrs:{\"width\":\"25\",\"type\":\"content\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.filtrosDisciplinas),expression:\"filtrosDisciplinas\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"value\":disciplina.id,\"checked\":Array.isArray(_vm.filtrosDisciplinas)?_vm._i(_vm.filtrosDisciplinas,disciplina.id)>-1:(_vm.filtrosDisciplinas)},on:{\"change\":function($event){var $$a=_vm.filtrosDisciplinas,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=disciplina.id,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.filtrosDisciplinas=$$a.concat([$$v]))}else{$$i>-1&&(_vm.filtrosDisciplinas=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.filtrosDisciplinas=$$c}}}})]),_c('v-td',{attrs:{\"width\":\"80\",\"align\":\"start\"}},[_vm._v(_vm._s(disciplina.codigo))]),_c('v-td',{attrs:{\"width\":\"260\",\"align\":\"start\",\"title\":disciplina.nome}},[_vm._v(\"\\n            \"+_vm._s(disciplina.nome)+\"\\n          \")]),_c('v-td',{attrs:{\"width\":\"85\",\"align\":\"start\"}},[_vm._v(_vm._s(disciplina.perfil.abreviacao))])],1)}),(!_vm.DisciplinasOrderedModal.length)?_c('tr',[_c('v-td',{attrs:{\"colspan\":\"3\",\"width\":\"450\"}},[_vm._v(\"NENHUMA DISCIPLINA ENCONTRADA.\")])],1):_vm._e()]},proxy:true}])})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <p class=\"alert alert-secondary\">\r\n      Selecione as disciplinas para quais as turmas do atual plano\r\n      <b>{{ currentPlano.nome + \" - \" + currentPlano.ano }}</b>\r\n      serão copiadas para o novo plano.\r\n    </p>\r\n\r\n    <div class=\"div-table\">\r\n      <BaseTable\r\n        type=\"modal\"\r\n        :hasSearchBar=\"true\"\r\n        :styles=\"'max-height:500px; height:500px'\"\r\n      >\r\n        <template #thead-search>\r\n          <InputSearch\r\n            v-model=\"searchDisciplinasModal\"\r\n            placeholder=\"Pesquise nome ou codigo de uma disciplina...\"\r\n          />\r\n        </template>\r\n        <template #thead>\r\n          <v-th width=\"25\" />\r\n          <v-th-ordination\r\n            :currentOrder=\"ordenacaoModal.disciplinas\"\r\n            orderToCheck=\"codigo\"\r\n            width=\"80\"\r\n            align=\"start\"\r\n          >\r\n            Código\r\n          </v-th-ordination>\r\n          <v-th-ordination\r\n            :currentOrder=\"ordenacaoModal.disciplinas\"\r\n            orderToCheck=\"nome\"\r\n            width=\"260\"\r\n            align=\"start\"\r\n          >\r\n            Nome\r\n          </v-th-ordination>\r\n          <v-th-ordination\r\n            :currentOrder=\"ordenacaoModal.disciplinas\"\r\n            orderToCheck=\"perfil.abreviacao\"\r\n            width=\"85\"\r\n            align=\"start\"\r\n          >\r\n            Perfil\r\n          </v-th-ordination>\r\n        </template>\r\n\r\n        <template #tbody>\r\n          <tr\r\n            v-for=\"disciplina in DisciplinasOrderedModal\"\r\n            :key=\"disciplina.id\"\r\n            @click=\"toggleItemInArray(disciplina.id, filtrosDisciplinas)\"\r\n            v-prevent-click-selection\r\n          >\r\n            <v-td width=\"25\" type=\"content\">\r\n              <input\r\n                type=\"checkbox\"\r\n                v-model=\"filtrosDisciplinas\"\r\n                :value=\"disciplina.id\"\r\n              />\r\n            </v-td>\r\n            <v-td width=\"80\" align=\"start\">{{ disciplina.codigo }}</v-td>\r\n            <v-td width=\"260\" align=\"start\" :title=\"disciplina.nome\">\r\n              {{ disciplina.nome }}\r\n            </v-td>\r\n            <v-td width=\"85\" align=\"start\">{{ disciplina.perfil.abreviacao }}</v-td>\r\n          </tr>\r\n\r\n          <tr v-if=\"!DisciplinasOrderedModal.length\">\r\n            <v-td colspan=\"3\" width=\"450\">NENHUMA DISCIPLINA ENCONTRADA.</v-td>\r\n          </tr>\r\n        </template>\r\n      </BaseTable>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport planoService from \"@/common/services/plano\";\r\nimport turmaService from \"@/common/services/turma\";\r\nimport pedidoService from \"@/common/services/pedido\";\r\nimport pedidoExternoService from \"@/common/services/pedidoExterno\";\r\nimport turmaExternaService from \"@/common/services/turmaExterna\";\r\nimport { normalizeText } from \"@/common/utils\";\r\nimport { toggleItemInArray, preventClickSelection } from \"@/common/mixins\";\r\nimport { InputSearch } from \"@/components/ui\";\r\nimport ImportPlano from \"./ImportPlano\";\r\n\r\nexport default {\r\n  name: \"ModalNovoPlano\",\r\n  mixins: [toggleItemInArray, preventClickSelection],\r\n  components: { InputSearch, ImportPlano },\r\n  props: {\r\n    plano: { type: Object, required: true },\r\n  },\r\n  data() {\r\n    return {\r\n      searchDisciplinasModal: \"\",\r\n      filtrosDisciplinas: [],\r\n      ordenacaoModal: {\r\n        disciplinas: { order: \"codigo\", type: \"asc\" },\r\n      },\r\n      grades1semestre: { CCD: [], CCN: [], EC: [], SI: [] },\r\n      grades2semestre: { CCD: [], CCN: [], EC: [], SI: [] },\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    open() {\r\n      this.$refs.baseModalNovoPlano.open();\r\n    },\r\n    close() {\r\n      this.$refs.baseModalNovoPlano.close();\r\n    },\r\n\r\n    selectAllDisciplinas() {\r\n      this.filtrosDisciplinas = this.$_.union(\r\n        this.filtrosDisciplinas,\r\n        this.$_.map(this.DisciplinasFiltredModal, \"id\")\r\n      );\r\n    },\r\n    selectNoneDisciplinas() {\r\n      this.filtrosDisciplinas = this.$_.difference(\r\n        this.filtrosDisciplinas,\r\n        this.$_.map(this.DisciplinasFiltredModal, \"id\")\r\n      );\r\n    },\r\n\r\n    gradesAtivas(ano) {\r\n      //define grades ativas por periodo\r\n      let g;\r\n      let periodoInicial, periodoFinal;\r\n      //CCD\r\n      g = this.$_.filter(this.$store.state.grade.Grades, [\"Curso\", 4]);\r\n      g = this.$_.orderBy(g, \"periodoInicio\", \"desc\");\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < g.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(g[i].periodoInicio.slice(0, 4), 10)) +\r\n          (1 - parseInt(g[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        this.grades1semestre.CCD.push({\r\n          id: g[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < g.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(g[i].periodoInicio.slice(0, 4), 10)) +\r\n          (3 - parseInt(g[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        this.grades2semestre.CCD.push({\r\n          id: g[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n      //CCN\r\n      g = this.$_.filter(this.$store.state.grade.Grades, [\"Curso\", 1]);\r\n      g = this.$_.orderBy(g, \"periodoInicio\", \"desc\");\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < g.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(g[i].periodoInicio.slice(0, 4), 10)) +\r\n          (1 - parseInt(g[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        this.grades1semestre.CCN.push({\r\n          id: g[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < g.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(g[i].periodoInicio.slice(0, 4), 10)) +\r\n          (3 - parseInt(g[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        this.grades2semestre.CCN.push({\r\n          id: g[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n      //SI\r\n      g = this.$_.filter(this.$store.state.grade.Grades, [\"Curso\", 3]);\r\n      g = this.$_.orderBy(g, \"periodoInicio\", \"desc\");\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < g.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(g[i].periodoInicio.slice(0, 4), 10)) +\r\n          (1 - parseInt(g[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        this.grades1semestre.SI.push({\r\n          id: g[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < g.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(g[i].periodoInicio.slice(0, 4), 10)) +\r\n          (3 - parseInt(g[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        this.grades2semestre.SI.push({\r\n          id: g[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n      //EC\r\n      g = this.$_.filter(this.$store.state.grade.Grades, [\"Curso\", 2]);\r\n      g = this.$_.orderBy(g, \"periodoInicio\", \"desc\");\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < g.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(g[i].periodoInicio.slice(0, 4), 10)) +\r\n          (1 - parseInt(g[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        this.grades1semestre.EC.push({\r\n          id: g[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n      periodoFinal = 0;\r\n      for (let i = 0; i < g.length; i++) {\r\n        periodoInicial = periodoFinal + 1;\r\n        periodoFinal =\r\n          1 +\r\n          2 * (parseInt(ano, 10) - parseInt(g[i].periodoInicio.slice(0, 4), 10)) +\r\n          (3 - parseInt(g[i].periodoInicio.slice(5, 6), 10)) / 2;\r\n        this.grades2semestre.EC.push({\r\n          id: g[i].id,\r\n          inicio: periodoInicial,\r\n          fim: periodoFinal,\r\n        });\r\n        if (periodoFinal > 9) {\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    generateTurmasNovoPlano() {\r\n      this.gradesAtivas(this.plano.ano);\r\n      let disciplinasNovoPlano1Semestre = [];\r\n      let disciplinasNovoPlano2Semestre = [];\r\n      for (let i = 0; i < this.grades1semestre.CCD.length; i++) {\r\n        let disciplinasGrade = this.$_.filter(\r\n          this.$store.state.disciplinaGrade.DisciplinaGrades,\r\n          { Grade: this.grades1semestre.CCD[i].id }\r\n        );\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 1) {\r\n            if (\r\n              disciplina.periodo >= this.grades1semestre.CCD[i].inicio &&\r\n              disciplina.periodo <= this.grades1semestre.CCD[i].fim\r\n            ) {\r\n              let t = this.$_.find(disciplinasNovoPlano1Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasNovoPlano1Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: true,\r\n                  EC: false,\r\n                  CCN: false,\r\n                  SI: false,\r\n                  periodo: 1,\r\n                });\r\n              } else {\r\n                t.CCD = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let i = 0; i < this.grades1semestre.EC.length; i++) {\r\n        let disciplinasGrade = this.$_.filter(\r\n          this.$store.state.disciplinaGrade.DisciplinaGrades,\r\n          { Grade: this.grades1semestre.EC[i].id }\r\n        );\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 1) {\r\n            if (\r\n              disciplina.periodo >= this.grades1semestre.EC[i].inicio &&\r\n              disciplina.periodo <= this.grades1semestre.EC[i].fim\r\n            ) {\r\n              let t = this.$_.find(disciplinasNovoPlano1Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasNovoPlano1Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: false,\r\n                  EC: true,\r\n                  CCN: false,\r\n                  SI: false,\r\n                  periodo: 1,\r\n                });\r\n              } else {\r\n                t.EC = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let i = 0; i < this.grades1semestre.CCN.length; i++) {\r\n        let disciplinasGrade = this.$_.filter(\r\n          this.$store.state.disciplinaGrade.DisciplinaGrades,\r\n          { Grade: this.grades1semestre.CCN[i].id }\r\n        );\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 0) {\r\n            if (\r\n              disciplina.periodo >= this.grades1semestre.CCN[i].inicio &&\r\n              disciplina.periodo <= this.grades1semestre.CCN[i].fim\r\n            ) {\r\n              let t = this.$_.find(disciplinasNovoPlano1Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasNovoPlano1Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: false,\r\n                  EC: false,\r\n                  CCN: true,\r\n                  SI: false,\r\n                  periodo: 1,\r\n                });\r\n              } else {\r\n                t.CCN = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let i = 0; i < this.grades1semestre.SI.length; i++) {\r\n        let disciplinasGrade = this.$_.filter(\r\n          this.$store.state.disciplinaGrade.DisciplinaGrades,\r\n          { Grade: this.grades1semestre.SI[i].id }\r\n        );\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 0) {\r\n            if (\r\n              disciplina.periodo >= this.grades1semestre.SI[i].inicio &&\r\n              disciplina.periodo <= this.grades1semestre.SI[i].fim\r\n            ) {\r\n              let t = this.$_.find(disciplinasNovoPlano1Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasNovoPlano1Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: false,\r\n                  EC: false,\r\n                  CCN: false,\r\n                  SI: true,\r\n                  periodo: 1,\r\n                });\r\n              } else {\r\n                t.SI = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let i = 0; i < this.grades2semestre.CCD.length; i++) {\r\n        let disciplinasGrade = this.$_.filter(\r\n          this.$store.state.disciplinaGrade.DisciplinaGrades,\r\n          { Grade: this.grades2semestre.CCD[i].id }\r\n        );\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 0) {\r\n            if (\r\n              disciplina.periodo >= this.grades2semestre.CCD[i].inicio &&\r\n              disciplina.periodo <= this.grades2semestre.CCD[i].fim\r\n            ) {\r\n              let t = this.$_.find(disciplinasNovoPlano2Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasNovoPlano2Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: true,\r\n                  EC: false,\r\n                  CCN: false,\r\n                  SI: false,\r\n                  periodo: 3,\r\n                });\r\n              } else {\r\n                t.CCD = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let i = 0; i < this.grades2semestre.EC.length; i++) {\r\n        let disciplinasGrade = this.$_.filter(\r\n          this.$store.state.disciplinaGrade.DisciplinaGrades,\r\n          { Grade: this.grades2semestre.EC[i].id }\r\n        );\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 0) {\r\n            if (\r\n              disciplina.periodo >= this.grades2semestre.EC[i].inicio &&\r\n              disciplina.periodo <= this.grades2semestre.EC[i].fim\r\n            ) {\r\n              let t = this.$_.find(disciplinasNovoPlano2Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasNovoPlano2Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: false,\r\n                  EC: true,\r\n                  CCN: false,\r\n                  SI: false,\r\n                  periodo: 3,\r\n                });\r\n              } else {\r\n                t.EC = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let i = 0; i < this.grades2semestre.CCN.length; i++) {\r\n        let disciplinasGrade = this.$_.filter(\r\n          this.$store.state.disciplinaGrade.DisciplinaGrades,\r\n          { Grade: this.grades2semestre.CCN[i].id }\r\n        );\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 1) {\r\n            if (\r\n              disciplina.periodo >= this.grades2semestre.CCN[i].inicio &&\r\n              disciplina.periodo <= this.grades2semestre.CCN[i].fim\r\n            ) {\r\n              let t = this.$_.find(disciplinasNovoPlano2Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasNovoPlano2Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: false,\r\n                  EC: false,\r\n                  CCN: true,\r\n                  SI: false,\r\n                  periodo: 3,\r\n                });\r\n              } else {\r\n                t.CCN = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      for (let i = 0; i < this.grades2semestre.SI.length; i++) {\r\n        let disciplinasGrade = this.$_.filter(\r\n          this.$store.state.disciplinaGrade.DisciplinaGrades,\r\n          { Grade: this.grades2semestre.SI[i].id }\r\n        );\r\n        disciplinasGrade.forEach((disciplina) => {\r\n          if (disciplina.periodo % 2 === 1) {\r\n            if (\r\n              disciplina.periodo >= this.grades2semestre.SI[i].inicio &&\r\n              disciplina.periodo <= this.grades2semestre.SI[i].fim\r\n            ) {\r\n              let t = this.$_.find(disciplinasNovoPlano2Semestre, {\r\n                Disciplina: disciplina.Disciplina,\r\n              });\r\n              if (t === undefined) {\r\n                disciplinasNovoPlano2Semestre.push({\r\n                  Disciplina: disciplina.Disciplina,\r\n                  CCD: false,\r\n                  EC: false,\r\n                  CCN: false,\r\n                  SI: true,\r\n                  periodo: 3,\r\n                });\r\n              } else {\r\n                t.SI = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      disciplinasNovoPlano1Semestre = this.$_.filter(\r\n        disciplinasNovoPlano1Semestre,\r\n        (d) => {\r\n          let perfil = this.$_.find(this.DisciplinasInPerfis, {\r\n            id: d.Disciplina,\r\n          }).Perfil;\r\n          return perfil !== 13 && perfil !== 15;\r\n        }\r\n      );\r\n      disciplinasNovoPlano2Semestre = this.$_.filter(\r\n        disciplinasNovoPlano2Semestre,\r\n        (d) => {\r\n          let perfil = this.$_.find(this.DisciplinasInPerfis, {\r\n            id: d.Disciplina,\r\n          }).Perfil;\r\n          return perfil !== 13 && perfil !== 15;\r\n        }\r\n      );\r\n      let turmasNovoPlano = [];\r\n      disciplinasNovoPlano1Semestre.forEach((d) => {\r\n        if (!this.$_.includes(this.filtrosDisciplinas, d.Disciplina)) {\r\n          if ((d.CCD || d.EC) && (d.CCN || d.SI)) {\r\n            turmasNovoPlano.push({\r\n              semestre: 1,\r\n              Disciplina: d.Disciplina,\r\n              turno: \"Diurno\",\r\n              letra: \"A\",\r\n              CCD: d.CCD,\r\n              EC: d.EC,\r\n            });\r\n            turmasNovoPlano.push({\r\n              semestre: 1,\r\n              Disciplina: d.Disciplina,\r\n              turno: \"Noturno\",\r\n              letra: \"B\",\r\n              CCN: d.CCN,\r\n              SI: d.SI,\r\n            });\r\n          } else if (d.CCD || d.EC) {\r\n            turmasNovoPlano.push({\r\n              semestre: 1,\r\n              Disciplina: d.Disciplina,\r\n              turno: \"Diurno\",\r\n              letra: \"A\",\r\n              CCD: d.CCD,\r\n              EC: d.EC,\r\n            });\r\n          } else if (d.CCN || d.SI) {\r\n            turmasNovoPlano.push({\r\n              semestre: 1,\r\n              Disciplina: d.Disciplina,\r\n              turno: \"Noturno\",\r\n              letra: \"A\",\r\n              CCN: d.CCN,\r\n              SI: d.SI,\r\n            });\r\n          }\r\n        }\r\n      });\r\n      disciplinasNovoPlano2Semestre.forEach((d) => {\r\n        if (!this.$_.includes(this.filtrosDisciplinas, d.Disciplina)) {\r\n          if ((d.CCD || d.EC) && (d.CCN || d.SI)) {\r\n            turmasNovoPlano.push({\r\n              semestre: 3,\r\n              Disciplina: d.Disciplina,\r\n              turno: \"Diurno\",\r\n              letra: \"A\",\r\n              CCD: d.CCD,\r\n              EC: d.EC,\r\n            });\r\n            turmasNovoPlano.push({\r\n              semestre: 3,\r\n              Disciplina: d.Disciplina,\r\n              turno: \"Noturno\",\r\n              letra: \"B\",\r\n              CCN: d.CCN,\r\n              SI: d.SI,\r\n            });\r\n          } else if (d.CCD || d.EC) {\r\n            turmasNovoPlano.push({\r\n              semestre: 3,\r\n              Disciplina: d.Disciplina,\r\n              turno: \"Diurno\",\r\n              letra: \"A\",\r\n              CCD: d.CCD,\r\n              EC: d.EC,\r\n            });\r\n          } else if (d.CCN || d.SI) {\r\n            turmasNovoPlano.push({\r\n              semestre: 3,\r\n              Disciplina: d.Disciplina,\r\n              turno: \"Noturno\",\r\n              letra: \"A\",\r\n              CCN: d.CCN,\r\n              SI: d.SI,\r\n            });\r\n          }\r\n        }\r\n      });\r\n      //{Disciplina:id, CCD:true/false, EC:true/false, CCN:true/false, SI:true/false, periodo:1/3}\r\n\r\n      return turmasNovoPlano;\r\n    },\r\n    handleCopyPlano() {\r\n      this.setPartialLoading(true);\r\n      let turmasNovoPlano = this.generateTurmasNovoPlano();\r\n\r\n      planoService.create(this.plano).then((plano) => {\r\n        turmasNovoPlano.forEach((t) => {\r\n          turmaService\r\n            .create({\r\n              id: undefined,\r\n              periodo: t.semestre,\r\n              letra: t.letra,\r\n              turno1: t.turno,\r\n              turno2: undefined,\r\n              Disciplina: t.Disciplina,\r\n              Docente1: undefined,\r\n              Docente2: undefined,\r\n              Horario1: undefined,\r\n              Horario2: undefined,\r\n              Sala1: undefined,\r\n              Sala2: undefined,\r\n              Plano: plano.Plano.id,\r\n            })\r\n            .then((turma) => {\r\n              if (t.CCN) {\r\n                pedidoService\r\n                  .update(1, turma.Turma.id, {\r\n                    Turma: turma.Turma.id,\r\n                    Curso: 1,\r\n                    vagasPeriodizadas: 1,\r\n                    vagasNaoPeriodizadas: 0,\r\n                  })\r\n                  .then((response) => {})\r\n                  .catch((error) => {\r\n                    console.log(\"erro ao atualizar pedido: \" + error);\r\n                  });\r\n              }\r\n              if (t.EC) {\r\n                pedidoService\r\n                  .update(2, turma.Turma.id, {\r\n                    Turma: turma.Turma.id,\r\n                    Curso: 2,\r\n                    vagasPeriodizadas: 1,\r\n                    vagasNaoPeriodizadas: 0,\r\n                  })\r\n                  .then((response) => {})\r\n                  .catch((error) => {\r\n                    console.log(\"erro ao atualizar pedido: \" + error);\r\n                  });\r\n              }\r\n              if (t.SI) {\r\n                pedidoService\r\n                  .update(3, turma.Turma.id, {\r\n                    Turma: turma.Turma.id,\r\n                    Curso: 3,\r\n                    vagasPeriodizadas: 1,\r\n                    vagasNaoPeriodizadas: 0,\r\n                  })\r\n                  .then((response) => {})\r\n                  .catch((error) => {\r\n                    console.log(\"erro ao atualizar pedido: \" + error);\r\n                  });\r\n              }\r\n              if (t.CCD) {\r\n                pedidoService\r\n                  .update(4, turma.Turma.id, {\r\n                    Turma: turma.Turma.id,\r\n                    Curso: 4,\r\n                    vagasPeriodizadas: 1,\r\n                    vagasNaoPeriodizadas: 0,\r\n                  })\r\n                  .then((response) => {})\r\n                  .catch((error) => {\r\n                    console.log(\"erro ao atualizar pedido: \" + error);\r\n                  });\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"erro ao criar turma: \" + error);\r\n            });\r\n        });\r\n        let turmasCopiar = this.$_.filter(this.$store.state.turma.Turmas, (t) => {\r\n          let disciplina = this.$_.includes(this.filtrosDisciplinas, t.Disciplina);\r\n          if (disciplina) return true;\r\n          else return false;\r\n        });\r\n\r\n        turmasCopiar.forEach((t) => {\r\n          turmaService\r\n            .create({\r\n              id: undefined,\r\n              periodo: t.periodo,\r\n              letra: t.letra,\r\n              turno1: t.turno1,\r\n              turno2: undefined,\r\n              Disciplina: t.Disciplina,\r\n              Horario1: t.Horario1,\r\n              Horario2: t.Horario2,\r\n              Sala1: undefined,\r\n              Sala2: undefined,\r\n              Plano: plano.Plano.id,\r\n            })\r\n            .then((turma) => {\r\n              let pedidos = this.$store.state.pedido.Pedidos[t.id];\r\n              pedidos.forEach((p) => {\r\n                pedidoService\r\n                  .update(p.Curso, turma.Turma.id, {\r\n                    Turma: turma.Turma.id,\r\n                    Curso: p.Curso,\r\n                    vagasPeriodizadas: p.vagasPeriodizadas,\r\n                    vagasNaoPeriodizadas: 0,\r\n                  })\r\n                  .then((response) => {})\r\n                  .catch((error) => {\r\n                    console.log(\"erro ao atualizar pedido: \" + error);\r\n                  });\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"erro ao criar turma externa: \" + error);\r\n            });\r\n        });\r\n        this.$store.state.turmaExterna.Turmas.forEach((t) => {\r\n          turmaExternaService\r\n            .create({\r\n              id: undefined,\r\n              periodo: t.periodo,\r\n              letra: t.letra,\r\n              turno1: t.turno1,\r\n              turno2: undefined,\r\n              Disciplina: t.Disciplina,\r\n              Horario1: t.Horario1,\r\n              Horario2: t.Horario2,\r\n              Sala1: undefined,\r\n              Sala2: undefined,\r\n              Plano: plano.Plano.id,\r\n            })\r\n            .then((turma) => {\r\n              let pedidos = this.$store.state.pedidoExterno.Pedidos[t.id];\r\n              pedidos.forEach((p) => {\r\n                pedidoExternoService\r\n                  .update(p.Curso, turma.Turma.id, {\r\n                    Turma: turma.Turma.id,\r\n                    Curso: p.Curso,\r\n                    vagasPeriodizadas: p.vagasPeriodizadas,\r\n                    vagasNaoPeriodizadas: p.vagasNaoPeriodizadas,\r\n                  })\r\n                  .then((response) => {})\r\n                  .catch((error) => {\r\n                    console.log(\"erro ao atualizar pedido externo: \" + error);\r\n                  });\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"erro ao criar turma externa: \" + error);\r\n            });\r\n        });\r\n\r\n        this.$store.dispatch(\"fetchAll\").then(() => {\r\n          setTimeout(() => {\r\n            this.setPartialLoading(false);\r\n            this.close();\r\n          }, 300);\r\n        });\r\n      });\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\"DisciplinasInPerfis\"]),\r\n\r\n    DisciplinasOrderedModal() {\r\n      return this.$_.orderBy(\r\n        this.DisciplinasFiltredModal,\r\n        this.ordenacaoModal.disciplinas.order,\r\n        this.ordenacaoModal.disciplinas.type\r\n      );\r\n    },\r\n    DisciplinasFiltredModal() {\r\n      if (this.searchDisciplinasModal === \"\") return this.DisciplinasInPerfis;\r\n\r\n      const searchNormalized = normalizeText(this.searchDisciplinasModal);\r\n\r\n      return this.$_.filter(this.DisciplinasInPerfis, (disciplina) => {\r\n        const disciplinaNome = normalizeText(disciplina.nome);\r\n        const disciplinaCodigo = normalizeText(disciplina.codigo);\r\n\r\n        return (\r\n          disciplinaNome.match(searchNormalized) ||\r\n          disciplinaCodigo.match(searchNormalized)\r\n        );\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CopyPlano.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CopyPlano.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CopyPlano.vue?vue&type=template&id=2e700294&\"\nimport script from \"./CopyPlano.vue?vue&type=script&lang=js&\"\nexport * from \"./CopyPlano.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n","module.exports = require(\"core-js/library/fn/get-iterator\");","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),_c('div',{staticClass:\"form-row\"},[_c('div',{staticClass:\"form-group col-4\"},[_c('label',{attrs:{\"for\":\"periodoPlano\"}},[_vm._v(\"Período das turmas:\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.periodoTurmas),expression:\"periodoTurmas\",modifiers:{\"number\":true}}],staticClass:\"form-control w-100\",attrs:{\"id\":\"periodoPlano\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.periodoTurmas=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.PeriodosLetivos),function(periodo){return _c('option',{key:periodo.id + periodo.nome,domProps:{\"value\":periodo.id}},[_vm._v(\"\\n          \"+_vm._s(periodo.nome)+\"\\n        \")])}),0)])]),_c('div',{staticClass:\"form-row\"},[_c('div',{staticClass:\"form-group col\"},[_c('input',{ref:\"inputFilePlano\",staticClass:\"w-100 form-control-file\",attrs:{\"type\":\"file\"}})])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"alert alert-secondary\"},[_vm._v(\"\\n    Selecione um arquivo\\n    \"),_c('b',[_vm._v(\".csv\")]),_vm._v(\"\\n    para importar as turmas para o novo plano.\\n  \")])}]\n\nexport { render, staticRenderFns }","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nexport default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","<template>\r\n  <div>\r\n    <p class=\"alert alert-secondary\">\r\n      Selecione um arquivo\r\n      <b>.csv</b>\r\n      para importar as turmas para o novo plano.\r\n    </p>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col-4\">\r\n        <label for=\"periodoPlano\">Período das turmas:</label>\r\n        <select\r\n          id=\"periodoPlano\"\r\n          v-model.number=\"periodoTurmas\"\r\n          class=\"form-control w-100\"\r\n        >\r\n          <option\r\n            v-for=\"periodo in PeriodosLetivos\"\r\n            :key=\"periodo.id + periodo.nome\"\r\n            :value=\"periodo.id\"\r\n          >\r\n            {{ periodo.nome }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col\">\r\n        <input type=\"file\" ref=\"inputFilePlano\" class=\"w-100 form-control-file\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from \"vuex\";\r\nimport XLSX from \"xlsx\";\r\nimport planoService from \"@/common/services/plano\";\r\nimport { generateEmptyTurma, normalizeText } from \"@/common/utils\";\r\n\r\nexport default {\r\n  name: \"ModalImportPlano\",\r\n  props: { plano: { type: Object, required: true } },\r\n  data() {\r\n    return {\r\n      periodoTurmas: null,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\"createTurma\", \"editPedido\"]),\r\n\r\n    async handleImportPlano() {\r\n      this.setPartialLoading(true);\r\n      const inputFile = this.$refs.inputFilePlano.files[0];\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = async (event) => {\r\n        const workbook = XLSX.read(event.target.result, { type: \"binary\" });\r\n        const firstWorksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n\r\n        const dataString = JSON.stringify(XLSX.utils.sheet_to_json(firstWorksheet));\r\n        const dataStringNormalized = dataString\r\n          .normalize(\"NFD\")\r\n          .replace(/[\\u0300-\\u036f]/g, \"\")\r\n          .replace(/\\s/g, \"\");\r\n\r\n        const turmasDoPlano = JSON.parse(dataStringNormalized);\r\n\r\n        await this.createPlanoImported(turmasDoPlano, this.periodoTurmas);\r\n        await this.$store.dispatch(\"fetchAll\");\r\n\r\n        this.setPartialLoading(false);\r\n      };\r\n\r\n      reader.readAsBinaryString(inputFile);\r\n    },\r\n    async createPlanoImported(turmasImported, periodo = 1) {\r\n      const keys = {\r\n        disciplinaCod: null,\r\n        letra: null,\r\n        cursoCod: null,\r\n        vagas1: null,\r\n        vagas2: null,\r\n        horarioESala: null,\r\n        docentes: null,\r\n      };\r\n      let i = 0;\r\n      for (const key in turmasImported[0]) {\r\n        if (i === 1) keys.disciplinaCod = key;\r\n        else if (i === 2) keys.letra = key;\r\n        else if (i === 3) keys.cursoCod = key;\r\n        else if (i === 5) keys.vagas1 = key;\r\n        else if (i === 6) keys.vagas2 = key;\r\n        else if (i === 7) keys.horarioESala = key;\r\n        else if (i === 8) keys.docentes = key;\r\n        i++;\r\n      }\r\n      let currentTurma = {};\r\n\r\n      const response = await planoService.create(this.plano);\r\n\r\n      for (const turmaFile of turmasImported) {\r\n        const newTurma = generateEmptyTurma();\r\n\r\n        newTurma.Plano = response.Plano.id;\r\n        newTurma.periodo = periodo;\r\n        newTurma.letra = turmaFile[keys.letra] || null;\r\n        newTurma.Disciplina = this.findDisciplinaId(turmaFile[keys.disciplinaCod]);\r\n\r\n        if (turmaFile[keys.horarioESala]) {\r\n          const [str1, str2] = turmaFile[keys.horarioESala].split(\";\");\r\n          //Horarios\r\n          newTurma.Horario1 = this.findHorarioId(str1);\r\n          newTurma.Horario2 = this.findHorarioId(str2);\r\n          newTurma.turno1 = this.findTurno(newTurma.Horario1, newTurma.Horario2);\r\n\r\n          //Salas\r\n          if (newTurma.turno1 !== \"EAD\") {\r\n            newTurma.Sala1 = this.findSalaId(str1);\r\n            newTurma.Sala2 = this.findSalaId(str2);\r\n          }\r\n        }\r\n\r\n        if (turmaFile[keys.docentes]) {\r\n          const [docente1Str, docente2Str] = turmaFile[keys.docentes].split(\";\");\r\n          newTurma.Docente1 = this.findDocenteId(docente1Str);\r\n          newTurma.Docente2 = this.findDocenteId(docente2Str);\r\n        }\r\n\r\n        if (!newTurma.Disciplina || !newTurma.letra || !newTurma.turno1) {\r\n          //Se não achou a Disciplina, letra ou turno1 não cria a turma\r\n          continue;\r\n        }\r\n\r\n        if (this.isTheSameTurma(currentTurma, newTurma)) {\r\n          //Se é igual a turma anterior, então cria apenas a vaga\r\n          // await this.createPedido(turmaFile, keys, currentTurma.id); //Não esta funcionando\r\n          continue;\r\n        }\r\n\r\n        const turmaCreated = await this.createTurma(newTurma); //Cria a turma\r\n        currentTurma = { ...turmaCreated }; //Atualiza currentTurma\r\n\r\n        // await this.createPedido(turmaFile, keys, turmaCreated.id); //Não esta funcionando\r\n      }\r\n    },\r\n    async createPedido(turmaFile, keys, turmaId) {\r\n      const pedido = {\r\n        Turma: null,\r\n        Curso: null,\r\n        vagasNaoPeriodizadas: 0,\r\n        vagasPeriodizadas: 0,\r\n        vagasOferecidas: 0,\r\n        vagasOcupadas: 0,\r\n      };\r\n      pedido.Turma = turmaId;\r\n      pedido.Curso = this.findCursoId(turmaFile[keys.cursoCod]);\r\n      pedido.vagasOferecidas = turmaFile[keys.vagas1];\r\n      pedido.vagasOcupadas = turmaFile[keys.vagas2];\r\n\r\n      if (pedido.Curso) {\r\n        await this.editPedido(pedido);\r\n      } else {\r\n        console.log(\"Curso não econtrado: \" + turmaFile[keys.cursoCod]);\r\n      }\r\n    },\r\n\r\n    findTurno(horario1Id, horario2Id) {\r\n      if (!horario1Id && !horario2Id) return null;\r\n      else if (horario1Id == 31) return \"EAD\";\r\n      else if (\r\n        this.$_.some(this.HorariosNoturno, [\"id\", horario1Id]) ||\r\n        this.$_.some(this.HorariosNoturno, [\"id\", horario2Id])\r\n      )\r\n        return \"Noturno\";\r\n      else return \"Diurno\";\r\n    },\r\n    findCursoId(cursoCodigo) {\r\n      const cursoFounded = this.$_.find(this.AllCursos, [\"codigo\", cursoCodigo]);\r\n      return cursoFounded ? cursoFounded.id : null;\r\n    },\r\n    findDocenteId(docenteNomeSiga) {\r\n      if (!docenteNomeSiga.length) return null;\r\n\r\n      const docenteFounded = this.$_.find(\r\n        this.AllDocentes,\r\n        (docente) => normalizeText(docente.nomesiga) === normalizeText(docenteNomeSiga)\r\n      );\r\n      return docenteFounded ? docenteFounded.id : null;\r\n    },\r\n    findDisciplinaId(disciplinaCodigo) {\r\n      const disciplinaFounded = this.$_.find(this.AllDisciplinas, [\r\n        \"codigo\",\r\n        disciplinaCodigo,\r\n      ]);\r\n\r\n      return disciplinaFounded ? disciplinaFounded.id : null;\r\n    },\r\n    findHorarioId(horarioString) {\r\n      if (!horarioString) return null;\r\n\r\n      const [dia, hora, sala] = horarioString.split(\",\");\r\n      const nomeHorario = this.parseDiaEHora(dia, hora);\r\n\r\n      if (nomeHorario) {\r\n        const horarioFounded = this.$_.find(this.AllHorarios, [\"horario\", nomeHorario]);\r\n\r\n        return horarioFounded ? horarioFounded.id : null;\r\n      }\r\n\r\n      if (normalizeText(sala).includes(normalizeText(\"HORÁRIO EAD\"))) {\r\n        console.log(\"EAD sala\", sala);\r\n        return 31; //Id EAD\r\n      }\r\n\r\n      return null;\r\n    },\r\n    parseDiaEHora(dia, hora) {\r\n      if (!dia || !hora) return null;\r\n\r\n      let diaNormalized = null;\r\n      let horaNormalized = null;\r\n      switch (\r\n        dia\r\n          .trim()\r\n          .substring(0, 3)\r\n          .toLowerCase()\r\n      ) {\r\n        case \"seg\":\r\n          diaNormalized = \"2a\";\r\n          break;\r\n        case \"ter\":\r\n          diaNormalized = \"3a\";\r\n          break;\r\n        case \"qua\":\r\n          diaNormalized = \"4a\";\r\n          break;\r\n        case \"qui\":\r\n          diaNormalized = \"5a\";\r\n          break;\r\n        case \"sex\":\r\n          diaNormalized = \"6a\";\r\n          break;\r\n        case \"sab\":\r\n          return \"EAD\";\r\n      }\r\n\r\n      const horarioFounded =\r\n        this.$_.find(this.ListaDeTodosHorarios, (horarioItem) =>\r\n          horarioItem.nome.includes(hora.substring(0, 2) + \"-\")\r\n        ) || {};\r\n\r\n      horaNormalized = horarioFounded.nome;\r\n\r\n      if (diaNormalized && horaNormalized) {\r\n        return diaNormalized + \" \" + horaNormalized;\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    findSalaId(salaString) {\r\n      if (!salaString) return null;\r\n\r\n      const [, , sala] = salaString.split(\",\");\r\n      const salaNormalized = normalizeText(sala);\r\n\r\n      const salaFounded = this.$_.find(this.AllSalas, (sala) => {\r\n        const nomeNormalized = normalizeText(sala.nome);\r\n        return salaNormalized.includes(nomeNormalized);\r\n      });\r\n\r\n      return salaFounded ? salaFounded.id : null;\r\n    },\r\n    isTheSameTurma(turma1, turma2) {\r\n      return (\r\n        turma1.letra === turma2.letra &&\r\n        turma1.Disciplina === turma2.Disciplina &&\r\n        turma1.turno1 === turma2.turno1 &&\r\n        turma1.Horario1 === turma2.Horario1 &&\r\n        turma1.Horario2 === turma2.Horario2\r\n      );\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\r\n      \"AllHorarios\",\r\n      \"HorariosNoturno\",\r\n      \"AllDisciplinas\",\r\n      \"AllCursos\",\r\n      \"ListaDeTodosHorarios\",\r\n      \"AllTurmas\",\r\n      \"AllSalas\",\r\n      \"AllDocentes\",\r\n      \"PeriodosLetivos\",\r\n    ]),\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImportPlano.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImportPlano.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ImportPlano.vue?vue&type=template&id=1275c2e8&\"\nimport script from \"./ImportPlano.vue?vue&type=script&lang=js&\"\nexport * from \"./ImportPlano.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","module.exports = require(\"core-js/library/fn/json/stringify\");"],"sourceRoot":""}