{"version":3,"sources":["webpack:///./src/services/pdfs/cargaDocentes.js"],"names":["pdfCargaDocentes","data","docentesCarga","docenteSemAlocacaoCarga","periodosAtivos","plano","tables","getHeaderImages","headerImages","semestre1EstaAtivo","some","semestre2EstaAtivo","ehCargaParcial","length","push","makePageHeader","images","title","docentesOrdered","orderBy","possuiAlgumaTurma","forEach","docente","turmas","semestre1","semestre2","cargasPos","cargaDoDocente","creditos1Semestre","creditos2Semestre","style","table","widths","headerRows","color","body","text","nome","alignment","fontSize","bold","layout","vLineWidth","tableBodyDocente","makeDocenteBodyHeader","store","getters","SemestresLetivos","semestre","id","turma","periodo","disciplina","codigo","letra","generateHorariosText","is1Semestre","creditosDaTurma","is2Semestre","carga","trimestre","programa","creditos","margin","hLineWidth","tableBodyDocenteSemAlocacao","makeEmptyPageWarning","docDefinition","info","content","footer","currentPage","pageCount","columns","Date","now","toLocaleString","toString","pdfMake","createPdf","open","vfs","pdfFonts"],"mappings":"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","file":"js/chunk-2d0dab1e.6539911b.js","sourcesContent":["import {\r\n  makePageHeader,\r\n  makeEmptyPageWarning,\r\n  generateHorariosText,\r\n  getHeaderImages,\r\n  is1Semestre,\r\n  is2Semestre,\r\n} from \"./helpers\";\r\nimport store from \"@/store\";\r\nimport { orderBy, some } from \"lodash-es\";\r\nimport pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nexport async function pdfCargaDocentes(data) {\r\n  const { docentesCarga, docenteSemAlocacaoCarga, periodosAtivos, plano } = data;\r\n  const tables = [];\r\n  const headerImages = await getHeaderImages();\r\n  const semestre1EstaAtivo = some(periodosAtivos, [\"semestreId\", 1]);\r\n  const semestre2EstaAtivo = some(periodosAtivos, [\"semestreId\", 2]);\r\n  const ehCargaParcial = periodosAtivos.length !== 4; //Se não possui algum periodos é uma carga parcial\r\n\r\n  tables.push(\r\n    makePageHeader({\r\n      images: headerImages,\r\n      plano,\r\n      title: \"Relação de disciplinas ministradas pelos docentes\",\r\n    })\r\n  );\r\n\r\n  if ((!docentesCarga.length && !docenteSemAlocacaoCarga) || !periodosAtivos.length) {\r\n    tables.push(makeEmptyPageWarning());\r\n  } else {\r\n    const docentesOrdered = orderBy(docentesCarga, \"nome\");\r\n    let possuiAlgumaTurma = false;\r\n\r\n    docentesOrdered.forEach((docente) => {\r\n      if (\r\n        docente.turmas.semestre1.length ||\r\n        docente.turmas.semestre2.length ||\r\n        docente.cargasPos.semestre2.length ||\r\n        docente.cargasPos.semestre2.length\r\n      ) {\r\n        possuiAlgumaTurma = true;\r\n        const cargaDoDocente = docente.creditos1Semestre + docente.creditos2Semestre;\r\n        tables.push({\r\n          style: \"tableExample\",\r\n          table: {\r\n            widths: [\"*\", 75],\r\n            headerRows: 1,\r\n            color: \"#426\",\r\n            body: [\r\n              [\r\n                { text: docente.nome, alignment: \"left\", fontSize: 9, bold: true },\r\n                {\r\n                  text: `Carga ${ehCargaParcial ? \"parcial\" : \"total\"}: ${cargaDoDocente}`,\r\n                  alignment: \"center\",\r\n                  fontSize: 9,\r\n                  bold: true,\r\n                },\r\n              ],\r\n            ],\r\n          },\r\n          layout: { vLineWidth: () => 0 },\r\n        });\r\n        const tableBodyDocente = [makeDocenteBodyHeader()];\r\n\r\n        store.getters.SemestresLetivos.forEach((semestre) => {\r\n          docente.turmas[`semestre${semestre.id}`].forEach((turma) => {\r\n            tableBodyDocente.push([\r\n              \"\",\r\n              { text: turma.periodo, fontSize: 6, alignment: \"left\" },\r\n              { text: turma.disciplina.codigo, fontSize: 6, alignment: \"left\" },\r\n              { text: turma.disciplina.nome, fontSize: 6, alignment: \"left\" },\r\n              { text: turma.letra, fontSize: 6, alignment: \"center\" },\r\n              { text: generateHorariosText(turma, \" / \"), fontSize: 6, alignment: \"center\" },\r\n              {\r\n                text: is1Semestre(turma.periodo) ? turma.creditosDaTurma : \"\",\r\n                fontSize: 6,\r\n                alignment: \"center\",\r\n              },\r\n              {\r\n                text: is2Semestre(turma.periodo) ? turma.creditosDaTurma : \"\",\r\n                fontSize: 6,\r\n                alignment: \"center\",\r\n              },\r\n            ]);\r\n          });\r\n\r\n          docente.cargasPos[`semestre${semestre.id}`].forEach((carga) => {\r\n            tableBodyDocente.push([\r\n              \"\",\r\n              { text: carga.trimestre, fontSize: 6, alignment: \"left\" },\r\n              \"\",\r\n              { text: \"DISCIPLINA DO \" + carga.programa, fontSize: 6, alignment: \"left\" },\r\n              \"\",\r\n              \"\",\r\n              {\r\n                text: is1Semestre(carga.trimestre) ? carga.creditos : \"\",\r\n                fontSize: 6,\r\n                alignment: \"center\",\r\n              },\r\n              {\r\n                text: is2Semestre(carga.trimestre) ? carga.creditos : \"\",\r\n                fontSize: 6,\r\n                alignment: \"center\",\r\n              },\r\n            ]);\r\n          });\r\n        });\r\n\r\n        tableBodyDocente.push([\r\n          \"\",\r\n          \"\",\r\n          \"\",\r\n          \"\",\r\n          \"\",\r\n          {\r\n            text: \"CARGA POR SEMESTRE:\",\r\n            fontSize: 6,\r\n            alignment: \"right\",\r\n            bold: true,\r\n            margin: [0, 5, 0, 0],\r\n          },\r\n          {\r\n            text: semestre1EstaAtivo ? docente.creditos1Semestre : \"\",\r\n            fontSize: 6,\r\n            alignment: \"center\",\r\n            bold: true,\r\n            margin: [0, 5, 0, 0],\r\n          },\r\n          {\r\n            text: semestre2EstaAtivo ? docente.creditos2Semestre : \"\",\r\n            fontSize: 6,\r\n            alignment: \"center\",\r\n            bold: true,\r\n            margin: [0, 5, 0, 0],\r\n          },\r\n        ]);\r\n\r\n        tables.push({\r\n          style: \"tableExample\",\r\n          table: {\r\n            widths: [20, 8, 40, \"*\", 24, 104, 32, 32],\r\n            headerRows: 1,\r\n            color: \"#426\",\r\n            body: tableBodyDocente,\r\n          },\r\n          layout: { vLineWidth: () => 0, hLineWidth: () => 0 },\r\n          margin: [0, 0, 0, 5],\r\n        });\r\n      }\r\n    });\r\n\r\n    if (docenteSemAlocacaoCarga && docenteSemAlocacaoCarga.turmas.length) {\r\n      possuiAlgumaTurma = true;\r\n      const cargaDoDocente =\r\n        docenteSemAlocacaoCarga.creditos1Semestre + docenteSemAlocacaoCarga.creditos2Semestre;\r\n      tables.push({\r\n        style: \"tableExample\",\r\n        table: {\r\n          widths: [\"*\", 75],\r\n          headerRows: 1,\r\n          color: \"#426\",\r\n          body: [\r\n            [\r\n              { text: docenteSemAlocacaoCarga.nome, alignment: \"left\", fontSize: 9, bold: true },\r\n              {\r\n                text: `Carga ${ehCargaParcial ? \"parcial\" : \"total\"} : ${cargaDoDocente}`,\r\n                alignment: \"center\",\r\n                fontSize: 9,\r\n                bold: true,\r\n              },\r\n            ],\r\n          ],\r\n        },\r\n        layout: {\r\n          vLineWidth: () => 0,\r\n        },\r\n      });\r\n      const tableBodyDocenteSemAlocacao = [makeDocenteBodyHeader()];\r\n\r\n      docenteSemAlocacaoCarga.turmas.forEach((turma) => {\r\n        tableBodyDocenteSemAlocacao.push([\r\n          \"\",\r\n          { text: turma.periodo, fontSize: 6, alignment: \"left\" },\r\n          { text: turma.disciplina.codigo, fontSize: 6, alignment: \"left\" },\r\n          { text: turma.disciplina.nome, fontSize: 6, alignment: \"left\" },\r\n          { text: turma.letra, fontSize: 6, alignment: \"center\" },\r\n          { text: generateHorariosText(turma, \" / \"), fontSize: 6, alignment: \"center\" },\r\n          {\r\n            text: is1Semestre(turma.periodo) ? turma.creditosDaTurma : \"\",\r\n            fontSize: 6,\r\n            alignment: \"center\",\r\n          },\r\n          {\r\n            text: is2Semestre(turma.periodo) ? turma.creditosDaTurma : \"\",\r\n            fontSize: 6,\r\n            alignment: \"center\",\r\n          },\r\n        ]);\r\n      });\r\n\r\n      tableBodyDocenteSemAlocacao.push([\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        {\r\n          text: \"CARGA POR SEMESTRE:\",\r\n          fontSize: 6,\r\n          alignment: \"right\",\r\n          bold: true,\r\n          margin: [0, 5, 0, 0],\r\n        },\r\n        {\r\n          text: semestre1EstaAtivo ? docenteSemAlocacaoCarga.creditos1Semestre : \"\",\r\n          fontSize: 6,\r\n          alignment: \"center\",\r\n          bold: true,\r\n          margin: [0, 5, 0, 0],\r\n        },\r\n        {\r\n          text: semestre2EstaAtivo ? docenteSemAlocacaoCarga.creditos2Semestre : \"\",\r\n          fontSize: 6,\r\n          alignment: \"center\",\r\n          bold: true,\r\n          margin: [0, 5, 0, 0],\r\n        },\r\n      ]);\r\n\r\n      tables.push({\r\n        style: \"tableExample\",\r\n        table: {\r\n          widths: [20, 8, 40, \"*\", 24, 104, 32, 32],\r\n          headerRows: 1,\r\n          color: \"#426\",\r\n          body: tableBodyDocenteSemAlocacao,\r\n        },\r\n        layout: { vLineWidth: () => 0, hLineWidth: () => 0 },\r\n        margin: [0, 0, 0, 5],\r\n      });\r\n    }\r\n\r\n    if (!possuiAlgumaTurma) {\r\n      tables.push(makeEmptyPageWarning());\r\n    }\r\n  }\r\n\r\n  const docDefinition = {\r\n    info: { title: \"Carga Docentes\" },\r\n    content: tables,\r\n    footer: (currentPage, pageCount) => {\r\n      return {\r\n        columns: [\r\n          {\r\n            text: new Date(Date.now()).toLocaleString(),\r\n            margin: [30, 10, 0, 0],\r\n            fontSize: 8,\r\n            alignment: \"left\",\r\n          },\r\n          {\r\n            text: currentPage.toString() + \" de \" + pageCount,\r\n            alignment: \"right\",\r\n            margin: [0, 10, 30, 0],\r\n            fontSize: 8,\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  };\r\n  pdfMake.createPdf(docDefinition).open();\r\n}\r\n\r\nfunction makeDocenteBodyHeader() {\r\n  return [\r\n    \"\",\r\n    { text: \"S.\", fontSize: 8, bold: true },\r\n    { text: \"Cód.\", fontSize: 8, bold: true },\r\n    { text: \"Disciplina\", fontSize: 8, bold: true },\r\n    { text: \"Turma\", alignment: \"center\", fontSize: 8, bold: true },\r\n    { text: \"Horário\", alignment: \"center\", fontSize: 8, bold: true },\r\n    { text: \"CS1\", alignment: \"center\", fontSize: 8, bold: true },\r\n    { text: \"CS2\", alignment: \"center\", fontSize: 8, bold: true },\r\n  ];\r\n}\r\n"],"sourceRoot":""}